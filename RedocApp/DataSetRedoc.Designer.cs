//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace RedocApp {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSetRedoc")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSetRedoc : global::System.Data.DataSet {
        
        private CAB_EXCEPTION_HORAIREDataTable tableCAB_EXCEPTION_HORAIRE;
        
        private CAB_FACTUREDataTable tableCAB_FACTURE;
        
        private CAB_HORAIREDataTable tableCAB_HORAIRE;
        
        private CAB_LIGNE_FACTUREDataTable tableCAB_LIGNE_FACTURE;
        
        private CAB_LISTE_EXAMENSDataTable tableCAB_LISTE_EXAMENS;
        
        private CAB_PATIENTDataTable tableCAB_PATIENT;
        
        private CAB_RENDEZVOUSDataTable tableCAB_RENDEZVOUS;
        
        private CAB_SPE_UTILISATEURDataTable tableCAB_SPE_UTILISATEUR;
        
        private CAB_SPECIALISATIONDataTable tableCAB_SPECIALISATION;
        
        private CAB_UTILISATEURDataTable tableCAB_UTILISATEUR;
        
        private VW_DOCTEURDataTable tableVW_DOCTEUR;
        
        private VW_EXAMENDataTable tableVW_EXAMEN;
        
        private VW_HORAIRE_DOCTEURDataTable tableVW_HORAIRE_DOCTEUR;
        
        private VW_PATIENTDataTable tableVW_PATIENT;
        
        private VW_EXCEPTION_HORAIRE_DOCTEURDataTable tableVW_EXCEPTION_HORAIRE_DOCTEUR;
        
        private VW_FACTUREDataTable tableVW_FACTURE;
        
        private VW_RENDEZVOUSDataTable tableVW_RENDEZVOUS;
        
        private VW_EXAMENS_FACTUREDataTable tableVW_EXAMENS_FACTURE;
        
        private global::System.Data.DataRelation relationFK_CAB_EXCEPTION_HORAIRE_CAB_U;
        
        private global::System.Data.DataRelation relationFK_CAB_FACTURE_CAB_RENDEZVOUS;
        
        private global::System.Data.DataRelation relationFK_CAB_HORAIRE_CAB_UTILISATEUR;
        
        private global::System.Data.DataRelation relationFK_CAB_LIGNE_FACTURE_CAB_FACTU;
        
        private global::System.Data.DataRelation relationFK_CAB_LIGNE_FACTURE_CAB_LISTE;
        
        private global::System.Data.DataRelation relationFK_CAB_RENDEZVOUS_CAB_PATIENT;
        
        private global::System.Data.DataRelation relationFK_CAB_RENDEZVOUS_CAB_UTILISAT;
        
        private global::System.Data.DataRelation relationFK_CAB_SPE_UTILISATEUR_CAB_SPE;
        
        private global::System.Data.DataRelation relationFK_CAB_SPE_UTILISATEUR_CAB_UTI;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public DataSetRedoc() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected DataSetRedoc(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["CAB_EXCEPTION_HORAIRE"] != null)) {
                    base.Tables.Add(new CAB_EXCEPTION_HORAIREDataTable(ds.Tables["CAB_EXCEPTION_HORAIRE"]));
                }
                if ((ds.Tables["CAB_FACTURE"] != null)) {
                    base.Tables.Add(new CAB_FACTUREDataTable(ds.Tables["CAB_FACTURE"]));
                }
                if ((ds.Tables["CAB_HORAIRE"] != null)) {
                    base.Tables.Add(new CAB_HORAIREDataTable(ds.Tables["CAB_HORAIRE"]));
                }
                if ((ds.Tables["CAB_LIGNE_FACTURE"] != null)) {
                    base.Tables.Add(new CAB_LIGNE_FACTUREDataTable(ds.Tables["CAB_LIGNE_FACTURE"]));
                }
                if ((ds.Tables["CAB_LISTE_EXAMENS"] != null)) {
                    base.Tables.Add(new CAB_LISTE_EXAMENSDataTable(ds.Tables["CAB_LISTE_EXAMENS"]));
                }
                if ((ds.Tables["CAB_PATIENT"] != null)) {
                    base.Tables.Add(new CAB_PATIENTDataTable(ds.Tables["CAB_PATIENT"]));
                }
                if ((ds.Tables["CAB_RENDEZVOUS"] != null)) {
                    base.Tables.Add(new CAB_RENDEZVOUSDataTable(ds.Tables["CAB_RENDEZVOUS"]));
                }
                if ((ds.Tables["CAB_SPE_UTILISATEUR"] != null)) {
                    base.Tables.Add(new CAB_SPE_UTILISATEURDataTable(ds.Tables["CAB_SPE_UTILISATEUR"]));
                }
                if ((ds.Tables["CAB_SPECIALISATION"] != null)) {
                    base.Tables.Add(new CAB_SPECIALISATIONDataTable(ds.Tables["CAB_SPECIALISATION"]));
                }
                if ((ds.Tables["CAB_UTILISATEUR"] != null)) {
                    base.Tables.Add(new CAB_UTILISATEURDataTable(ds.Tables["CAB_UTILISATEUR"]));
                }
                if ((ds.Tables["VW_DOCTEUR"] != null)) {
                    base.Tables.Add(new VW_DOCTEURDataTable(ds.Tables["VW_DOCTEUR"]));
                }
                if ((ds.Tables["VW_EXAMEN"] != null)) {
                    base.Tables.Add(new VW_EXAMENDataTable(ds.Tables["VW_EXAMEN"]));
                }
                if ((ds.Tables["VW_HORAIRE_DOCTEUR"] != null)) {
                    base.Tables.Add(new VW_HORAIRE_DOCTEURDataTable(ds.Tables["VW_HORAIRE_DOCTEUR"]));
                }
                if ((ds.Tables["VW_PATIENT"] != null)) {
                    base.Tables.Add(new VW_PATIENTDataTable(ds.Tables["VW_PATIENT"]));
                }
                if ((ds.Tables["VW_EXCEPTION_HORAIRE_DOCTEUR"] != null)) {
                    base.Tables.Add(new VW_EXCEPTION_HORAIRE_DOCTEURDataTable(ds.Tables["VW_EXCEPTION_HORAIRE_DOCTEUR"]));
                }
                if ((ds.Tables["VW_FACTURE"] != null)) {
                    base.Tables.Add(new VW_FACTUREDataTable(ds.Tables["VW_FACTURE"]));
                }
                if ((ds.Tables["VW_RENDEZVOUS"] != null)) {
                    base.Tables.Add(new VW_RENDEZVOUSDataTable(ds.Tables["VW_RENDEZVOUS"]));
                }
                if ((ds.Tables["VW_EXAMENS_FACTURE"] != null)) {
                    base.Tables.Add(new VW_EXAMENS_FACTUREDataTable(ds.Tables["VW_EXAMENS_FACTURE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CAB_EXCEPTION_HORAIREDataTable CAB_EXCEPTION_HORAIRE {
            get {
                return this.tableCAB_EXCEPTION_HORAIRE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CAB_FACTUREDataTable CAB_FACTURE {
            get {
                return this.tableCAB_FACTURE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CAB_HORAIREDataTable CAB_HORAIRE {
            get {
                return this.tableCAB_HORAIRE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CAB_LIGNE_FACTUREDataTable CAB_LIGNE_FACTURE {
            get {
                return this.tableCAB_LIGNE_FACTURE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CAB_LISTE_EXAMENSDataTable CAB_LISTE_EXAMENS {
            get {
                return this.tableCAB_LISTE_EXAMENS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CAB_PATIENTDataTable CAB_PATIENT {
            get {
                return this.tableCAB_PATIENT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CAB_RENDEZVOUSDataTable CAB_RENDEZVOUS {
            get {
                return this.tableCAB_RENDEZVOUS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CAB_SPE_UTILISATEURDataTable CAB_SPE_UTILISATEUR {
            get {
                return this.tableCAB_SPE_UTILISATEUR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CAB_SPECIALISATIONDataTable CAB_SPECIALISATION {
            get {
                return this.tableCAB_SPECIALISATION;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CAB_UTILISATEURDataTable CAB_UTILISATEUR {
            get {
                return this.tableCAB_UTILISATEUR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public VW_DOCTEURDataTable VW_DOCTEUR {
            get {
                return this.tableVW_DOCTEUR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public VW_EXAMENDataTable VW_EXAMEN {
            get {
                return this.tableVW_EXAMEN;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public VW_HORAIRE_DOCTEURDataTable VW_HORAIRE_DOCTEUR {
            get {
                return this.tableVW_HORAIRE_DOCTEUR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public VW_PATIENTDataTable VW_PATIENT {
            get {
                return this.tableVW_PATIENT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public VW_EXCEPTION_HORAIRE_DOCTEURDataTable VW_EXCEPTION_HORAIRE_DOCTEUR {
            get {
                return this.tableVW_EXCEPTION_HORAIRE_DOCTEUR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public VW_FACTUREDataTable VW_FACTURE {
            get {
                return this.tableVW_FACTURE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public VW_RENDEZVOUSDataTable VW_RENDEZVOUS {
            get {
                return this.tableVW_RENDEZVOUS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public VW_EXAMENS_FACTUREDataTable VW_EXAMENS_FACTURE {
            get {
                return this.tableVW_EXAMENS_FACTURE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSetRedoc cln = ((DataSetRedoc)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["CAB_EXCEPTION_HORAIRE"] != null)) {
                    base.Tables.Add(new CAB_EXCEPTION_HORAIREDataTable(ds.Tables["CAB_EXCEPTION_HORAIRE"]));
                }
                if ((ds.Tables["CAB_FACTURE"] != null)) {
                    base.Tables.Add(new CAB_FACTUREDataTable(ds.Tables["CAB_FACTURE"]));
                }
                if ((ds.Tables["CAB_HORAIRE"] != null)) {
                    base.Tables.Add(new CAB_HORAIREDataTable(ds.Tables["CAB_HORAIRE"]));
                }
                if ((ds.Tables["CAB_LIGNE_FACTURE"] != null)) {
                    base.Tables.Add(new CAB_LIGNE_FACTUREDataTable(ds.Tables["CAB_LIGNE_FACTURE"]));
                }
                if ((ds.Tables["CAB_LISTE_EXAMENS"] != null)) {
                    base.Tables.Add(new CAB_LISTE_EXAMENSDataTable(ds.Tables["CAB_LISTE_EXAMENS"]));
                }
                if ((ds.Tables["CAB_PATIENT"] != null)) {
                    base.Tables.Add(new CAB_PATIENTDataTable(ds.Tables["CAB_PATIENT"]));
                }
                if ((ds.Tables["CAB_RENDEZVOUS"] != null)) {
                    base.Tables.Add(new CAB_RENDEZVOUSDataTable(ds.Tables["CAB_RENDEZVOUS"]));
                }
                if ((ds.Tables["CAB_SPE_UTILISATEUR"] != null)) {
                    base.Tables.Add(new CAB_SPE_UTILISATEURDataTable(ds.Tables["CAB_SPE_UTILISATEUR"]));
                }
                if ((ds.Tables["CAB_SPECIALISATION"] != null)) {
                    base.Tables.Add(new CAB_SPECIALISATIONDataTable(ds.Tables["CAB_SPECIALISATION"]));
                }
                if ((ds.Tables["CAB_UTILISATEUR"] != null)) {
                    base.Tables.Add(new CAB_UTILISATEURDataTable(ds.Tables["CAB_UTILISATEUR"]));
                }
                if ((ds.Tables["VW_DOCTEUR"] != null)) {
                    base.Tables.Add(new VW_DOCTEURDataTable(ds.Tables["VW_DOCTEUR"]));
                }
                if ((ds.Tables["VW_EXAMEN"] != null)) {
                    base.Tables.Add(new VW_EXAMENDataTable(ds.Tables["VW_EXAMEN"]));
                }
                if ((ds.Tables["VW_HORAIRE_DOCTEUR"] != null)) {
                    base.Tables.Add(new VW_HORAIRE_DOCTEURDataTable(ds.Tables["VW_HORAIRE_DOCTEUR"]));
                }
                if ((ds.Tables["VW_PATIENT"] != null)) {
                    base.Tables.Add(new VW_PATIENTDataTable(ds.Tables["VW_PATIENT"]));
                }
                if ((ds.Tables["VW_EXCEPTION_HORAIRE_DOCTEUR"] != null)) {
                    base.Tables.Add(new VW_EXCEPTION_HORAIRE_DOCTEURDataTable(ds.Tables["VW_EXCEPTION_HORAIRE_DOCTEUR"]));
                }
                if ((ds.Tables["VW_FACTURE"] != null)) {
                    base.Tables.Add(new VW_FACTUREDataTable(ds.Tables["VW_FACTURE"]));
                }
                if ((ds.Tables["VW_RENDEZVOUS"] != null)) {
                    base.Tables.Add(new VW_RENDEZVOUSDataTable(ds.Tables["VW_RENDEZVOUS"]));
                }
                if ((ds.Tables["VW_EXAMENS_FACTURE"] != null)) {
                    base.Tables.Add(new VW_EXAMENS_FACTUREDataTable(ds.Tables["VW_EXAMENS_FACTURE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableCAB_EXCEPTION_HORAIRE = ((CAB_EXCEPTION_HORAIREDataTable)(base.Tables["CAB_EXCEPTION_HORAIRE"]));
            if ((initTable == true)) {
                if ((this.tableCAB_EXCEPTION_HORAIRE != null)) {
                    this.tableCAB_EXCEPTION_HORAIRE.InitVars();
                }
            }
            this.tableCAB_FACTURE = ((CAB_FACTUREDataTable)(base.Tables["CAB_FACTURE"]));
            if ((initTable == true)) {
                if ((this.tableCAB_FACTURE != null)) {
                    this.tableCAB_FACTURE.InitVars();
                }
            }
            this.tableCAB_HORAIRE = ((CAB_HORAIREDataTable)(base.Tables["CAB_HORAIRE"]));
            if ((initTable == true)) {
                if ((this.tableCAB_HORAIRE != null)) {
                    this.tableCAB_HORAIRE.InitVars();
                }
            }
            this.tableCAB_LIGNE_FACTURE = ((CAB_LIGNE_FACTUREDataTable)(base.Tables["CAB_LIGNE_FACTURE"]));
            if ((initTable == true)) {
                if ((this.tableCAB_LIGNE_FACTURE != null)) {
                    this.tableCAB_LIGNE_FACTURE.InitVars();
                }
            }
            this.tableCAB_LISTE_EXAMENS = ((CAB_LISTE_EXAMENSDataTable)(base.Tables["CAB_LISTE_EXAMENS"]));
            if ((initTable == true)) {
                if ((this.tableCAB_LISTE_EXAMENS != null)) {
                    this.tableCAB_LISTE_EXAMENS.InitVars();
                }
            }
            this.tableCAB_PATIENT = ((CAB_PATIENTDataTable)(base.Tables["CAB_PATIENT"]));
            if ((initTable == true)) {
                if ((this.tableCAB_PATIENT != null)) {
                    this.tableCAB_PATIENT.InitVars();
                }
            }
            this.tableCAB_RENDEZVOUS = ((CAB_RENDEZVOUSDataTable)(base.Tables["CAB_RENDEZVOUS"]));
            if ((initTable == true)) {
                if ((this.tableCAB_RENDEZVOUS != null)) {
                    this.tableCAB_RENDEZVOUS.InitVars();
                }
            }
            this.tableCAB_SPE_UTILISATEUR = ((CAB_SPE_UTILISATEURDataTable)(base.Tables["CAB_SPE_UTILISATEUR"]));
            if ((initTable == true)) {
                if ((this.tableCAB_SPE_UTILISATEUR != null)) {
                    this.tableCAB_SPE_UTILISATEUR.InitVars();
                }
            }
            this.tableCAB_SPECIALISATION = ((CAB_SPECIALISATIONDataTable)(base.Tables["CAB_SPECIALISATION"]));
            if ((initTable == true)) {
                if ((this.tableCAB_SPECIALISATION != null)) {
                    this.tableCAB_SPECIALISATION.InitVars();
                }
            }
            this.tableCAB_UTILISATEUR = ((CAB_UTILISATEURDataTable)(base.Tables["CAB_UTILISATEUR"]));
            if ((initTable == true)) {
                if ((this.tableCAB_UTILISATEUR != null)) {
                    this.tableCAB_UTILISATEUR.InitVars();
                }
            }
            this.tableVW_DOCTEUR = ((VW_DOCTEURDataTable)(base.Tables["VW_DOCTEUR"]));
            if ((initTable == true)) {
                if ((this.tableVW_DOCTEUR != null)) {
                    this.tableVW_DOCTEUR.InitVars();
                }
            }
            this.tableVW_EXAMEN = ((VW_EXAMENDataTable)(base.Tables["VW_EXAMEN"]));
            if ((initTable == true)) {
                if ((this.tableVW_EXAMEN != null)) {
                    this.tableVW_EXAMEN.InitVars();
                }
            }
            this.tableVW_HORAIRE_DOCTEUR = ((VW_HORAIRE_DOCTEURDataTable)(base.Tables["VW_HORAIRE_DOCTEUR"]));
            if ((initTable == true)) {
                if ((this.tableVW_HORAIRE_DOCTEUR != null)) {
                    this.tableVW_HORAIRE_DOCTEUR.InitVars();
                }
            }
            this.tableVW_PATIENT = ((VW_PATIENTDataTable)(base.Tables["VW_PATIENT"]));
            if ((initTable == true)) {
                if ((this.tableVW_PATIENT != null)) {
                    this.tableVW_PATIENT.InitVars();
                }
            }
            this.tableVW_EXCEPTION_HORAIRE_DOCTEUR = ((VW_EXCEPTION_HORAIRE_DOCTEURDataTable)(base.Tables["VW_EXCEPTION_HORAIRE_DOCTEUR"]));
            if ((initTable == true)) {
                if ((this.tableVW_EXCEPTION_HORAIRE_DOCTEUR != null)) {
                    this.tableVW_EXCEPTION_HORAIRE_DOCTEUR.InitVars();
                }
            }
            this.tableVW_FACTURE = ((VW_FACTUREDataTable)(base.Tables["VW_FACTURE"]));
            if ((initTable == true)) {
                if ((this.tableVW_FACTURE != null)) {
                    this.tableVW_FACTURE.InitVars();
                }
            }
            this.tableVW_RENDEZVOUS = ((VW_RENDEZVOUSDataTable)(base.Tables["VW_RENDEZVOUS"]));
            if ((initTable == true)) {
                if ((this.tableVW_RENDEZVOUS != null)) {
                    this.tableVW_RENDEZVOUS.InitVars();
                }
            }
            this.tableVW_EXAMENS_FACTURE = ((VW_EXAMENS_FACTUREDataTable)(base.Tables["VW_EXAMENS_FACTURE"]));
            if ((initTable == true)) {
                if ((this.tableVW_EXAMENS_FACTURE != null)) {
                    this.tableVW_EXAMENS_FACTURE.InitVars();
                }
            }
            this.relationFK_CAB_EXCEPTION_HORAIRE_CAB_U = this.Relations["FK_CAB_EXCEPTION_HORAIRE_CAB_U"];
            this.relationFK_CAB_FACTURE_CAB_RENDEZVOUS = this.Relations["FK_CAB_FACTURE_CAB_RENDEZVOUS"];
            this.relationFK_CAB_HORAIRE_CAB_UTILISATEUR = this.Relations["FK_CAB_HORAIRE_CAB_UTILISATEUR"];
            this.relationFK_CAB_LIGNE_FACTURE_CAB_FACTU = this.Relations["FK_CAB_LIGNE_FACTURE_CAB_FACTU"];
            this.relationFK_CAB_LIGNE_FACTURE_CAB_LISTE = this.Relations["FK_CAB_LIGNE_FACTURE_CAB_LISTE"];
            this.relationFK_CAB_RENDEZVOUS_CAB_PATIENT = this.Relations["FK_CAB_RENDEZVOUS_CAB_PATIENT"];
            this.relationFK_CAB_RENDEZVOUS_CAB_UTILISAT = this.Relations["FK_CAB_RENDEZVOUS_CAB_UTILISAT"];
            this.relationFK_CAB_SPE_UTILISATEUR_CAB_SPE = this.Relations["FK_CAB_SPE_UTILISATEUR_CAB_SPE"];
            this.relationFK_CAB_SPE_UTILISATEUR_CAB_UTI = this.Relations["FK_CAB_SPE_UTILISATEUR_CAB_UTI"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSetRedoc";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSetRedoc.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCAB_EXCEPTION_HORAIRE = new CAB_EXCEPTION_HORAIREDataTable();
            base.Tables.Add(this.tableCAB_EXCEPTION_HORAIRE);
            this.tableCAB_FACTURE = new CAB_FACTUREDataTable();
            base.Tables.Add(this.tableCAB_FACTURE);
            this.tableCAB_HORAIRE = new CAB_HORAIREDataTable();
            base.Tables.Add(this.tableCAB_HORAIRE);
            this.tableCAB_LIGNE_FACTURE = new CAB_LIGNE_FACTUREDataTable();
            base.Tables.Add(this.tableCAB_LIGNE_FACTURE);
            this.tableCAB_LISTE_EXAMENS = new CAB_LISTE_EXAMENSDataTable();
            base.Tables.Add(this.tableCAB_LISTE_EXAMENS);
            this.tableCAB_PATIENT = new CAB_PATIENTDataTable();
            base.Tables.Add(this.tableCAB_PATIENT);
            this.tableCAB_RENDEZVOUS = new CAB_RENDEZVOUSDataTable();
            base.Tables.Add(this.tableCAB_RENDEZVOUS);
            this.tableCAB_SPE_UTILISATEUR = new CAB_SPE_UTILISATEURDataTable();
            base.Tables.Add(this.tableCAB_SPE_UTILISATEUR);
            this.tableCAB_SPECIALISATION = new CAB_SPECIALISATIONDataTable();
            base.Tables.Add(this.tableCAB_SPECIALISATION);
            this.tableCAB_UTILISATEUR = new CAB_UTILISATEURDataTable();
            base.Tables.Add(this.tableCAB_UTILISATEUR);
            this.tableVW_DOCTEUR = new VW_DOCTEURDataTable();
            base.Tables.Add(this.tableVW_DOCTEUR);
            this.tableVW_EXAMEN = new VW_EXAMENDataTable();
            base.Tables.Add(this.tableVW_EXAMEN);
            this.tableVW_HORAIRE_DOCTEUR = new VW_HORAIRE_DOCTEURDataTable();
            base.Tables.Add(this.tableVW_HORAIRE_DOCTEUR);
            this.tableVW_PATIENT = new VW_PATIENTDataTable();
            base.Tables.Add(this.tableVW_PATIENT);
            this.tableVW_EXCEPTION_HORAIRE_DOCTEUR = new VW_EXCEPTION_HORAIRE_DOCTEURDataTable();
            base.Tables.Add(this.tableVW_EXCEPTION_HORAIRE_DOCTEUR);
            this.tableVW_FACTURE = new VW_FACTUREDataTable();
            base.Tables.Add(this.tableVW_FACTURE);
            this.tableVW_RENDEZVOUS = new VW_RENDEZVOUSDataTable();
            base.Tables.Add(this.tableVW_RENDEZVOUS);
            this.tableVW_EXAMENS_FACTURE = new VW_EXAMENS_FACTUREDataTable();
            base.Tables.Add(this.tableVW_EXAMENS_FACTURE);
            this.relationFK_CAB_EXCEPTION_HORAIRE_CAB_U = new global::System.Data.DataRelation("FK_CAB_EXCEPTION_HORAIRE_CAB_U", new global::System.Data.DataColumn[] {
                        this.tableCAB_UTILISATEUR.UTI_NOColumn}, new global::System.Data.DataColumn[] {
                        this.tableCAB_EXCEPTION_HORAIRE.EXC_UTI_NOColumn}, false);
            this.Relations.Add(this.relationFK_CAB_EXCEPTION_HORAIRE_CAB_U);
            this.relationFK_CAB_FACTURE_CAB_RENDEZVOUS = new global::System.Data.DataRelation("FK_CAB_FACTURE_CAB_RENDEZVOUS", new global::System.Data.DataColumn[] {
                        this.tableCAB_RENDEZVOUS.REN_NOColumn}, new global::System.Data.DataColumn[] {
                        this.tableCAB_FACTURE.FAC_REN_NOColumn}, false);
            this.Relations.Add(this.relationFK_CAB_FACTURE_CAB_RENDEZVOUS);
            this.relationFK_CAB_HORAIRE_CAB_UTILISATEUR = new global::System.Data.DataRelation("FK_CAB_HORAIRE_CAB_UTILISATEUR", new global::System.Data.DataColumn[] {
                        this.tableCAB_UTILISATEUR.UTI_NOColumn}, new global::System.Data.DataColumn[] {
                        this.tableCAB_HORAIRE.HOR_UTI_NOColumn}, false);
            this.Relations.Add(this.relationFK_CAB_HORAIRE_CAB_UTILISATEUR);
            this.relationFK_CAB_LIGNE_FACTURE_CAB_FACTU = new global::System.Data.DataRelation("FK_CAB_LIGNE_FACTURE_CAB_FACTU", new global::System.Data.DataColumn[] {
                        this.tableCAB_FACTURE.FAC_NOColumn}, new global::System.Data.DataColumn[] {
                        this.tableCAB_LIGNE_FACTURE.LIG_FAC_NOColumn}, false);
            this.Relations.Add(this.relationFK_CAB_LIGNE_FACTURE_CAB_FACTU);
            this.relationFK_CAB_LIGNE_FACTURE_CAB_LISTE = new global::System.Data.DataRelation("FK_CAB_LIGNE_FACTURE_CAB_LISTE", new global::System.Data.DataColumn[] {
                        this.tableCAB_LISTE_EXAMENS.LIS_NOColumn}, new global::System.Data.DataColumn[] {
                        this.tableCAB_LIGNE_FACTURE.LIG_LIS_NOColumn}, false);
            this.Relations.Add(this.relationFK_CAB_LIGNE_FACTURE_CAB_LISTE);
            this.relationFK_CAB_RENDEZVOUS_CAB_PATIENT = new global::System.Data.DataRelation("FK_CAB_RENDEZVOUS_CAB_PATIENT", new global::System.Data.DataColumn[] {
                        this.tableCAB_PATIENT.PAT_NOColumn}, new global::System.Data.DataColumn[] {
                        this.tableCAB_RENDEZVOUS.REN_PAT_NOColumn}, false);
            this.Relations.Add(this.relationFK_CAB_RENDEZVOUS_CAB_PATIENT);
            this.relationFK_CAB_RENDEZVOUS_CAB_UTILISAT = new global::System.Data.DataRelation("FK_CAB_RENDEZVOUS_CAB_UTILISAT", new global::System.Data.DataColumn[] {
                        this.tableCAB_UTILISATEUR.UTI_NOColumn}, new global::System.Data.DataColumn[] {
                        this.tableCAB_RENDEZVOUS.REN_UTI_NOColumn}, false);
            this.Relations.Add(this.relationFK_CAB_RENDEZVOUS_CAB_UTILISAT);
            this.relationFK_CAB_SPE_UTILISATEUR_CAB_SPE = new global::System.Data.DataRelation("FK_CAB_SPE_UTILISATEUR_CAB_SPE", new global::System.Data.DataColumn[] {
                        this.tableCAB_SPECIALISATION.SPE_NOColumn}, new global::System.Data.DataColumn[] {
                        this.tableCAB_SPE_UTILISATEUR.SPE_NOColumn}, false);
            this.Relations.Add(this.relationFK_CAB_SPE_UTILISATEUR_CAB_SPE);
            this.relationFK_CAB_SPE_UTILISATEUR_CAB_UTI = new global::System.Data.DataRelation("FK_CAB_SPE_UTILISATEUR_CAB_UTI", new global::System.Data.DataColumn[] {
                        this.tableCAB_UTILISATEUR.UTI_NOColumn}, new global::System.Data.DataColumn[] {
                        this.tableCAB_SPE_UTILISATEUR.UTI_NOColumn}, false);
            this.Relations.Add(this.relationFK_CAB_SPE_UTILISATEUR_CAB_UTI);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeCAB_EXCEPTION_HORAIRE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeCAB_FACTURE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeCAB_HORAIRE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeCAB_LIGNE_FACTURE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeCAB_LISTE_EXAMENS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeCAB_PATIENT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeCAB_RENDEZVOUS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeCAB_SPE_UTILISATEUR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeCAB_SPECIALISATION() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeCAB_UTILISATEUR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeVW_DOCTEUR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeVW_EXAMEN() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeVW_HORAIRE_DOCTEUR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeVW_PATIENT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeVW_EXCEPTION_HORAIRE_DOCTEUR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeVW_FACTURE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeVW_RENDEZVOUS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeVW_EXAMENS_FACTURE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSetRedoc ds = new DataSetRedoc();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void CAB_EXCEPTION_HORAIRERowChangeEventHandler(object sender, CAB_EXCEPTION_HORAIRERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void CAB_FACTURERowChangeEventHandler(object sender, CAB_FACTURERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void CAB_HORAIRERowChangeEventHandler(object sender, CAB_HORAIRERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void CAB_LIGNE_FACTURERowChangeEventHandler(object sender, CAB_LIGNE_FACTURERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void CAB_LISTE_EXAMENSRowChangeEventHandler(object sender, CAB_LISTE_EXAMENSRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void CAB_PATIENTRowChangeEventHandler(object sender, CAB_PATIENTRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void CAB_RENDEZVOUSRowChangeEventHandler(object sender, CAB_RENDEZVOUSRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void CAB_SPE_UTILISATEURRowChangeEventHandler(object sender, CAB_SPE_UTILISATEURRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void CAB_SPECIALISATIONRowChangeEventHandler(object sender, CAB_SPECIALISATIONRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void CAB_UTILISATEURRowChangeEventHandler(object sender, CAB_UTILISATEURRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void VW_DOCTEURRowChangeEventHandler(object sender, VW_DOCTEURRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void VW_EXAMENRowChangeEventHandler(object sender, VW_EXAMENRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void VW_HORAIRE_DOCTEURRowChangeEventHandler(object sender, VW_HORAIRE_DOCTEURRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void VW_PATIENTRowChangeEventHandler(object sender, VW_PATIENTRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void VW_EXCEPTION_HORAIRE_DOCTEURRowChangeEventHandler(object sender, VW_EXCEPTION_HORAIRE_DOCTEURRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void VW_FACTURERowChangeEventHandler(object sender, VW_FACTURERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void VW_RENDEZVOUSRowChangeEventHandler(object sender, VW_RENDEZVOUSRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void VW_EXAMENS_FACTURERowChangeEventHandler(object sender, VW_EXAMENS_FACTURERowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CAB_EXCEPTION_HORAIREDataTable : global::System.Data.TypedTableBase<CAB_EXCEPTION_HORAIRERow> {
            
            private global::System.Data.DataColumn columnEXC_NO;
            
            private global::System.Data.DataColumn columnEXC_UTI_NO;
            
            private global::System.Data.DataColumn columnEXC_DEBUT;
            
            private global::System.Data.DataColumn columnEXC_FIN;
            
            private global::System.Data.DataColumn columnEXC_COMMENTAIRE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_EXCEPTION_HORAIREDataTable() {
                this.TableName = "CAB_EXCEPTION_HORAIRE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal CAB_EXCEPTION_HORAIREDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected CAB_EXCEPTION_HORAIREDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXC_NOColumn {
                get {
                    return this.columnEXC_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXC_UTI_NOColumn {
                get {
                    return this.columnEXC_UTI_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXC_DEBUTColumn {
                get {
                    return this.columnEXC_DEBUT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXC_FINColumn {
                get {
                    return this.columnEXC_FIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXC_COMMENTAIREColumn {
                get {
                    return this.columnEXC_COMMENTAIRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_EXCEPTION_HORAIRERow this[int index] {
                get {
                    return ((CAB_EXCEPTION_HORAIRERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CAB_EXCEPTION_HORAIRERowChangeEventHandler CAB_EXCEPTION_HORAIRERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CAB_EXCEPTION_HORAIRERowChangeEventHandler CAB_EXCEPTION_HORAIRERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CAB_EXCEPTION_HORAIRERowChangeEventHandler CAB_EXCEPTION_HORAIRERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CAB_EXCEPTION_HORAIRERowChangeEventHandler CAB_EXCEPTION_HORAIRERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddCAB_EXCEPTION_HORAIRERow(CAB_EXCEPTION_HORAIRERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_EXCEPTION_HORAIRERow AddCAB_EXCEPTION_HORAIRERow(short EXC_NO, CAB_UTILISATEURRow parentCAB_UTILISATEURRowByFK_CAB_EXCEPTION_HORAIRE_CAB_U, System.DateTime EXC_DEBUT, System.DateTime EXC_FIN, string EXC_COMMENTAIRE) {
                CAB_EXCEPTION_HORAIRERow rowCAB_EXCEPTION_HORAIRERow = ((CAB_EXCEPTION_HORAIRERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EXC_NO,
                        null,
                        EXC_DEBUT,
                        EXC_FIN,
                        EXC_COMMENTAIRE};
                if ((parentCAB_UTILISATEURRowByFK_CAB_EXCEPTION_HORAIRE_CAB_U != null)) {
                    columnValuesArray[1] = parentCAB_UTILISATEURRowByFK_CAB_EXCEPTION_HORAIRE_CAB_U[0];
                }
                rowCAB_EXCEPTION_HORAIRERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCAB_EXCEPTION_HORAIRERow);
                return rowCAB_EXCEPTION_HORAIRERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_EXCEPTION_HORAIRERow FindByEXC_NO(short EXC_NO) {
                return ((CAB_EXCEPTION_HORAIRERow)(this.Rows.Find(new object[] {
                            EXC_NO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CAB_EXCEPTION_HORAIREDataTable cln = ((CAB_EXCEPTION_HORAIREDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CAB_EXCEPTION_HORAIREDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnEXC_NO = base.Columns["EXC_NO"];
                this.columnEXC_UTI_NO = base.Columns["EXC_UTI_NO"];
                this.columnEXC_DEBUT = base.Columns["EXC_DEBUT"];
                this.columnEXC_FIN = base.Columns["EXC_FIN"];
                this.columnEXC_COMMENTAIRE = base.Columns["EXC_COMMENTAIRE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnEXC_NO = new global::System.Data.DataColumn("EXC_NO", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXC_NO);
                this.columnEXC_UTI_NO = new global::System.Data.DataColumn("EXC_UTI_NO", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXC_UTI_NO);
                this.columnEXC_DEBUT = new global::System.Data.DataColumn("EXC_DEBUT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXC_DEBUT);
                this.columnEXC_FIN = new global::System.Data.DataColumn("EXC_FIN", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXC_FIN);
                this.columnEXC_COMMENTAIRE = new global::System.Data.DataColumn("EXC_COMMENTAIRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXC_COMMENTAIRE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEXC_NO}, true));
                this.columnEXC_NO.AllowDBNull = false;
                this.columnEXC_NO.Unique = true;
                this.columnEXC_UTI_NO.AllowDBNull = false;
                this.columnEXC_DEBUT.AllowDBNull = false;
                this.columnEXC_FIN.AllowDBNull = false;
                this.columnEXC_COMMENTAIRE.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_EXCEPTION_HORAIRERow NewCAB_EXCEPTION_HORAIRERow() {
                return ((CAB_EXCEPTION_HORAIRERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CAB_EXCEPTION_HORAIRERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CAB_EXCEPTION_HORAIRERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CAB_EXCEPTION_HORAIRERowChanged != null)) {
                    this.CAB_EXCEPTION_HORAIRERowChanged(this, new CAB_EXCEPTION_HORAIRERowChangeEvent(((CAB_EXCEPTION_HORAIRERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CAB_EXCEPTION_HORAIRERowChanging != null)) {
                    this.CAB_EXCEPTION_HORAIRERowChanging(this, new CAB_EXCEPTION_HORAIRERowChangeEvent(((CAB_EXCEPTION_HORAIRERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CAB_EXCEPTION_HORAIRERowDeleted != null)) {
                    this.CAB_EXCEPTION_HORAIRERowDeleted(this, new CAB_EXCEPTION_HORAIRERowChangeEvent(((CAB_EXCEPTION_HORAIRERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CAB_EXCEPTION_HORAIRERowDeleting != null)) {
                    this.CAB_EXCEPTION_HORAIRERowDeleting(this, new CAB_EXCEPTION_HORAIRERowChangeEvent(((CAB_EXCEPTION_HORAIRERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveCAB_EXCEPTION_HORAIRERow(CAB_EXCEPTION_HORAIRERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetRedoc ds = new DataSetRedoc();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CAB_EXCEPTION_HORAIREDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CAB_FACTUREDataTable : global::System.Data.TypedTableBase<CAB_FACTURERow> {
            
            private global::System.Data.DataColumn columnFAC_NO;
            
            private global::System.Data.DataColumn columnFAC_REN_NO;
            
            private global::System.Data.DataColumn columnFAC_DATE;
            
            private global::System.Data.DataColumn columnFAC_PAYE;
            
            private global::System.Data.DataColumn columnFAC_TOTAL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_FACTUREDataTable() {
                this.TableName = "CAB_FACTURE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal CAB_FACTUREDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected CAB_FACTUREDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FAC_NOColumn {
                get {
                    return this.columnFAC_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FAC_REN_NOColumn {
                get {
                    return this.columnFAC_REN_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FAC_DATEColumn {
                get {
                    return this.columnFAC_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FAC_PAYEColumn {
                get {
                    return this.columnFAC_PAYE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FAC_TOTALColumn {
                get {
                    return this.columnFAC_TOTAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_FACTURERow this[int index] {
                get {
                    return ((CAB_FACTURERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CAB_FACTURERowChangeEventHandler CAB_FACTURERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CAB_FACTURERowChangeEventHandler CAB_FACTURERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CAB_FACTURERowChangeEventHandler CAB_FACTURERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CAB_FACTURERowChangeEventHandler CAB_FACTURERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddCAB_FACTURERow(CAB_FACTURERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_FACTURERow AddCAB_FACTURERow(short FAC_NO, CAB_RENDEZVOUSRow parentCAB_RENDEZVOUSRowByFK_CAB_FACTURE_CAB_RENDEZVOUS, System.DateTime FAC_DATE, short FAC_PAYE, double FAC_TOTAL) {
                CAB_FACTURERow rowCAB_FACTURERow = ((CAB_FACTURERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FAC_NO,
                        null,
                        FAC_DATE,
                        FAC_PAYE,
                        FAC_TOTAL};
                if ((parentCAB_RENDEZVOUSRowByFK_CAB_FACTURE_CAB_RENDEZVOUS != null)) {
                    columnValuesArray[1] = parentCAB_RENDEZVOUSRowByFK_CAB_FACTURE_CAB_RENDEZVOUS[0];
                }
                rowCAB_FACTURERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCAB_FACTURERow);
                return rowCAB_FACTURERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_FACTURERow FindByFAC_NO(short FAC_NO) {
                return ((CAB_FACTURERow)(this.Rows.Find(new object[] {
                            FAC_NO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CAB_FACTUREDataTable cln = ((CAB_FACTUREDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CAB_FACTUREDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnFAC_NO = base.Columns["FAC_NO"];
                this.columnFAC_REN_NO = base.Columns["FAC_REN_NO"];
                this.columnFAC_DATE = base.Columns["FAC_DATE"];
                this.columnFAC_PAYE = base.Columns["FAC_PAYE"];
                this.columnFAC_TOTAL = base.Columns["FAC_TOTAL"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnFAC_NO = new global::System.Data.DataColumn("FAC_NO", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAC_NO);
                this.columnFAC_REN_NO = new global::System.Data.DataColumn("FAC_REN_NO", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAC_REN_NO);
                this.columnFAC_DATE = new global::System.Data.DataColumn("FAC_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAC_DATE);
                this.columnFAC_PAYE = new global::System.Data.DataColumn("FAC_PAYE", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAC_PAYE);
                this.columnFAC_TOTAL = new global::System.Data.DataColumn("FAC_TOTAL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAC_TOTAL);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFAC_NO}, true));
                this.columnFAC_NO.AllowDBNull = false;
                this.columnFAC_NO.Unique = true;
                this.columnFAC_REN_NO.AllowDBNull = false;
                this.columnFAC_DATE.AllowDBNull = false;
                this.columnFAC_PAYE.AllowDBNull = false;
                this.columnFAC_TOTAL.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_FACTURERow NewCAB_FACTURERow() {
                return ((CAB_FACTURERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CAB_FACTURERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CAB_FACTURERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CAB_FACTURERowChanged != null)) {
                    this.CAB_FACTURERowChanged(this, new CAB_FACTURERowChangeEvent(((CAB_FACTURERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CAB_FACTURERowChanging != null)) {
                    this.CAB_FACTURERowChanging(this, new CAB_FACTURERowChangeEvent(((CAB_FACTURERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CAB_FACTURERowDeleted != null)) {
                    this.CAB_FACTURERowDeleted(this, new CAB_FACTURERowChangeEvent(((CAB_FACTURERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CAB_FACTURERowDeleting != null)) {
                    this.CAB_FACTURERowDeleting(this, new CAB_FACTURERowChangeEvent(((CAB_FACTURERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveCAB_FACTURERow(CAB_FACTURERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetRedoc ds = new DataSetRedoc();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CAB_FACTUREDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CAB_HORAIREDataTable : global::System.Data.TypedTableBase<CAB_HORAIRERow> {
            
            private global::System.Data.DataColumn columnHOR_NO;
            
            private global::System.Data.DataColumn columnHOR_UTI_NO;
            
            private global::System.Data.DataColumn columnHOR_DEBUT;
            
            private global::System.Data.DataColumn columnHOR_FIN;
            
            private global::System.Data.DataColumn columnHOR_JOUR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_HORAIREDataTable() {
                this.TableName = "CAB_HORAIRE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal CAB_HORAIREDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected CAB_HORAIREDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HOR_NOColumn {
                get {
                    return this.columnHOR_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HOR_UTI_NOColumn {
                get {
                    return this.columnHOR_UTI_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HOR_DEBUTColumn {
                get {
                    return this.columnHOR_DEBUT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HOR_FINColumn {
                get {
                    return this.columnHOR_FIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HOR_JOURColumn {
                get {
                    return this.columnHOR_JOUR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_HORAIRERow this[int index] {
                get {
                    return ((CAB_HORAIRERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CAB_HORAIRERowChangeEventHandler CAB_HORAIRERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CAB_HORAIRERowChangeEventHandler CAB_HORAIRERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CAB_HORAIRERowChangeEventHandler CAB_HORAIRERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CAB_HORAIRERowChangeEventHandler CAB_HORAIRERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddCAB_HORAIRERow(CAB_HORAIRERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_HORAIRERow AddCAB_HORAIRERow(short HOR_NO, CAB_UTILISATEURRow parentCAB_UTILISATEURRowByFK_CAB_HORAIRE_CAB_UTILISATEUR, short HOR_DEBUT, short HOR_FIN, short HOR_JOUR) {
                CAB_HORAIRERow rowCAB_HORAIRERow = ((CAB_HORAIRERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        HOR_NO,
                        null,
                        HOR_DEBUT,
                        HOR_FIN,
                        HOR_JOUR};
                if ((parentCAB_UTILISATEURRowByFK_CAB_HORAIRE_CAB_UTILISATEUR != null)) {
                    columnValuesArray[1] = parentCAB_UTILISATEURRowByFK_CAB_HORAIRE_CAB_UTILISATEUR[0];
                }
                rowCAB_HORAIRERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCAB_HORAIRERow);
                return rowCAB_HORAIRERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_HORAIRERow FindByHOR_NO(short HOR_NO) {
                return ((CAB_HORAIRERow)(this.Rows.Find(new object[] {
                            HOR_NO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CAB_HORAIREDataTable cln = ((CAB_HORAIREDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CAB_HORAIREDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnHOR_NO = base.Columns["HOR_NO"];
                this.columnHOR_UTI_NO = base.Columns["HOR_UTI_NO"];
                this.columnHOR_DEBUT = base.Columns["HOR_DEBUT"];
                this.columnHOR_FIN = base.Columns["HOR_FIN"];
                this.columnHOR_JOUR = base.Columns["HOR_JOUR"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnHOR_NO = new global::System.Data.DataColumn("HOR_NO", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOR_NO);
                this.columnHOR_UTI_NO = new global::System.Data.DataColumn("HOR_UTI_NO", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOR_UTI_NO);
                this.columnHOR_DEBUT = new global::System.Data.DataColumn("HOR_DEBUT", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOR_DEBUT);
                this.columnHOR_FIN = new global::System.Data.DataColumn("HOR_FIN", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOR_FIN);
                this.columnHOR_JOUR = new global::System.Data.DataColumn("HOR_JOUR", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOR_JOUR);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnHOR_NO}, true));
                this.columnHOR_NO.AllowDBNull = false;
                this.columnHOR_NO.Unique = true;
                this.columnHOR_UTI_NO.AllowDBNull = false;
                this.columnHOR_DEBUT.AllowDBNull = false;
                this.columnHOR_FIN.AllowDBNull = false;
                this.columnHOR_JOUR.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_HORAIRERow NewCAB_HORAIRERow() {
                return ((CAB_HORAIRERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CAB_HORAIRERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CAB_HORAIRERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CAB_HORAIRERowChanged != null)) {
                    this.CAB_HORAIRERowChanged(this, new CAB_HORAIRERowChangeEvent(((CAB_HORAIRERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CAB_HORAIRERowChanging != null)) {
                    this.CAB_HORAIRERowChanging(this, new CAB_HORAIRERowChangeEvent(((CAB_HORAIRERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CAB_HORAIRERowDeleted != null)) {
                    this.CAB_HORAIRERowDeleted(this, new CAB_HORAIRERowChangeEvent(((CAB_HORAIRERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CAB_HORAIRERowDeleting != null)) {
                    this.CAB_HORAIRERowDeleting(this, new CAB_HORAIRERowChangeEvent(((CAB_HORAIRERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveCAB_HORAIRERow(CAB_HORAIRERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetRedoc ds = new DataSetRedoc();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CAB_HORAIREDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CAB_LIGNE_FACTUREDataTable : global::System.Data.TypedTableBase<CAB_LIGNE_FACTURERow> {
            
            private global::System.Data.DataColumn columnLIG_FAC_NO;
            
            private global::System.Data.DataColumn columnLIG_LIS_NO;
            
            private global::System.Data.DataColumn columnLIG_MONTANT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_LIGNE_FACTUREDataTable() {
                this.TableName = "CAB_LIGNE_FACTURE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal CAB_LIGNE_FACTUREDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected CAB_LIGNE_FACTUREDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LIG_FAC_NOColumn {
                get {
                    return this.columnLIG_FAC_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LIG_LIS_NOColumn {
                get {
                    return this.columnLIG_LIS_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LIG_MONTANTColumn {
                get {
                    return this.columnLIG_MONTANT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_LIGNE_FACTURERow this[int index] {
                get {
                    return ((CAB_LIGNE_FACTURERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CAB_LIGNE_FACTURERowChangeEventHandler CAB_LIGNE_FACTURERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CAB_LIGNE_FACTURERowChangeEventHandler CAB_LIGNE_FACTURERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CAB_LIGNE_FACTURERowChangeEventHandler CAB_LIGNE_FACTURERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CAB_LIGNE_FACTURERowChangeEventHandler CAB_LIGNE_FACTURERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddCAB_LIGNE_FACTURERow(CAB_LIGNE_FACTURERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_LIGNE_FACTURERow AddCAB_LIGNE_FACTURERow(CAB_FACTURERow parentCAB_FACTURERowByFK_CAB_LIGNE_FACTURE_CAB_FACTU, CAB_LISTE_EXAMENSRow parentCAB_LISTE_EXAMENSRowByFK_CAB_LIGNE_FACTURE_CAB_LISTE, short LIG_MONTANT) {
                CAB_LIGNE_FACTURERow rowCAB_LIGNE_FACTURERow = ((CAB_LIGNE_FACTURERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        LIG_MONTANT};
                if ((parentCAB_FACTURERowByFK_CAB_LIGNE_FACTURE_CAB_FACTU != null)) {
                    columnValuesArray[0] = parentCAB_FACTURERowByFK_CAB_LIGNE_FACTURE_CAB_FACTU[0];
                }
                if ((parentCAB_LISTE_EXAMENSRowByFK_CAB_LIGNE_FACTURE_CAB_LISTE != null)) {
                    columnValuesArray[1] = parentCAB_LISTE_EXAMENSRowByFK_CAB_LIGNE_FACTURE_CAB_LISTE[0];
                }
                rowCAB_LIGNE_FACTURERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCAB_LIGNE_FACTURERow);
                return rowCAB_LIGNE_FACTURERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_LIGNE_FACTURERow FindByLIG_FAC_NOLIG_LIS_NO(short LIG_FAC_NO, short LIG_LIS_NO) {
                return ((CAB_LIGNE_FACTURERow)(this.Rows.Find(new object[] {
                            LIG_FAC_NO,
                            LIG_LIS_NO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CAB_LIGNE_FACTUREDataTable cln = ((CAB_LIGNE_FACTUREDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CAB_LIGNE_FACTUREDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnLIG_FAC_NO = base.Columns["LIG_FAC_NO"];
                this.columnLIG_LIS_NO = base.Columns["LIG_LIS_NO"];
                this.columnLIG_MONTANT = base.Columns["LIG_MONTANT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnLIG_FAC_NO = new global::System.Data.DataColumn("LIG_FAC_NO", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIG_FAC_NO);
                this.columnLIG_LIS_NO = new global::System.Data.DataColumn("LIG_LIS_NO", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIG_LIS_NO);
                this.columnLIG_MONTANT = new global::System.Data.DataColumn("LIG_MONTANT", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIG_MONTANT);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLIG_FAC_NO,
                                this.columnLIG_LIS_NO}, true));
                this.columnLIG_FAC_NO.AllowDBNull = false;
                this.columnLIG_LIS_NO.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_LIGNE_FACTURERow NewCAB_LIGNE_FACTURERow() {
                return ((CAB_LIGNE_FACTURERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CAB_LIGNE_FACTURERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CAB_LIGNE_FACTURERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CAB_LIGNE_FACTURERowChanged != null)) {
                    this.CAB_LIGNE_FACTURERowChanged(this, new CAB_LIGNE_FACTURERowChangeEvent(((CAB_LIGNE_FACTURERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CAB_LIGNE_FACTURERowChanging != null)) {
                    this.CAB_LIGNE_FACTURERowChanging(this, new CAB_LIGNE_FACTURERowChangeEvent(((CAB_LIGNE_FACTURERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CAB_LIGNE_FACTURERowDeleted != null)) {
                    this.CAB_LIGNE_FACTURERowDeleted(this, new CAB_LIGNE_FACTURERowChangeEvent(((CAB_LIGNE_FACTURERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CAB_LIGNE_FACTURERowDeleting != null)) {
                    this.CAB_LIGNE_FACTURERowDeleting(this, new CAB_LIGNE_FACTURERowChangeEvent(((CAB_LIGNE_FACTURERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveCAB_LIGNE_FACTURERow(CAB_LIGNE_FACTURERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetRedoc ds = new DataSetRedoc();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CAB_LIGNE_FACTUREDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CAB_LISTE_EXAMENSDataTable : global::System.Data.TypedTableBase<CAB_LISTE_EXAMENSRow> {
            
            private global::System.Data.DataColumn columnLIS_NO;
            
            private global::System.Data.DataColumn columnLIS_NOM;
            
            private global::System.Data.DataColumn columnLIS_PRIX_HORAIRE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_LISTE_EXAMENSDataTable() {
                this.TableName = "CAB_LISTE_EXAMENS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal CAB_LISTE_EXAMENSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected CAB_LISTE_EXAMENSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LIS_NOColumn {
                get {
                    return this.columnLIS_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LIS_NOMColumn {
                get {
                    return this.columnLIS_NOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LIS_PRIX_HORAIREColumn {
                get {
                    return this.columnLIS_PRIX_HORAIRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_LISTE_EXAMENSRow this[int index] {
                get {
                    return ((CAB_LISTE_EXAMENSRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CAB_LISTE_EXAMENSRowChangeEventHandler CAB_LISTE_EXAMENSRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CAB_LISTE_EXAMENSRowChangeEventHandler CAB_LISTE_EXAMENSRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CAB_LISTE_EXAMENSRowChangeEventHandler CAB_LISTE_EXAMENSRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CAB_LISTE_EXAMENSRowChangeEventHandler CAB_LISTE_EXAMENSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddCAB_LISTE_EXAMENSRow(CAB_LISTE_EXAMENSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_LISTE_EXAMENSRow AddCAB_LISTE_EXAMENSRow(short LIS_NO, string LIS_NOM, double LIS_PRIX_HORAIRE) {
                CAB_LISTE_EXAMENSRow rowCAB_LISTE_EXAMENSRow = ((CAB_LISTE_EXAMENSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LIS_NO,
                        LIS_NOM,
                        LIS_PRIX_HORAIRE};
                rowCAB_LISTE_EXAMENSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCAB_LISTE_EXAMENSRow);
                return rowCAB_LISTE_EXAMENSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_LISTE_EXAMENSRow FindByLIS_NO(short LIS_NO) {
                return ((CAB_LISTE_EXAMENSRow)(this.Rows.Find(new object[] {
                            LIS_NO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CAB_LISTE_EXAMENSDataTable cln = ((CAB_LISTE_EXAMENSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CAB_LISTE_EXAMENSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnLIS_NO = base.Columns["LIS_NO"];
                this.columnLIS_NOM = base.Columns["LIS_NOM"];
                this.columnLIS_PRIX_HORAIRE = base.Columns["LIS_PRIX_HORAIRE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnLIS_NO = new global::System.Data.DataColumn("LIS_NO", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIS_NO);
                this.columnLIS_NOM = new global::System.Data.DataColumn("LIS_NOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIS_NOM);
                this.columnLIS_PRIX_HORAIRE = new global::System.Data.DataColumn("LIS_PRIX_HORAIRE", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIS_PRIX_HORAIRE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLIS_NO}, true));
                this.columnLIS_NO.AllowDBNull = false;
                this.columnLIS_NO.Unique = true;
                this.columnLIS_NOM.AllowDBNull = false;
                this.columnLIS_NOM.MaxLength = 255;
                this.columnLIS_PRIX_HORAIRE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_LISTE_EXAMENSRow NewCAB_LISTE_EXAMENSRow() {
                return ((CAB_LISTE_EXAMENSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CAB_LISTE_EXAMENSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CAB_LISTE_EXAMENSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CAB_LISTE_EXAMENSRowChanged != null)) {
                    this.CAB_LISTE_EXAMENSRowChanged(this, new CAB_LISTE_EXAMENSRowChangeEvent(((CAB_LISTE_EXAMENSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CAB_LISTE_EXAMENSRowChanging != null)) {
                    this.CAB_LISTE_EXAMENSRowChanging(this, new CAB_LISTE_EXAMENSRowChangeEvent(((CAB_LISTE_EXAMENSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CAB_LISTE_EXAMENSRowDeleted != null)) {
                    this.CAB_LISTE_EXAMENSRowDeleted(this, new CAB_LISTE_EXAMENSRowChangeEvent(((CAB_LISTE_EXAMENSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CAB_LISTE_EXAMENSRowDeleting != null)) {
                    this.CAB_LISTE_EXAMENSRowDeleting(this, new CAB_LISTE_EXAMENSRowChangeEvent(((CAB_LISTE_EXAMENSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveCAB_LISTE_EXAMENSRow(CAB_LISTE_EXAMENSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetRedoc ds = new DataSetRedoc();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CAB_LISTE_EXAMENSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CAB_PATIENTDataTable : global::System.Data.TypedTableBase<CAB_PATIENTRow> {
            
            private global::System.Data.DataColumn columnPAT_NO;
            
            private global::System.Data.DataColumn columnPAT_NOM;
            
            private global::System.Data.DataColumn columnPAT_PRENOM;
            
            private global::System.Data.DataColumn columnPAT_DATE_NAISSANCE;
            
            private global::System.Data.DataColumn columnPAT_ADRESSE;
            
            private global::System.Data.DataColumn columnPAT_EMAIL;
            
            private global::System.Data.DataColumn columnPAT_TELEPHONE;
            
            private global::System.Data.DataColumn columnPAT_NO_AVS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_PATIENTDataTable() {
                this.TableName = "CAB_PATIENT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal CAB_PATIENTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected CAB_PATIENTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PAT_NOColumn {
                get {
                    return this.columnPAT_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PAT_NOMColumn {
                get {
                    return this.columnPAT_NOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PAT_PRENOMColumn {
                get {
                    return this.columnPAT_PRENOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PAT_DATE_NAISSANCEColumn {
                get {
                    return this.columnPAT_DATE_NAISSANCE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PAT_ADRESSEColumn {
                get {
                    return this.columnPAT_ADRESSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PAT_EMAILColumn {
                get {
                    return this.columnPAT_EMAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PAT_TELEPHONEColumn {
                get {
                    return this.columnPAT_TELEPHONE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PAT_NO_AVSColumn {
                get {
                    return this.columnPAT_NO_AVS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_PATIENTRow this[int index] {
                get {
                    return ((CAB_PATIENTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CAB_PATIENTRowChangeEventHandler CAB_PATIENTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CAB_PATIENTRowChangeEventHandler CAB_PATIENTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CAB_PATIENTRowChangeEventHandler CAB_PATIENTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CAB_PATIENTRowChangeEventHandler CAB_PATIENTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddCAB_PATIENTRow(CAB_PATIENTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_PATIENTRow AddCAB_PATIENTRow(short PAT_NO, string PAT_NOM, string PAT_PRENOM, System.DateTime PAT_DATE_NAISSANCE, string PAT_ADRESSE, string PAT_EMAIL, string PAT_TELEPHONE, string PAT_NO_AVS) {
                CAB_PATIENTRow rowCAB_PATIENTRow = ((CAB_PATIENTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PAT_NO,
                        PAT_NOM,
                        PAT_PRENOM,
                        PAT_DATE_NAISSANCE,
                        PAT_ADRESSE,
                        PAT_EMAIL,
                        PAT_TELEPHONE,
                        PAT_NO_AVS};
                rowCAB_PATIENTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCAB_PATIENTRow);
                return rowCAB_PATIENTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_PATIENTRow FindByPAT_NO(short PAT_NO) {
                return ((CAB_PATIENTRow)(this.Rows.Find(new object[] {
                            PAT_NO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CAB_PATIENTDataTable cln = ((CAB_PATIENTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CAB_PATIENTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnPAT_NO = base.Columns["PAT_NO"];
                this.columnPAT_NOM = base.Columns["PAT_NOM"];
                this.columnPAT_PRENOM = base.Columns["PAT_PRENOM"];
                this.columnPAT_DATE_NAISSANCE = base.Columns["PAT_DATE_NAISSANCE"];
                this.columnPAT_ADRESSE = base.Columns["PAT_ADRESSE"];
                this.columnPAT_EMAIL = base.Columns["PAT_EMAIL"];
                this.columnPAT_TELEPHONE = base.Columns["PAT_TELEPHONE"];
                this.columnPAT_NO_AVS = base.Columns["PAT_NO_AVS"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnPAT_NO = new global::System.Data.DataColumn("PAT_NO", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAT_NO);
                this.columnPAT_NOM = new global::System.Data.DataColumn("PAT_NOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAT_NOM);
                this.columnPAT_PRENOM = new global::System.Data.DataColumn("PAT_PRENOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAT_PRENOM);
                this.columnPAT_DATE_NAISSANCE = new global::System.Data.DataColumn("PAT_DATE_NAISSANCE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAT_DATE_NAISSANCE);
                this.columnPAT_ADRESSE = new global::System.Data.DataColumn("PAT_ADRESSE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAT_ADRESSE);
                this.columnPAT_EMAIL = new global::System.Data.DataColumn("PAT_EMAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAT_EMAIL);
                this.columnPAT_TELEPHONE = new global::System.Data.DataColumn("PAT_TELEPHONE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAT_TELEPHONE);
                this.columnPAT_NO_AVS = new global::System.Data.DataColumn("PAT_NO_AVS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAT_NO_AVS);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPAT_NO}, true));
                this.columnPAT_NO.AllowDBNull = false;
                this.columnPAT_NO.Unique = true;
                this.columnPAT_NOM.AllowDBNull = false;
                this.columnPAT_NOM.MaxLength = 50;
                this.columnPAT_PRENOM.AllowDBNull = false;
                this.columnPAT_PRENOM.MaxLength = 50;
                this.columnPAT_DATE_NAISSANCE.AllowDBNull = false;
                this.columnPAT_ADRESSE.AllowDBNull = false;
                this.columnPAT_ADRESSE.MaxLength = 255;
                this.columnPAT_EMAIL.AllowDBNull = false;
                this.columnPAT_EMAIL.MaxLength = 255;
                this.columnPAT_TELEPHONE.AllowDBNull = false;
                this.columnPAT_TELEPHONE.MaxLength = 32;
                this.columnPAT_NO_AVS.AllowDBNull = false;
                this.columnPAT_NO_AVS.MaxLength = 32;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_PATIENTRow NewCAB_PATIENTRow() {
                return ((CAB_PATIENTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CAB_PATIENTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CAB_PATIENTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CAB_PATIENTRowChanged != null)) {
                    this.CAB_PATIENTRowChanged(this, new CAB_PATIENTRowChangeEvent(((CAB_PATIENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CAB_PATIENTRowChanging != null)) {
                    this.CAB_PATIENTRowChanging(this, new CAB_PATIENTRowChangeEvent(((CAB_PATIENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CAB_PATIENTRowDeleted != null)) {
                    this.CAB_PATIENTRowDeleted(this, new CAB_PATIENTRowChangeEvent(((CAB_PATIENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CAB_PATIENTRowDeleting != null)) {
                    this.CAB_PATIENTRowDeleting(this, new CAB_PATIENTRowChangeEvent(((CAB_PATIENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveCAB_PATIENTRow(CAB_PATIENTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetRedoc ds = new DataSetRedoc();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CAB_PATIENTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CAB_RENDEZVOUSDataTable : global::System.Data.TypedTableBase<CAB_RENDEZVOUSRow> {
            
            private global::System.Data.DataColumn columnREN_NO;
            
            private global::System.Data.DataColumn columnREN_UTI_NO;
            
            private global::System.Data.DataColumn columnREN_PAT_NO;
            
            private global::System.Data.DataColumn columnREN_DATE;
            
            private global::System.Data.DataColumn columnREN_ANNULE;
            
            private global::System.Data.DataColumn columnREN_COMMENTAIRE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_RENDEZVOUSDataTable() {
                this.TableName = "CAB_RENDEZVOUS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal CAB_RENDEZVOUSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected CAB_RENDEZVOUSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REN_NOColumn {
                get {
                    return this.columnREN_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REN_UTI_NOColumn {
                get {
                    return this.columnREN_UTI_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REN_PAT_NOColumn {
                get {
                    return this.columnREN_PAT_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REN_DATEColumn {
                get {
                    return this.columnREN_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REN_ANNULEColumn {
                get {
                    return this.columnREN_ANNULE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REN_COMMENTAIREColumn {
                get {
                    return this.columnREN_COMMENTAIRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_RENDEZVOUSRow this[int index] {
                get {
                    return ((CAB_RENDEZVOUSRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CAB_RENDEZVOUSRowChangeEventHandler CAB_RENDEZVOUSRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CAB_RENDEZVOUSRowChangeEventHandler CAB_RENDEZVOUSRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CAB_RENDEZVOUSRowChangeEventHandler CAB_RENDEZVOUSRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CAB_RENDEZVOUSRowChangeEventHandler CAB_RENDEZVOUSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddCAB_RENDEZVOUSRow(CAB_RENDEZVOUSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_RENDEZVOUSRow AddCAB_RENDEZVOUSRow(short REN_NO, CAB_UTILISATEURRow parentCAB_UTILISATEURRowByFK_CAB_RENDEZVOUS_CAB_UTILISAT, CAB_PATIENTRow parentCAB_PATIENTRowByFK_CAB_RENDEZVOUS_CAB_PATIENT, System.DateTime REN_DATE, short REN_ANNULE, string REN_COMMENTAIRE) {
                CAB_RENDEZVOUSRow rowCAB_RENDEZVOUSRow = ((CAB_RENDEZVOUSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        REN_NO,
                        null,
                        null,
                        REN_DATE,
                        REN_ANNULE,
                        REN_COMMENTAIRE};
                if ((parentCAB_UTILISATEURRowByFK_CAB_RENDEZVOUS_CAB_UTILISAT != null)) {
                    columnValuesArray[1] = parentCAB_UTILISATEURRowByFK_CAB_RENDEZVOUS_CAB_UTILISAT[0];
                }
                if ((parentCAB_PATIENTRowByFK_CAB_RENDEZVOUS_CAB_PATIENT != null)) {
                    columnValuesArray[2] = parentCAB_PATIENTRowByFK_CAB_RENDEZVOUS_CAB_PATIENT[0];
                }
                rowCAB_RENDEZVOUSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCAB_RENDEZVOUSRow);
                return rowCAB_RENDEZVOUSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_RENDEZVOUSRow FindByREN_NO(short REN_NO) {
                return ((CAB_RENDEZVOUSRow)(this.Rows.Find(new object[] {
                            REN_NO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CAB_RENDEZVOUSDataTable cln = ((CAB_RENDEZVOUSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CAB_RENDEZVOUSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnREN_NO = base.Columns["REN_NO"];
                this.columnREN_UTI_NO = base.Columns["REN_UTI_NO"];
                this.columnREN_PAT_NO = base.Columns["REN_PAT_NO"];
                this.columnREN_DATE = base.Columns["REN_DATE"];
                this.columnREN_ANNULE = base.Columns["REN_ANNULE"];
                this.columnREN_COMMENTAIRE = base.Columns["REN_COMMENTAIRE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnREN_NO = new global::System.Data.DataColumn("REN_NO", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREN_NO);
                this.columnREN_UTI_NO = new global::System.Data.DataColumn("REN_UTI_NO", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREN_UTI_NO);
                this.columnREN_PAT_NO = new global::System.Data.DataColumn("REN_PAT_NO", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREN_PAT_NO);
                this.columnREN_DATE = new global::System.Data.DataColumn("REN_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREN_DATE);
                this.columnREN_ANNULE = new global::System.Data.DataColumn("REN_ANNULE", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREN_ANNULE);
                this.columnREN_COMMENTAIRE = new global::System.Data.DataColumn("REN_COMMENTAIRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREN_COMMENTAIRE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnREN_NO}, true));
                this.columnREN_NO.AllowDBNull = false;
                this.columnREN_NO.Unique = true;
                this.columnREN_UTI_NO.AllowDBNull = false;
                this.columnREN_PAT_NO.AllowDBNull = false;
                this.columnREN_DATE.AllowDBNull = false;
                this.columnREN_ANNULE.AllowDBNull = false;
                this.columnREN_COMMENTAIRE.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_RENDEZVOUSRow NewCAB_RENDEZVOUSRow() {
                return ((CAB_RENDEZVOUSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CAB_RENDEZVOUSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CAB_RENDEZVOUSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CAB_RENDEZVOUSRowChanged != null)) {
                    this.CAB_RENDEZVOUSRowChanged(this, new CAB_RENDEZVOUSRowChangeEvent(((CAB_RENDEZVOUSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CAB_RENDEZVOUSRowChanging != null)) {
                    this.CAB_RENDEZVOUSRowChanging(this, new CAB_RENDEZVOUSRowChangeEvent(((CAB_RENDEZVOUSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CAB_RENDEZVOUSRowDeleted != null)) {
                    this.CAB_RENDEZVOUSRowDeleted(this, new CAB_RENDEZVOUSRowChangeEvent(((CAB_RENDEZVOUSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CAB_RENDEZVOUSRowDeleting != null)) {
                    this.CAB_RENDEZVOUSRowDeleting(this, new CAB_RENDEZVOUSRowChangeEvent(((CAB_RENDEZVOUSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveCAB_RENDEZVOUSRow(CAB_RENDEZVOUSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetRedoc ds = new DataSetRedoc();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CAB_RENDEZVOUSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CAB_SPE_UTILISATEURDataTable : global::System.Data.TypedTableBase<CAB_SPE_UTILISATEURRow> {
            
            private global::System.Data.DataColumn columnSPE_NO;
            
            private global::System.Data.DataColumn columnUTI_NO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_SPE_UTILISATEURDataTable() {
                this.TableName = "CAB_SPE_UTILISATEUR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal CAB_SPE_UTILISATEURDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected CAB_SPE_UTILISATEURDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SPE_NOColumn {
                get {
                    return this.columnSPE_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UTI_NOColumn {
                get {
                    return this.columnUTI_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_SPE_UTILISATEURRow this[int index] {
                get {
                    return ((CAB_SPE_UTILISATEURRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CAB_SPE_UTILISATEURRowChangeEventHandler CAB_SPE_UTILISATEURRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CAB_SPE_UTILISATEURRowChangeEventHandler CAB_SPE_UTILISATEURRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CAB_SPE_UTILISATEURRowChangeEventHandler CAB_SPE_UTILISATEURRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CAB_SPE_UTILISATEURRowChangeEventHandler CAB_SPE_UTILISATEURRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddCAB_SPE_UTILISATEURRow(CAB_SPE_UTILISATEURRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_SPE_UTILISATEURRow AddCAB_SPE_UTILISATEURRow(CAB_SPECIALISATIONRow parentCAB_SPECIALISATIONRowByFK_CAB_SPE_UTILISATEUR_CAB_SPE, CAB_UTILISATEURRow parentCAB_UTILISATEURRowByFK_CAB_SPE_UTILISATEUR_CAB_UTI) {
                CAB_SPE_UTILISATEURRow rowCAB_SPE_UTILISATEURRow = ((CAB_SPE_UTILISATEURRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null};
                if ((parentCAB_SPECIALISATIONRowByFK_CAB_SPE_UTILISATEUR_CAB_SPE != null)) {
                    columnValuesArray[0] = parentCAB_SPECIALISATIONRowByFK_CAB_SPE_UTILISATEUR_CAB_SPE[0];
                }
                if ((parentCAB_UTILISATEURRowByFK_CAB_SPE_UTILISATEUR_CAB_UTI != null)) {
                    columnValuesArray[1] = parentCAB_UTILISATEURRowByFK_CAB_SPE_UTILISATEUR_CAB_UTI[0];
                }
                rowCAB_SPE_UTILISATEURRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCAB_SPE_UTILISATEURRow);
                return rowCAB_SPE_UTILISATEURRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_SPE_UTILISATEURRow FindBySPE_NOUTI_NO(short SPE_NO, short UTI_NO) {
                return ((CAB_SPE_UTILISATEURRow)(this.Rows.Find(new object[] {
                            SPE_NO,
                            UTI_NO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CAB_SPE_UTILISATEURDataTable cln = ((CAB_SPE_UTILISATEURDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CAB_SPE_UTILISATEURDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnSPE_NO = base.Columns["SPE_NO"];
                this.columnUTI_NO = base.Columns["UTI_NO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnSPE_NO = new global::System.Data.DataColumn("SPE_NO", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPE_NO);
                this.columnUTI_NO = new global::System.Data.DataColumn("UTI_NO", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUTI_NO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSPE_NO,
                                this.columnUTI_NO}, true));
                this.columnSPE_NO.AllowDBNull = false;
                this.columnUTI_NO.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_SPE_UTILISATEURRow NewCAB_SPE_UTILISATEURRow() {
                return ((CAB_SPE_UTILISATEURRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CAB_SPE_UTILISATEURRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CAB_SPE_UTILISATEURRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CAB_SPE_UTILISATEURRowChanged != null)) {
                    this.CAB_SPE_UTILISATEURRowChanged(this, new CAB_SPE_UTILISATEURRowChangeEvent(((CAB_SPE_UTILISATEURRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CAB_SPE_UTILISATEURRowChanging != null)) {
                    this.CAB_SPE_UTILISATEURRowChanging(this, new CAB_SPE_UTILISATEURRowChangeEvent(((CAB_SPE_UTILISATEURRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CAB_SPE_UTILISATEURRowDeleted != null)) {
                    this.CAB_SPE_UTILISATEURRowDeleted(this, new CAB_SPE_UTILISATEURRowChangeEvent(((CAB_SPE_UTILISATEURRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CAB_SPE_UTILISATEURRowDeleting != null)) {
                    this.CAB_SPE_UTILISATEURRowDeleting(this, new CAB_SPE_UTILISATEURRowChangeEvent(((CAB_SPE_UTILISATEURRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveCAB_SPE_UTILISATEURRow(CAB_SPE_UTILISATEURRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetRedoc ds = new DataSetRedoc();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CAB_SPE_UTILISATEURDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CAB_SPECIALISATIONDataTable : global::System.Data.TypedTableBase<CAB_SPECIALISATIONRow> {
            
            private global::System.Data.DataColumn columnSPE_NO;
            
            private global::System.Data.DataColumn columnSPE_NOM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_SPECIALISATIONDataTable() {
                this.TableName = "CAB_SPECIALISATION";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal CAB_SPECIALISATIONDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected CAB_SPECIALISATIONDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SPE_NOColumn {
                get {
                    return this.columnSPE_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SPE_NOMColumn {
                get {
                    return this.columnSPE_NOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_SPECIALISATIONRow this[int index] {
                get {
                    return ((CAB_SPECIALISATIONRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CAB_SPECIALISATIONRowChangeEventHandler CAB_SPECIALISATIONRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CAB_SPECIALISATIONRowChangeEventHandler CAB_SPECIALISATIONRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CAB_SPECIALISATIONRowChangeEventHandler CAB_SPECIALISATIONRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CAB_SPECIALISATIONRowChangeEventHandler CAB_SPECIALISATIONRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddCAB_SPECIALISATIONRow(CAB_SPECIALISATIONRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_SPECIALISATIONRow AddCAB_SPECIALISATIONRow(short SPE_NO, string SPE_NOM) {
                CAB_SPECIALISATIONRow rowCAB_SPECIALISATIONRow = ((CAB_SPECIALISATIONRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SPE_NO,
                        SPE_NOM};
                rowCAB_SPECIALISATIONRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCAB_SPECIALISATIONRow);
                return rowCAB_SPECIALISATIONRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_SPECIALISATIONRow FindBySPE_NO(short SPE_NO) {
                return ((CAB_SPECIALISATIONRow)(this.Rows.Find(new object[] {
                            SPE_NO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CAB_SPECIALISATIONDataTable cln = ((CAB_SPECIALISATIONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CAB_SPECIALISATIONDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnSPE_NO = base.Columns["SPE_NO"];
                this.columnSPE_NOM = base.Columns["SPE_NOM"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnSPE_NO = new global::System.Data.DataColumn("SPE_NO", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPE_NO);
                this.columnSPE_NOM = new global::System.Data.DataColumn("SPE_NOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPE_NOM);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSPE_NO}, true));
                this.columnSPE_NO.AllowDBNull = false;
                this.columnSPE_NO.Unique = true;
                this.columnSPE_NOM.AllowDBNull = false;
                this.columnSPE_NOM.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_SPECIALISATIONRow NewCAB_SPECIALISATIONRow() {
                return ((CAB_SPECIALISATIONRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CAB_SPECIALISATIONRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CAB_SPECIALISATIONRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CAB_SPECIALISATIONRowChanged != null)) {
                    this.CAB_SPECIALISATIONRowChanged(this, new CAB_SPECIALISATIONRowChangeEvent(((CAB_SPECIALISATIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CAB_SPECIALISATIONRowChanging != null)) {
                    this.CAB_SPECIALISATIONRowChanging(this, new CAB_SPECIALISATIONRowChangeEvent(((CAB_SPECIALISATIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CAB_SPECIALISATIONRowDeleted != null)) {
                    this.CAB_SPECIALISATIONRowDeleted(this, new CAB_SPECIALISATIONRowChangeEvent(((CAB_SPECIALISATIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CAB_SPECIALISATIONRowDeleting != null)) {
                    this.CAB_SPECIALISATIONRowDeleting(this, new CAB_SPECIALISATIONRowChangeEvent(((CAB_SPECIALISATIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveCAB_SPECIALISATIONRow(CAB_SPECIALISATIONRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetRedoc ds = new DataSetRedoc();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CAB_SPECIALISATIONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CAB_UTILISATEURDataTable : global::System.Data.TypedTableBase<CAB_UTILISATEURRow> {
            
            private global::System.Data.DataColumn columnUTI_NO;
            
            private global::System.Data.DataColumn columnUTI_EMAIL;
            
            private global::System.Data.DataColumn columnUTI_MDP;
            
            private global::System.Data.DataColumn columnUTI_ROLE;
            
            private global::System.Data.DataColumn columnUTI_NOM;
            
            private global::System.Data.DataColumn columnUTI_PRENOM;
            
            private global::System.Data.DataColumn columnUTI_ADRESSE;
            
            private global::System.Data.DataColumn columnUTI_TELEPHONE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_UTILISATEURDataTable() {
                this.TableName = "CAB_UTILISATEUR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal CAB_UTILISATEURDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected CAB_UTILISATEURDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UTI_NOColumn {
                get {
                    return this.columnUTI_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UTI_EMAILColumn {
                get {
                    return this.columnUTI_EMAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UTI_MDPColumn {
                get {
                    return this.columnUTI_MDP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UTI_ROLEColumn {
                get {
                    return this.columnUTI_ROLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UTI_NOMColumn {
                get {
                    return this.columnUTI_NOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UTI_PRENOMColumn {
                get {
                    return this.columnUTI_PRENOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UTI_ADRESSEColumn {
                get {
                    return this.columnUTI_ADRESSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UTI_TELEPHONEColumn {
                get {
                    return this.columnUTI_TELEPHONE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_UTILISATEURRow this[int index] {
                get {
                    return ((CAB_UTILISATEURRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CAB_UTILISATEURRowChangeEventHandler CAB_UTILISATEURRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CAB_UTILISATEURRowChangeEventHandler CAB_UTILISATEURRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CAB_UTILISATEURRowChangeEventHandler CAB_UTILISATEURRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CAB_UTILISATEURRowChangeEventHandler CAB_UTILISATEURRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddCAB_UTILISATEURRow(CAB_UTILISATEURRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_UTILISATEURRow AddCAB_UTILISATEURRow(short UTI_NO, string UTI_EMAIL, string UTI_MDP, string UTI_ROLE, string UTI_NOM, string UTI_PRENOM, string UTI_ADRESSE, string UTI_TELEPHONE) {
                CAB_UTILISATEURRow rowCAB_UTILISATEURRow = ((CAB_UTILISATEURRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        UTI_NO,
                        UTI_EMAIL,
                        UTI_MDP,
                        UTI_ROLE,
                        UTI_NOM,
                        UTI_PRENOM,
                        UTI_ADRESSE,
                        UTI_TELEPHONE};
                rowCAB_UTILISATEURRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCAB_UTILISATEURRow);
                return rowCAB_UTILISATEURRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_UTILISATEURRow FindByUTI_NO(short UTI_NO) {
                return ((CAB_UTILISATEURRow)(this.Rows.Find(new object[] {
                            UTI_NO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CAB_UTILISATEURDataTable cln = ((CAB_UTILISATEURDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CAB_UTILISATEURDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnUTI_NO = base.Columns["UTI_NO"];
                this.columnUTI_EMAIL = base.Columns["UTI_EMAIL"];
                this.columnUTI_MDP = base.Columns["UTI_MDP"];
                this.columnUTI_ROLE = base.Columns["UTI_ROLE"];
                this.columnUTI_NOM = base.Columns["UTI_NOM"];
                this.columnUTI_PRENOM = base.Columns["UTI_PRENOM"];
                this.columnUTI_ADRESSE = base.Columns["UTI_ADRESSE"];
                this.columnUTI_TELEPHONE = base.Columns["UTI_TELEPHONE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnUTI_NO = new global::System.Data.DataColumn("UTI_NO", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUTI_NO);
                this.columnUTI_EMAIL = new global::System.Data.DataColumn("UTI_EMAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUTI_EMAIL);
                this.columnUTI_MDP = new global::System.Data.DataColumn("UTI_MDP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUTI_MDP);
                this.columnUTI_ROLE = new global::System.Data.DataColumn("UTI_ROLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUTI_ROLE);
                this.columnUTI_NOM = new global::System.Data.DataColumn("UTI_NOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUTI_NOM);
                this.columnUTI_PRENOM = new global::System.Data.DataColumn("UTI_PRENOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUTI_PRENOM);
                this.columnUTI_ADRESSE = new global::System.Data.DataColumn("UTI_ADRESSE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUTI_ADRESSE);
                this.columnUTI_TELEPHONE = new global::System.Data.DataColumn("UTI_TELEPHONE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUTI_TELEPHONE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnUTI_NO}, true));
                this.columnUTI_NO.AllowDBNull = false;
                this.columnUTI_NO.Unique = true;
                this.columnUTI_EMAIL.AllowDBNull = false;
                this.columnUTI_EMAIL.MaxLength = 255;
                this.columnUTI_MDP.AllowDBNull = false;
                this.columnUTI_MDP.MaxLength = 255;
                this.columnUTI_ROLE.AllowDBNull = false;
                this.columnUTI_ROLE.MaxLength = 3;
                this.columnUTI_NOM.AllowDBNull = false;
                this.columnUTI_NOM.MaxLength = 255;
                this.columnUTI_PRENOM.AllowDBNull = false;
                this.columnUTI_PRENOM.MaxLength = 255;
                this.columnUTI_ADRESSE.AllowDBNull = false;
                this.columnUTI_ADRESSE.MaxLength = 255;
                this.columnUTI_TELEPHONE.AllowDBNull = false;
                this.columnUTI_TELEPHONE.MaxLength = 32;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_UTILISATEURRow NewCAB_UTILISATEURRow() {
                return ((CAB_UTILISATEURRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CAB_UTILISATEURRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CAB_UTILISATEURRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CAB_UTILISATEURRowChanged != null)) {
                    this.CAB_UTILISATEURRowChanged(this, new CAB_UTILISATEURRowChangeEvent(((CAB_UTILISATEURRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CAB_UTILISATEURRowChanging != null)) {
                    this.CAB_UTILISATEURRowChanging(this, new CAB_UTILISATEURRowChangeEvent(((CAB_UTILISATEURRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CAB_UTILISATEURRowDeleted != null)) {
                    this.CAB_UTILISATEURRowDeleted(this, new CAB_UTILISATEURRowChangeEvent(((CAB_UTILISATEURRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CAB_UTILISATEURRowDeleting != null)) {
                    this.CAB_UTILISATEURRowDeleting(this, new CAB_UTILISATEURRowChangeEvent(((CAB_UTILISATEURRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveCAB_UTILISATEURRow(CAB_UTILISATEURRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetRedoc ds = new DataSetRedoc();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CAB_UTILISATEURDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class VW_DOCTEURDataTable : global::System.Data.TypedTableBase<VW_DOCTEURRow> {
            
            private global::System.Data.DataColumn columnDOC_NO;
            
            private global::System.Data.DataColumn columnDOC_EMAIL;
            
            private global::System.Data.DataColumn columnDOC_MDP;
            
            private global::System.Data.DataColumn columnDOC_NOM;
            
            private global::System.Data.DataColumn columnDOC_PRENOM;
            
            private global::System.Data.DataColumn columnDOC_NOM_COMPLET;
            
            private global::System.Data.DataColumn columnDOC_ADRESSE;
            
            private global::System.Data.DataColumn columnDOC_TELEPHONE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_DOCTEURDataTable() {
                this.TableName = "VW_DOCTEUR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal VW_DOCTEURDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected VW_DOCTEURDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DOC_NOColumn {
                get {
                    return this.columnDOC_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DOC_EMAILColumn {
                get {
                    return this.columnDOC_EMAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DOC_MDPColumn {
                get {
                    return this.columnDOC_MDP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DOC_NOMColumn {
                get {
                    return this.columnDOC_NOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DOC_PRENOMColumn {
                get {
                    return this.columnDOC_PRENOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DOC_NOM_COMPLETColumn {
                get {
                    return this.columnDOC_NOM_COMPLET;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DOC_ADRESSEColumn {
                get {
                    return this.columnDOC_ADRESSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DOC_TELEPHONEColumn {
                get {
                    return this.columnDOC_TELEPHONE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_DOCTEURRow this[int index] {
                get {
                    return ((VW_DOCTEURRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VW_DOCTEURRowChangeEventHandler VW_DOCTEURRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VW_DOCTEURRowChangeEventHandler VW_DOCTEURRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VW_DOCTEURRowChangeEventHandler VW_DOCTEURRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VW_DOCTEURRowChangeEventHandler VW_DOCTEURRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddVW_DOCTEURRow(VW_DOCTEURRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_DOCTEURRow AddVW_DOCTEURRow(short DOC_NO, string DOC_EMAIL, string DOC_MDP, string DOC_NOM, string DOC_PRENOM, string DOC_NOM_COMPLET, string DOC_ADRESSE, string DOC_TELEPHONE) {
                VW_DOCTEURRow rowVW_DOCTEURRow = ((VW_DOCTEURRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DOC_NO,
                        DOC_EMAIL,
                        DOC_MDP,
                        DOC_NOM,
                        DOC_PRENOM,
                        DOC_NOM_COMPLET,
                        DOC_ADRESSE,
                        DOC_TELEPHONE};
                rowVW_DOCTEURRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowVW_DOCTEURRow);
                return rowVW_DOCTEURRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                VW_DOCTEURDataTable cln = ((VW_DOCTEURDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new VW_DOCTEURDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnDOC_NO = base.Columns["DOC_NO"];
                this.columnDOC_EMAIL = base.Columns["DOC_EMAIL"];
                this.columnDOC_MDP = base.Columns["DOC_MDP"];
                this.columnDOC_NOM = base.Columns["DOC_NOM"];
                this.columnDOC_PRENOM = base.Columns["DOC_PRENOM"];
                this.columnDOC_NOM_COMPLET = base.Columns["DOC_NOM_COMPLET"];
                this.columnDOC_ADRESSE = base.Columns["DOC_ADRESSE"];
                this.columnDOC_TELEPHONE = base.Columns["DOC_TELEPHONE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnDOC_NO = new global::System.Data.DataColumn("DOC_NO", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOC_NO);
                this.columnDOC_EMAIL = new global::System.Data.DataColumn("DOC_EMAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOC_EMAIL);
                this.columnDOC_MDP = new global::System.Data.DataColumn("DOC_MDP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOC_MDP);
                this.columnDOC_NOM = new global::System.Data.DataColumn("DOC_NOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOC_NOM);
                this.columnDOC_PRENOM = new global::System.Data.DataColumn("DOC_PRENOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOC_PRENOM);
                this.columnDOC_NOM_COMPLET = new global::System.Data.DataColumn("DOC_NOM_COMPLET", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOC_NOM_COMPLET);
                this.columnDOC_ADRESSE = new global::System.Data.DataColumn("DOC_ADRESSE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOC_ADRESSE);
                this.columnDOC_TELEPHONE = new global::System.Data.DataColumn("DOC_TELEPHONE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOC_TELEPHONE);
                this.columnDOC_NO.AllowDBNull = false;
                this.columnDOC_EMAIL.AllowDBNull = false;
                this.columnDOC_EMAIL.MaxLength = 255;
                this.columnDOC_MDP.AllowDBNull = false;
                this.columnDOC_MDP.MaxLength = 255;
                this.columnDOC_NOM.MaxLength = 255;
                this.columnDOC_PRENOM.AllowDBNull = false;
                this.columnDOC_PRENOM.MaxLength = 255;
                this.columnDOC_NOM_COMPLET.MaxLength = 511;
                this.columnDOC_ADRESSE.AllowDBNull = false;
                this.columnDOC_ADRESSE.MaxLength = 255;
                this.columnDOC_TELEPHONE.AllowDBNull = false;
                this.columnDOC_TELEPHONE.MaxLength = 32;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_DOCTEURRow NewVW_DOCTEURRow() {
                return ((VW_DOCTEURRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new VW_DOCTEURRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(VW_DOCTEURRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.VW_DOCTEURRowChanged != null)) {
                    this.VW_DOCTEURRowChanged(this, new VW_DOCTEURRowChangeEvent(((VW_DOCTEURRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.VW_DOCTEURRowChanging != null)) {
                    this.VW_DOCTEURRowChanging(this, new VW_DOCTEURRowChangeEvent(((VW_DOCTEURRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.VW_DOCTEURRowDeleted != null)) {
                    this.VW_DOCTEURRowDeleted(this, new VW_DOCTEURRowChangeEvent(((VW_DOCTEURRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.VW_DOCTEURRowDeleting != null)) {
                    this.VW_DOCTEURRowDeleting(this, new VW_DOCTEURRowChangeEvent(((VW_DOCTEURRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveVW_DOCTEURRow(VW_DOCTEURRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetRedoc ds = new DataSetRedoc();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "VW_DOCTEURDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class VW_EXAMENDataTable : global::System.Data.TypedTableBase<VW_EXAMENRow> {
            
            private global::System.Data.DataColumn columnLIS_NO;
            
            private global::System.Data.DataColumn columnLIS_NOM;
            
            private global::System.Data.DataColumn columnLIS_PRIX_HORAIRE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_EXAMENDataTable() {
                this.TableName = "VW_EXAMEN";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal VW_EXAMENDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected VW_EXAMENDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LIS_NOColumn {
                get {
                    return this.columnLIS_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LIS_NOMColumn {
                get {
                    return this.columnLIS_NOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LIS_PRIX_HORAIREColumn {
                get {
                    return this.columnLIS_PRIX_HORAIRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_EXAMENRow this[int index] {
                get {
                    return ((VW_EXAMENRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VW_EXAMENRowChangeEventHandler VW_EXAMENRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VW_EXAMENRowChangeEventHandler VW_EXAMENRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VW_EXAMENRowChangeEventHandler VW_EXAMENRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VW_EXAMENRowChangeEventHandler VW_EXAMENRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddVW_EXAMENRow(VW_EXAMENRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_EXAMENRow AddVW_EXAMENRow(short LIS_NO, string LIS_NOM, double LIS_PRIX_HORAIRE) {
                VW_EXAMENRow rowVW_EXAMENRow = ((VW_EXAMENRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LIS_NO,
                        LIS_NOM,
                        LIS_PRIX_HORAIRE};
                rowVW_EXAMENRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowVW_EXAMENRow);
                return rowVW_EXAMENRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                VW_EXAMENDataTable cln = ((VW_EXAMENDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new VW_EXAMENDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnLIS_NO = base.Columns["LIS_NO"];
                this.columnLIS_NOM = base.Columns["LIS_NOM"];
                this.columnLIS_PRIX_HORAIRE = base.Columns["LIS_PRIX_HORAIRE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnLIS_NO = new global::System.Data.DataColumn("LIS_NO", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIS_NO);
                this.columnLIS_NOM = new global::System.Data.DataColumn("LIS_NOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIS_NOM);
                this.columnLIS_PRIX_HORAIRE = new global::System.Data.DataColumn("LIS_PRIX_HORAIRE", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIS_PRIX_HORAIRE);
                this.columnLIS_NO.AllowDBNull = false;
                this.columnLIS_NOM.AllowDBNull = false;
                this.columnLIS_NOM.MaxLength = 255;
                this.columnLIS_PRIX_HORAIRE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_EXAMENRow NewVW_EXAMENRow() {
                return ((VW_EXAMENRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new VW_EXAMENRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(VW_EXAMENRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.VW_EXAMENRowChanged != null)) {
                    this.VW_EXAMENRowChanged(this, new VW_EXAMENRowChangeEvent(((VW_EXAMENRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.VW_EXAMENRowChanging != null)) {
                    this.VW_EXAMENRowChanging(this, new VW_EXAMENRowChangeEvent(((VW_EXAMENRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.VW_EXAMENRowDeleted != null)) {
                    this.VW_EXAMENRowDeleted(this, new VW_EXAMENRowChangeEvent(((VW_EXAMENRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.VW_EXAMENRowDeleting != null)) {
                    this.VW_EXAMENRowDeleting(this, new VW_EXAMENRowChangeEvent(((VW_EXAMENRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveVW_EXAMENRow(VW_EXAMENRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetRedoc ds = new DataSetRedoc();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "VW_EXAMENDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class VW_HORAIRE_DOCTEURDataTable : global::System.Data.TypedTableBase<VW_HORAIRE_DOCTEURRow> {
            
            private global::System.Data.DataColumn columnHOR_JOUR;
            
            private global::System.Data.DataColumn columnHOR_DEBUT;
            
            private global::System.Data.DataColumn columnHOR_FIN;
            
            private global::System.Data.DataColumn columnHOR_UTI_NO;
            
            private global::System.Data.DataColumn columnHOR_NO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_HORAIRE_DOCTEURDataTable() {
                this.TableName = "VW_HORAIRE_DOCTEUR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal VW_HORAIRE_DOCTEURDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected VW_HORAIRE_DOCTEURDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HOR_JOURColumn {
                get {
                    return this.columnHOR_JOUR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HOR_DEBUTColumn {
                get {
                    return this.columnHOR_DEBUT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HOR_FINColumn {
                get {
                    return this.columnHOR_FIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HOR_UTI_NOColumn {
                get {
                    return this.columnHOR_UTI_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HOR_NOColumn {
                get {
                    return this.columnHOR_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_HORAIRE_DOCTEURRow this[int index] {
                get {
                    return ((VW_HORAIRE_DOCTEURRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VW_HORAIRE_DOCTEURRowChangeEventHandler VW_HORAIRE_DOCTEURRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VW_HORAIRE_DOCTEURRowChangeEventHandler VW_HORAIRE_DOCTEURRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VW_HORAIRE_DOCTEURRowChangeEventHandler VW_HORAIRE_DOCTEURRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VW_HORAIRE_DOCTEURRowChangeEventHandler VW_HORAIRE_DOCTEURRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddVW_HORAIRE_DOCTEURRow(VW_HORAIRE_DOCTEURRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_HORAIRE_DOCTEURRow AddVW_HORAIRE_DOCTEURRow(short HOR_JOUR, short HOR_DEBUT, short HOR_FIN, short HOR_UTI_NO, short HOR_NO) {
                VW_HORAIRE_DOCTEURRow rowVW_HORAIRE_DOCTEURRow = ((VW_HORAIRE_DOCTEURRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        HOR_JOUR,
                        HOR_DEBUT,
                        HOR_FIN,
                        HOR_UTI_NO,
                        HOR_NO};
                rowVW_HORAIRE_DOCTEURRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowVW_HORAIRE_DOCTEURRow);
                return rowVW_HORAIRE_DOCTEURRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                VW_HORAIRE_DOCTEURDataTable cln = ((VW_HORAIRE_DOCTEURDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new VW_HORAIRE_DOCTEURDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnHOR_JOUR = base.Columns["HOR_JOUR"];
                this.columnHOR_DEBUT = base.Columns["HOR_DEBUT"];
                this.columnHOR_FIN = base.Columns["HOR_FIN"];
                this.columnHOR_UTI_NO = base.Columns["HOR_UTI_NO"];
                this.columnHOR_NO = base.Columns["HOR_NO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnHOR_JOUR = new global::System.Data.DataColumn("HOR_JOUR", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOR_JOUR);
                this.columnHOR_DEBUT = new global::System.Data.DataColumn("HOR_DEBUT", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOR_DEBUT);
                this.columnHOR_FIN = new global::System.Data.DataColumn("HOR_FIN", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOR_FIN);
                this.columnHOR_UTI_NO = new global::System.Data.DataColumn("HOR_UTI_NO", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOR_UTI_NO);
                this.columnHOR_NO = new global::System.Data.DataColumn("HOR_NO", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOR_NO);
                this.columnHOR_JOUR.AllowDBNull = false;
                this.columnHOR_DEBUT.AllowDBNull = false;
                this.columnHOR_FIN.AllowDBNull = false;
                this.columnHOR_UTI_NO.AllowDBNull = false;
                this.columnHOR_NO.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_HORAIRE_DOCTEURRow NewVW_HORAIRE_DOCTEURRow() {
                return ((VW_HORAIRE_DOCTEURRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new VW_HORAIRE_DOCTEURRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(VW_HORAIRE_DOCTEURRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.VW_HORAIRE_DOCTEURRowChanged != null)) {
                    this.VW_HORAIRE_DOCTEURRowChanged(this, new VW_HORAIRE_DOCTEURRowChangeEvent(((VW_HORAIRE_DOCTEURRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.VW_HORAIRE_DOCTEURRowChanging != null)) {
                    this.VW_HORAIRE_DOCTEURRowChanging(this, new VW_HORAIRE_DOCTEURRowChangeEvent(((VW_HORAIRE_DOCTEURRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.VW_HORAIRE_DOCTEURRowDeleted != null)) {
                    this.VW_HORAIRE_DOCTEURRowDeleted(this, new VW_HORAIRE_DOCTEURRowChangeEvent(((VW_HORAIRE_DOCTEURRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.VW_HORAIRE_DOCTEURRowDeleting != null)) {
                    this.VW_HORAIRE_DOCTEURRowDeleting(this, new VW_HORAIRE_DOCTEURRowChangeEvent(((VW_HORAIRE_DOCTEURRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveVW_HORAIRE_DOCTEURRow(VW_HORAIRE_DOCTEURRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetRedoc ds = new DataSetRedoc();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "VW_HORAIRE_DOCTEURDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class VW_PATIENTDataTable : global::System.Data.TypedTableBase<VW_PATIENTRow> {
            
            private global::System.Data.DataColumn columnPAT_NO;
            
            private global::System.Data.DataColumn columnPAT_NOM;
            
            private global::System.Data.DataColumn columnPAT_PRENOM;
            
            private global::System.Data.DataColumn columnPAT_NOM_COMPLET;
            
            private global::System.Data.DataColumn columnPAT_DATE_NAISSANCE;
            
            private global::System.Data.DataColumn columnPAT_ADRESSE;
            
            private global::System.Data.DataColumn columnPAT_EMAIL;
            
            private global::System.Data.DataColumn columnPAT_TELEPHONE;
            
            private global::System.Data.DataColumn columnPAT_NO_AVS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_PATIENTDataTable() {
                this.TableName = "VW_PATIENT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal VW_PATIENTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected VW_PATIENTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PAT_NOColumn {
                get {
                    return this.columnPAT_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PAT_NOMColumn {
                get {
                    return this.columnPAT_NOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PAT_PRENOMColumn {
                get {
                    return this.columnPAT_PRENOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PAT_NOM_COMPLETColumn {
                get {
                    return this.columnPAT_NOM_COMPLET;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PAT_DATE_NAISSANCEColumn {
                get {
                    return this.columnPAT_DATE_NAISSANCE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PAT_ADRESSEColumn {
                get {
                    return this.columnPAT_ADRESSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PAT_EMAILColumn {
                get {
                    return this.columnPAT_EMAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PAT_TELEPHONEColumn {
                get {
                    return this.columnPAT_TELEPHONE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PAT_NO_AVSColumn {
                get {
                    return this.columnPAT_NO_AVS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_PATIENTRow this[int index] {
                get {
                    return ((VW_PATIENTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VW_PATIENTRowChangeEventHandler VW_PATIENTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VW_PATIENTRowChangeEventHandler VW_PATIENTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VW_PATIENTRowChangeEventHandler VW_PATIENTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VW_PATIENTRowChangeEventHandler VW_PATIENTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddVW_PATIENTRow(VW_PATIENTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_PATIENTRow AddVW_PATIENTRow(short PAT_NO, string PAT_NOM, string PAT_PRENOM, string PAT_NOM_COMPLET, System.DateTime PAT_DATE_NAISSANCE, string PAT_ADRESSE, string PAT_EMAIL, string PAT_TELEPHONE, string PAT_NO_AVS) {
                VW_PATIENTRow rowVW_PATIENTRow = ((VW_PATIENTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PAT_NO,
                        PAT_NOM,
                        PAT_PRENOM,
                        PAT_NOM_COMPLET,
                        PAT_DATE_NAISSANCE,
                        PAT_ADRESSE,
                        PAT_EMAIL,
                        PAT_TELEPHONE,
                        PAT_NO_AVS};
                rowVW_PATIENTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowVW_PATIENTRow);
                return rowVW_PATIENTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                VW_PATIENTDataTable cln = ((VW_PATIENTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new VW_PATIENTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnPAT_NO = base.Columns["PAT_NO"];
                this.columnPAT_NOM = base.Columns["PAT_NOM"];
                this.columnPAT_PRENOM = base.Columns["PAT_PRENOM"];
                this.columnPAT_NOM_COMPLET = base.Columns["PAT_NOM_COMPLET"];
                this.columnPAT_DATE_NAISSANCE = base.Columns["PAT_DATE_NAISSANCE"];
                this.columnPAT_ADRESSE = base.Columns["PAT_ADRESSE"];
                this.columnPAT_EMAIL = base.Columns["PAT_EMAIL"];
                this.columnPAT_TELEPHONE = base.Columns["PAT_TELEPHONE"];
                this.columnPAT_NO_AVS = base.Columns["PAT_NO_AVS"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnPAT_NO = new global::System.Data.DataColumn("PAT_NO", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAT_NO);
                this.columnPAT_NOM = new global::System.Data.DataColumn("PAT_NOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAT_NOM);
                this.columnPAT_PRENOM = new global::System.Data.DataColumn("PAT_PRENOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAT_PRENOM);
                this.columnPAT_NOM_COMPLET = new global::System.Data.DataColumn("PAT_NOM_COMPLET", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAT_NOM_COMPLET);
                this.columnPAT_DATE_NAISSANCE = new global::System.Data.DataColumn("PAT_DATE_NAISSANCE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAT_DATE_NAISSANCE);
                this.columnPAT_ADRESSE = new global::System.Data.DataColumn("PAT_ADRESSE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAT_ADRESSE);
                this.columnPAT_EMAIL = new global::System.Data.DataColumn("PAT_EMAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAT_EMAIL);
                this.columnPAT_TELEPHONE = new global::System.Data.DataColumn("PAT_TELEPHONE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAT_TELEPHONE);
                this.columnPAT_NO_AVS = new global::System.Data.DataColumn("PAT_NO_AVS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAT_NO_AVS);
                this.columnPAT_NO.AllowDBNull = false;
                this.columnPAT_NOM.MaxLength = 50;
                this.columnPAT_PRENOM.AllowDBNull = false;
                this.columnPAT_PRENOM.MaxLength = 50;
                this.columnPAT_NOM_COMPLET.MaxLength = 101;
                this.columnPAT_DATE_NAISSANCE.AllowDBNull = false;
                this.columnPAT_ADRESSE.AllowDBNull = false;
                this.columnPAT_ADRESSE.MaxLength = 255;
                this.columnPAT_EMAIL.AllowDBNull = false;
                this.columnPAT_EMAIL.MaxLength = 255;
                this.columnPAT_TELEPHONE.AllowDBNull = false;
                this.columnPAT_TELEPHONE.MaxLength = 32;
                this.columnPAT_NO_AVS.AllowDBNull = false;
                this.columnPAT_NO_AVS.MaxLength = 32;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_PATIENTRow NewVW_PATIENTRow() {
                return ((VW_PATIENTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new VW_PATIENTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(VW_PATIENTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.VW_PATIENTRowChanged != null)) {
                    this.VW_PATIENTRowChanged(this, new VW_PATIENTRowChangeEvent(((VW_PATIENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.VW_PATIENTRowChanging != null)) {
                    this.VW_PATIENTRowChanging(this, new VW_PATIENTRowChangeEvent(((VW_PATIENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.VW_PATIENTRowDeleted != null)) {
                    this.VW_PATIENTRowDeleted(this, new VW_PATIENTRowChangeEvent(((VW_PATIENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.VW_PATIENTRowDeleting != null)) {
                    this.VW_PATIENTRowDeleting(this, new VW_PATIENTRowChangeEvent(((VW_PATIENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveVW_PATIENTRow(VW_PATIENTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetRedoc ds = new DataSetRedoc();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "VW_PATIENTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class VW_EXCEPTION_HORAIRE_DOCTEURDataTable : global::System.Data.TypedTableBase<VW_EXCEPTION_HORAIRE_DOCTEURRow> {
            
            private global::System.Data.DataColumn columnEXC_UTI_NO;
            
            private global::System.Data.DataColumn columnEXC_DEBUT;
            
            private global::System.Data.DataColumn columnEXC_FIN;
            
            private global::System.Data.DataColumn columnEXC_COMMENTAIRE;
            
            private global::System.Data.DataColumn columnEXC_NO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_EXCEPTION_HORAIRE_DOCTEURDataTable() {
                this.TableName = "VW_EXCEPTION_HORAIRE_DOCTEUR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal VW_EXCEPTION_HORAIRE_DOCTEURDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected VW_EXCEPTION_HORAIRE_DOCTEURDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXC_UTI_NOColumn {
                get {
                    return this.columnEXC_UTI_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXC_DEBUTColumn {
                get {
                    return this.columnEXC_DEBUT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXC_FINColumn {
                get {
                    return this.columnEXC_FIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXC_COMMENTAIREColumn {
                get {
                    return this.columnEXC_COMMENTAIRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXC_NOColumn {
                get {
                    return this.columnEXC_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_EXCEPTION_HORAIRE_DOCTEURRow this[int index] {
                get {
                    return ((VW_EXCEPTION_HORAIRE_DOCTEURRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VW_EXCEPTION_HORAIRE_DOCTEURRowChangeEventHandler VW_EXCEPTION_HORAIRE_DOCTEURRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VW_EXCEPTION_HORAIRE_DOCTEURRowChangeEventHandler VW_EXCEPTION_HORAIRE_DOCTEURRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VW_EXCEPTION_HORAIRE_DOCTEURRowChangeEventHandler VW_EXCEPTION_HORAIRE_DOCTEURRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VW_EXCEPTION_HORAIRE_DOCTEURRowChangeEventHandler VW_EXCEPTION_HORAIRE_DOCTEURRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddVW_EXCEPTION_HORAIRE_DOCTEURRow(VW_EXCEPTION_HORAIRE_DOCTEURRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_EXCEPTION_HORAIRE_DOCTEURRow AddVW_EXCEPTION_HORAIRE_DOCTEURRow(short EXC_UTI_NO, System.DateTime EXC_DEBUT, System.DateTime EXC_FIN, string EXC_COMMENTAIRE, short EXC_NO) {
                VW_EXCEPTION_HORAIRE_DOCTEURRow rowVW_EXCEPTION_HORAIRE_DOCTEURRow = ((VW_EXCEPTION_HORAIRE_DOCTEURRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EXC_UTI_NO,
                        EXC_DEBUT,
                        EXC_FIN,
                        EXC_COMMENTAIRE,
                        EXC_NO};
                rowVW_EXCEPTION_HORAIRE_DOCTEURRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowVW_EXCEPTION_HORAIRE_DOCTEURRow);
                return rowVW_EXCEPTION_HORAIRE_DOCTEURRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                VW_EXCEPTION_HORAIRE_DOCTEURDataTable cln = ((VW_EXCEPTION_HORAIRE_DOCTEURDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new VW_EXCEPTION_HORAIRE_DOCTEURDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnEXC_UTI_NO = base.Columns["EXC_UTI_NO"];
                this.columnEXC_DEBUT = base.Columns["EXC_DEBUT"];
                this.columnEXC_FIN = base.Columns["EXC_FIN"];
                this.columnEXC_COMMENTAIRE = base.Columns["EXC_COMMENTAIRE"];
                this.columnEXC_NO = base.Columns["EXC_NO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnEXC_UTI_NO = new global::System.Data.DataColumn("EXC_UTI_NO", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXC_UTI_NO);
                this.columnEXC_DEBUT = new global::System.Data.DataColumn("EXC_DEBUT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXC_DEBUT);
                this.columnEXC_FIN = new global::System.Data.DataColumn("EXC_FIN", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXC_FIN);
                this.columnEXC_COMMENTAIRE = new global::System.Data.DataColumn("EXC_COMMENTAIRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXC_COMMENTAIRE);
                this.columnEXC_NO = new global::System.Data.DataColumn("EXC_NO", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXC_NO);
                this.columnEXC_UTI_NO.AllowDBNull = false;
                this.columnEXC_DEBUT.AllowDBNull = false;
                this.columnEXC_FIN.AllowDBNull = false;
                this.columnEXC_COMMENTAIRE.MaxLength = 2147483647;
                this.columnEXC_NO.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_EXCEPTION_HORAIRE_DOCTEURRow NewVW_EXCEPTION_HORAIRE_DOCTEURRow() {
                return ((VW_EXCEPTION_HORAIRE_DOCTEURRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new VW_EXCEPTION_HORAIRE_DOCTEURRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(VW_EXCEPTION_HORAIRE_DOCTEURRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.VW_EXCEPTION_HORAIRE_DOCTEURRowChanged != null)) {
                    this.VW_EXCEPTION_HORAIRE_DOCTEURRowChanged(this, new VW_EXCEPTION_HORAIRE_DOCTEURRowChangeEvent(((VW_EXCEPTION_HORAIRE_DOCTEURRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.VW_EXCEPTION_HORAIRE_DOCTEURRowChanging != null)) {
                    this.VW_EXCEPTION_HORAIRE_DOCTEURRowChanging(this, new VW_EXCEPTION_HORAIRE_DOCTEURRowChangeEvent(((VW_EXCEPTION_HORAIRE_DOCTEURRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.VW_EXCEPTION_HORAIRE_DOCTEURRowDeleted != null)) {
                    this.VW_EXCEPTION_HORAIRE_DOCTEURRowDeleted(this, new VW_EXCEPTION_HORAIRE_DOCTEURRowChangeEvent(((VW_EXCEPTION_HORAIRE_DOCTEURRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.VW_EXCEPTION_HORAIRE_DOCTEURRowDeleting != null)) {
                    this.VW_EXCEPTION_HORAIRE_DOCTEURRowDeleting(this, new VW_EXCEPTION_HORAIRE_DOCTEURRowChangeEvent(((VW_EXCEPTION_HORAIRE_DOCTEURRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveVW_EXCEPTION_HORAIRE_DOCTEURRow(VW_EXCEPTION_HORAIRE_DOCTEURRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetRedoc ds = new DataSetRedoc();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "VW_EXCEPTION_HORAIRE_DOCTEURDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class VW_FACTUREDataTable : global::System.Data.TypedTableBase<VW_FACTURERow> {
            
            private global::System.Data.DataColumn columnFAC_NO;
            
            private global::System.Data.DataColumn columnPAT_NOM;
            
            private global::System.Data.DataColumn columnPAT_PRENOM;
            
            private global::System.Data.DataColumn columnPAT_NOM_COMPLET;
            
            private global::System.Data.DataColumn columnFAC_DATE;
            
            private global::System.Data.DataColumn columnFAC_PAYE;
            
            private global::System.Data.DataColumn columnFAC_TOTAL;
            
            private global::System.Data.DataColumn columnPAT_NO;
            
            private global::System.Data.DataColumn columnFAC_REN_NO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_FACTUREDataTable() {
                this.TableName = "VW_FACTURE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal VW_FACTUREDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected VW_FACTUREDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FAC_NOColumn {
                get {
                    return this.columnFAC_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PAT_NOMColumn {
                get {
                    return this.columnPAT_NOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PAT_PRENOMColumn {
                get {
                    return this.columnPAT_PRENOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PAT_NOM_COMPLETColumn {
                get {
                    return this.columnPAT_NOM_COMPLET;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FAC_DATEColumn {
                get {
                    return this.columnFAC_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FAC_PAYEColumn {
                get {
                    return this.columnFAC_PAYE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FAC_TOTALColumn {
                get {
                    return this.columnFAC_TOTAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PAT_NOColumn {
                get {
                    return this.columnPAT_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FAC_REN_NOColumn {
                get {
                    return this.columnFAC_REN_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_FACTURERow this[int index] {
                get {
                    return ((VW_FACTURERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VW_FACTURERowChangeEventHandler VW_FACTURERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VW_FACTURERowChangeEventHandler VW_FACTURERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VW_FACTURERowChangeEventHandler VW_FACTURERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VW_FACTURERowChangeEventHandler VW_FACTURERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddVW_FACTURERow(VW_FACTURERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_FACTURERow AddVW_FACTURERow(short FAC_NO, string PAT_NOM, string PAT_PRENOM, string PAT_NOM_COMPLET, System.DateTime FAC_DATE, short FAC_PAYE, double FAC_TOTAL, short PAT_NO, short FAC_REN_NO) {
                VW_FACTURERow rowVW_FACTURERow = ((VW_FACTURERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FAC_NO,
                        PAT_NOM,
                        PAT_PRENOM,
                        PAT_NOM_COMPLET,
                        FAC_DATE,
                        FAC_PAYE,
                        FAC_TOTAL,
                        PAT_NO,
                        FAC_REN_NO};
                rowVW_FACTURERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowVW_FACTURERow);
                return rowVW_FACTURERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                VW_FACTUREDataTable cln = ((VW_FACTUREDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new VW_FACTUREDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnFAC_NO = base.Columns["FAC_NO"];
                this.columnPAT_NOM = base.Columns["PAT_NOM"];
                this.columnPAT_PRENOM = base.Columns["PAT_PRENOM"];
                this.columnPAT_NOM_COMPLET = base.Columns["PAT_NOM_COMPLET"];
                this.columnFAC_DATE = base.Columns["FAC_DATE"];
                this.columnFAC_PAYE = base.Columns["FAC_PAYE"];
                this.columnFAC_TOTAL = base.Columns["FAC_TOTAL"];
                this.columnPAT_NO = base.Columns["PAT_NO"];
                this.columnFAC_REN_NO = base.Columns["FAC_REN_NO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnFAC_NO = new global::System.Data.DataColumn("FAC_NO", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAC_NO);
                this.columnPAT_NOM = new global::System.Data.DataColumn("PAT_NOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAT_NOM);
                this.columnPAT_PRENOM = new global::System.Data.DataColumn("PAT_PRENOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAT_PRENOM);
                this.columnPAT_NOM_COMPLET = new global::System.Data.DataColumn("PAT_NOM_COMPLET", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAT_NOM_COMPLET);
                this.columnFAC_DATE = new global::System.Data.DataColumn("FAC_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAC_DATE);
                this.columnFAC_PAYE = new global::System.Data.DataColumn("FAC_PAYE", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAC_PAYE);
                this.columnFAC_TOTAL = new global::System.Data.DataColumn("FAC_TOTAL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAC_TOTAL);
                this.columnPAT_NO = new global::System.Data.DataColumn("PAT_NO", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAT_NO);
                this.columnFAC_REN_NO = new global::System.Data.DataColumn("FAC_REN_NO", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAC_REN_NO);
                this.columnFAC_NO.AllowDBNull = false;
                this.columnPAT_NOM.AllowDBNull = false;
                this.columnPAT_NOM.MaxLength = 50;
                this.columnPAT_PRENOM.AllowDBNull = false;
                this.columnPAT_PRENOM.MaxLength = 50;
                this.columnPAT_NOM_COMPLET.MaxLength = 101;
                this.columnFAC_DATE.AllowDBNull = false;
                this.columnFAC_PAYE.AllowDBNull = false;
                this.columnFAC_TOTAL.AllowDBNull = false;
                this.columnPAT_NO.AllowDBNull = false;
                this.columnFAC_REN_NO.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_FACTURERow NewVW_FACTURERow() {
                return ((VW_FACTURERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new VW_FACTURERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(VW_FACTURERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.VW_FACTURERowChanged != null)) {
                    this.VW_FACTURERowChanged(this, new VW_FACTURERowChangeEvent(((VW_FACTURERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.VW_FACTURERowChanging != null)) {
                    this.VW_FACTURERowChanging(this, new VW_FACTURERowChangeEvent(((VW_FACTURERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.VW_FACTURERowDeleted != null)) {
                    this.VW_FACTURERowDeleted(this, new VW_FACTURERowChangeEvent(((VW_FACTURERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.VW_FACTURERowDeleting != null)) {
                    this.VW_FACTURERowDeleting(this, new VW_FACTURERowChangeEvent(((VW_FACTURERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveVW_FACTURERow(VW_FACTURERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetRedoc ds = new DataSetRedoc();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "VW_FACTUREDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class VW_RENDEZVOUSDataTable : global::System.Data.TypedTableBase<VW_RENDEZVOUSRow> {
            
            private global::System.Data.DataColumn columnREN_NO;
            
            private global::System.Data.DataColumn columnREN_DATE;
            
            private global::System.Data.DataColumn columnPAT_NOM;
            
            private global::System.Data.DataColumn columnPAT_PRENOM;
            
            private global::System.Data.DataColumn columnPAT_NOM_COMPLET;
            
            private global::System.Data.DataColumn columnDOC_NOM;
            
            private global::System.Data.DataColumn columnDOC_PRENOM;
            
            private global::System.Data.DataColumn columnDOC_NOM_COMPLET;
            
            private global::System.Data.DataColumn columnREN_ANNULE;
            
            private global::System.Data.DataColumn columnREN_COMMENTAIRE;
            
            private global::System.Data.DataColumn columnPAT_NO;
            
            private global::System.Data.DataColumn columnDOC_NO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_RENDEZVOUSDataTable() {
                this.TableName = "VW_RENDEZVOUS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal VW_RENDEZVOUSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected VW_RENDEZVOUSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REN_NOColumn {
                get {
                    return this.columnREN_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REN_DATEColumn {
                get {
                    return this.columnREN_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PAT_NOMColumn {
                get {
                    return this.columnPAT_NOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PAT_PRENOMColumn {
                get {
                    return this.columnPAT_PRENOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PAT_NOM_COMPLETColumn {
                get {
                    return this.columnPAT_NOM_COMPLET;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DOC_NOMColumn {
                get {
                    return this.columnDOC_NOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DOC_PRENOMColumn {
                get {
                    return this.columnDOC_PRENOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DOC_NOM_COMPLETColumn {
                get {
                    return this.columnDOC_NOM_COMPLET;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REN_ANNULEColumn {
                get {
                    return this.columnREN_ANNULE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REN_COMMENTAIREColumn {
                get {
                    return this.columnREN_COMMENTAIRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PAT_NOColumn {
                get {
                    return this.columnPAT_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DOC_NOColumn {
                get {
                    return this.columnDOC_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_RENDEZVOUSRow this[int index] {
                get {
                    return ((VW_RENDEZVOUSRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VW_RENDEZVOUSRowChangeEventHandler VW_RENDEZVOUSRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VW_RENDEZVOUSRowChangeEventHandler VW_RENDEZVOUSRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VW_RENDEZVOUSRowChangeEventHandler VW_RENDEZVOUSRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VW_RENDEZVOUSRowChangeEventHandler VW_RENDEZVOUSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddVW_RENDEZVOUSRow(VW_RENDEZVOUSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_RENDEZVOUSRow AddVW_RENDEZVOUSRow(short REN_NO, System.DateTime REN_DATE, string PAT_NOM, string PAT_PRENOM, string PAT_NOM_COMPLET, string DOC_NOM, string DOC_PRENOM, string DOC_NOM_COMPLET, short REN_ANNULE, string REN_COMMENTAIRE, short PAT_NO, short DOC_NO) {
                VW_RENDEZVOUSRow rowVW_RENDEZVOUSRow = ((VW_RENDEZVOUSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        REN_NO,
                        REN_DATE,
                        PAT_NOM,
                        PAT_PRENOM,
                        PAT_NOM_COMPLET,
                        DOC_NOM,
                        DOC_PRENOM,
                        DOC_NOM_COMPLET,
                        REN_ANNULE,
                        REN_COMMENTAIRE,
                        PAT_NO,
                        DOC_NO};
                rowVW_RENDEZVOUSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowVW_RENDEZVOUSRow);
                return rowVW_RENDEZVOUSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                VW_RENDEZVOUSDataTable cln = ((VW_RENDEZVOUSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new VW_RENDEZVOUSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnREN_NO = base.Columns["REN_NO"];
                this.columnREN_DATE = base.Columns["REN_DATE"];
                this.columnPAT_NOM = base.Columns["PAT_NOM"];
                this.columnPAT_PRENOM = base.Columns["PAT_PRENOM"];
                this.columnPAT_NOM_COMPLET = base.Columns["PAT_NOM_COMPLET"];
                this.columnDOC_NOM = base.Columns["DOC_NOM"];
                this.columnDOC_PRENOM = base.Columns["DOC_PRENOM"];
                this.columnDOC_NOM_COMPLET = base.Columns["DOC_NOM_COMPLET"];
                this.columnREN_ANNULE = base.Columns["REN_ANNULE"];
                this.columnREN_COMMENTAIRE = base.Columns["REN_COMMENTAIRE"];
                this.columnPAT_NO = base.Columns["PAT_NO"];
                this.columnDOC_NO = base.Columns["DOC_NO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnREN_NO = new global::System.Data.DataColumn("REN_NO", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREN_NO);
                this.columnREN_DATE = new global::System.Data.DataColumn("REN_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREN_DATE);
                this.columnPAT_NOM = new global::System.Data.DataColumn("PAT_NOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAT_NOM);
                this.columnPAT_PRENOM = new global::System.Data.DataColumn("PAT_PRENOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAT_PRENOM);
                this.columnPAT_NOM_COMPLET = new global::System.Data.DataColumn("PAT_NOM_COMPLET", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAT_NOM_COMPLET);
                this.columnDOC_NOM = new global::System.Data.DataColumn("DOC_NOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOC_NOM);
                this.columnDOC_PRENOM = new global::System.Data.DataColumn("DOC_PRENOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOC_PRENOM);
                this.columnDOC_NOM_COMPLET = new global::System.Data.DataColumn("DOC_NOM_COMPLET", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOC_NOM_COMPLET);
                this.columnREN_ANNULE = new global::System.Data.DataColumn("REN_ANNULE", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREN_ANNULE);
                this.columnREN_COMMENTAIRE = new global::System.Data.DataColumn("REN_COMMENTAIRE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREN_COMMENTAIRE);
                this.columnPAT_NO = new global::System.Data.DataColumn("PAT_NO", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAT_NO);
                this.columnDOC_NO = new global::System.Data.DataColumn("DOC_NO", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOC_NO);
                this.columnREN_NO.AllowDBNull = false;
                this.columnREN_DATE.AllowDBNull = false;
                this.columnPAT_NOM.AllowDBNull = false;
                this.columnPAT_NOM.MaxLength = 50;
                this.columnPAT_PRENOM.AllowDBNull = false;
                this.columnPAT_PRENOM.MaxLength = 50;
                this.columnPAT_NOM_COMPLET.MaxLength = 101;
                this.columnDOC_NOM.AllowDBNull = false;
                this.columnDOC_NOM.MaxLength = 255;
                this.columnDOC_PRENOM.AllowDBNull = false;
                this.columnDOC_PRENOM.MaxLength = 255;
                this.columnDOC_NOM_COMPLET.MaxLength = 511;
                this.columnREN_ANNULE.AllowDBNull = false;
                this.columnREN_COMMENTAIRE.MaxLength = 2147483647;
                this.columnPAT_NO.AllowDBNull = false;
                this.columnDOC_NO.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_RENDEZVOUSRow NewVW_RENDEZVOUSRow() {
                return ((VW_RENDEZVOUSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new VW_RENDEZVOUSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(VW_RENDEZVOUSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.VW_RENDEZVOUSRowChanged != null)) {
                    this.VW_RENDEZVOUSRowChanged(this, new VW_RENDEZVOUSRowChangeEvent(((VW_RENDEZVOUSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.VW_RENDEZVOUSRowChanging != null)) {
                    this.VW_RENDEZVOUSRowChanging(this, new VW_RENDEZVOUSRowChangeEvent(((VW_RENDEZVOUSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.VW_RENDEZVOUSRowDeleted != null)) {
                    this.VW_RENDEZVOUSRowDeleted(this, new VW_RENDEZVOUSRowChangeEvent(((VW_RENDEZVOUSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.VW_RENDEZVOUSRowDeleting != null)) {
                    this.VW_RENDEZVOUSRowDeleting(this, new VW_RENDEZVOUSRowChangeEvent(((VW_RENDEZVOUSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveVW_RENDEZVOUSRow(VW_RENDEZVOUSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetRedoc ds = new DataSetRedoc();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "VW_RENDEZVOUSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class VW_EXAMENS_FACTUREDataTable : global::System.Data.TypedTableBase<VW_EXAMENS_FACTURERow> {
            
            private global::System.Data.DataColumn columnFAC_NO;
            
            private global::System.Data.DataColumn columnEXA_NO;
            
            private global::System.Data.DataColumn columnEXA_NOM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_EXAMENS_FACTUREDataTable() {
                this.TableName = "VW_EXAMENS_FACTURE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal VW_EXAMENS_FACTUREDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected VW_EXAMENS_FACTUREDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FAC_NOColumn {
                get {
                    return this.columnFAC_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXA_NOColumn {
                get {
                    return this.columnEXA_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXA_NOMColumn {
                get {
                    return this.columnEXA_NOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_EXAMENS_FACTURERow this[int index] {
                get {
                    return ((VW_EXAMENS_FACTURERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VW_EXAMENS_FACTURERowChangeEventHandler VW_EXAMENS_FACTURERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VW_EXAMENS_FACTURERowChangeEventHandler VW_EXAMENS_FACTURERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VW_EXAMENS_FACTURERowChangeEventHandler VW_EXAMENS_FACTURERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VW_EXAMENS_FACTURERowChangeEventHandler VW_EXAMENS_FACTURERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddVW_EXAMENS_FACTURERow(VW_EXAMENS_FACTURERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_EXAMENS_FACTURERow AddVW_EXAMENS_FACTURERow(short FAC_NO, short EXA_NO, string EXA_NOM) {
                VW_EXAMENS_FACTURERow rowVW_EXAMENS_FACTURERow = ((VW_EXAMENS_FACTURERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FAC_NO,
                        EXA_NO,
                        EXA_NOM};
                rowVW_EXAMENS_FACTURERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowVW_EXAMENS_FACTURERow);
                return rowVW_EXAMENS_FACTURERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                VW_EXAMENS_FACTUREDataTable cln = ((VW_EXAMENS_FACTUREDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new VW_EXAMENS_FACTUREDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnFAC_NO = base.Columns["FAC_NO"];
                this.columnEXA_NO = base.Columns["EXA_NO"];
                this.columnEXA_NOM = base.Columns["EXA_NOM"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnFAC_NO = new global::System.Data.DataColumn("FAC_NO", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAC_NO);
                this.columnEXA_NO = new global::System.Data.DataColumn("EXA_NO", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXA_NO);
                this.columnEXA_NOM = new global::System.Data.DataColumn("EXA_NOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXA_NOM);
                this.columnFAC_NO.AllowDBNull = false;
                this.columnEXA_NO.AllowDBNull = false;
                this.columnEXA_NOM.AllowDBNull = false;
                this.columnEXA_NOM.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_EXAMENS_FACTURERow NewVW_EXAMENS_FACTURERow() {
                return ((VW_EXAMENS_FACTURERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new VW_EXAMENS_FACTURERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(VW_EXAMENS_FACTURERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.VW_EXAMENS_FACTURERowChanged != null)) {
                    this.VW_EXAMENS_FACTURERowChanged(this, new VW_EXAMENS_FACTURERowChangeEvent(((VW_EXAMENS_FACTURERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.VW_EXAMENS_FACTURERowChanging != null)) {
                    this.VW_EXAMENS_FACTURERowChanging(this, new VW_EXAMENS_FACTURERowChangeEvent(((VW_EXAMENS_FACTURERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.VW_EXAMENS_FACTURERowDeleted != null)) {
                    this.VW_EXAMENS_FACTURERowDeleted(this, new VW_EXAMENS_FACTURERowChangeEvent(((VW_EXAMENS_FACTURERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.VW_EXAMENS_FACTURERowDeleting != null)) {
                    this.VW_EXAMENS_FACTURERowDeleting(this, new VW_EXAMENS_FACTURERowChangeEvent(((VW_EXAMENS_FACTURERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveVW_EXAMENS_FACTURERow(VW_EXAMENS_FACTURERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetRedoc ds = new DataSetRedoc();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "VW_EXAMENS_FACTUREDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CAB_EXCEPTION_HORAIRERow : global::System.Data.DataRow {
            
            private CAB_EXCEPTION_HORAIREDataTable tableCAB_EXCEPTION_HORAIRE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal CAB_EXCEPTION_HORAIRERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCAB_EXCEPTION_HORAIRE = ((CAB_EXCEPTION_HORAIREDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short EXC_NO {
                get {
                    return ((short)(this[this.tableCAB_EXCEPTION_HORAIRE.EXC_NOColumn]));
                }
                set {
                    this[this.tableCAB_EXCEPTION_HORAIRE.EXC_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short EXC_UTI_NO {
                get {
                    return ((short)(this[this.tableCAB_EXCEPTION_HORAIRE.EXC_UTI_NOColumn]));
                }
                set {
                    this[this.tableCAB_EXCEPTION_HORAIRE.EXC_UTI_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime EXC_DEBUT {
                get {
                    return ((global::System.DateTime)(this[this.tableCAB_EXCEPTION_HORAIRE.EXC_DEBUTColumn]));
                }
                set {
                    this[this.tableCAB_EXCEPTION_HORAIRE.EXC_DEBUTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime EXC_FIN {
                get {
                    return ((global::System.DateTime)(this[this.tableCAB_EXCEPTION_HORAIRE.EXC_FINColumn]));
                }
                set {
                    this[this.tableCAB_EXCEPTION_HORAIRE.EXC_FINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EXC_COMMENTAIRE {
                get {
                    try {
                        return ((string)(this[this.tableCAB_EXCEPTION_HORAIRE.EXC_COMMENTAIREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'EXC_COMMENTAIRE\' dans la table \'CAB_EXCEPTION_HORAIRE\'" +
                                " est DBNull.", e);
                    }
                }
                set {
                    this[this.tableCAB_EXCEPTION_HORAIRE.EXC_COMMENTAIREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_UTILISATEURRow CAB_UTILISATEURRow {
                get {
                    return ((CAB_UTILISATEURRow)(this.GetParentRow(this.Table.ParentRelations["FK_CAB_EXCEPTION_HORAIRE_CAB_U"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CAB_EXCEPTION_HORAIRE_CAB_U"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEXC_COMMENTAIRENull() {
                return this.IsNull(this.tableCAB_EXCEPTION_HORAIRE.EXC_COMMENTAIREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEXC_COMMENTAIRENull() {
                this[this.tableCAB_EXCEPTION_HORAIRE.EXC_COMMENTAIREColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CAB_FACTURERow : global::System.Data.DataRow {
            
            private CAB_FACTUREDataTable tableCAB_FACTURE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal CAB_FACTURERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCAB_FACTURE = ((CAB_FACTUREDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short FAC_NO {
                get {
                    return ((short)(this[this.tableCAB_FACTURE.FAC_NOColumn]));
                }
                set {
                    this[this.tableCAB_FACTURE.FAC_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short FAC_REN_NO {
                get {
                    return ((short)(this[this.tableCAB_FACTURE.FAC_REN_NOColumn]));
                }
                set {
                    this[this.tableCAB_FACTURE.FAC_REN_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime FAC_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableCAB_FACTURE.FAC_DATEColumn]));
                }
                set {
                    this[this.tableCAB_FACTURE.FAC_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short FAC_PAYE {
                get {
                    return ((short)(this[this.tableCAB_FACTURE.FAC_PAYEColumn]));
                }
                set {
                    this[this.tableCAB_FACTURE.FAC_PAYEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double FAC_TOTAL {
                get {
                    return ((double)(this[this.tableCAB_FACTURE.FAC_TOTALColumn]));
                }
                set {
                    this[this.tableCAB_FACTURE.FAC_TOTALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_RENDEZVOUSRow CAB_RENDEZVOUSRow {
                get {
                    return ((CAB_RENDEZVOUSRow)(this.GetParentRow(this.Table.ParentRelations["FK_CAB_FACTURE_CAB_RENDEZVOUS"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CAB_FACTURE_CAB_RENDEZVOUS"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_LIGNE_FACTURERow[] GetCAB_LIGNE_FACTURERows() {
                if ((this.Table.ChildRelations["FK_CAB_LIGNE_FACTURE_CAB_FACTU"] == null)) {
                    return new CAB_LIGNE_FACTURERow[0];
                }
                else {
                    return ((CAB_LIGNE_FACTURERow[])(base.GetChildRows(this.Table.ChildRelations["FK_CAB_LIGNE_FACTURE_CAB_FACTU"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CAB_HORAIRERow : global::System.Data.DataRow {
            
            private CAB_HORAIREDataTable tableCAB_HORAIRE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal CAB_HORAIRERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCAB_HORAIRE = ((CAB_HORAIREDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short HOR_NO {
                get {
                    return ((short)(this[this.tableCAB_HORAIRE.HOR_NOColumn]));
                }
                set {
                    this[this.tableCAB_HORAIRE.HOR_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short HOR_UTI_NO {
                get {
                    return ((short)(this[this.tableCAB_HORAIRE.HOR_UTI_NOColumn]));
                }
                set {
                    this[this.tableCAB_HORAIRE.HOR_UTI_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short HOR_DEBUT {
                get {
                    return ((short)(this[this.tableCAB_HORAIRE.HOR_DEBUTColumn]));
                }
                set {
                    this[this.tableCAB_HORAIRE.HOR_DEBUTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short HOR_FIN {
                get {
                    return ((short)(this[this.tableCAB_HORAIRE.HOR_FINColumn]));
                }
                set {
                    this[this.tableCAB_HORAIRE.HOR_FINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short HOR_JOUR {
                get {
                    return ((short)(this[this.tableCAB_HORAIRE.HOR_JOURColumn]));
                }
                set {
                    this[this.tableCAB_HORAIRE.HOR_JOURColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_UTILISATEURRow CAB_UTILISATEURRow {
                get {
                    return ((CAB_UTILISATEURRow)(this.GetParentRow(this.Table.ParentRelations["FK_CAB_HORAIRE_CAB_UTILISATEUR"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CAB_HORAIRE_CAB_UTILISATEUR"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CAB_LIGNE_FACTURERow : global::System.Data.DataRow {
            
            private CAB_LIGNE_FACTUREDataTable tableCAB_LIGNE_FACTURE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal CAB_LIGNE_FACTURERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCAB_LIGNE_FACTURE = ((CAB_LIGNE_FACTUREDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short LIG_FAC_NO {
                get {
                    return ((short)(this[this.tableCAB_LIGNE_FACTURE.LIG_FAC_NOColumn]));
                }
                set {
                    this[this.tableCAB_LIGNE_FACTURE.LIG_FAC_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short LIG_LIS_NO {
                get {
                    return ((short)(this[this.tableCAB_LIGNE_FACTURE.LIG_LIS_NOColumn]));
                }
                set {
                    this[this.tableCAB_LIGNE_FACTURE.LIG_LIS_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short LIG_MONTANT {
                get {
                    try {
                        return ((short)(this[this.tableCAB_LIGNE_FACTURE.LIG_MONTANTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'LIG_MONTANT\' dans la table \'CAB_LIGNE_FACTURE\' est DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCAB_LIGNE_FACTURE.LIG_MONTANTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_FACTURERow CAB_FACTURERow {
                get {
                    return ((CAB_FACTURERow)(this.GetParentRow(this.Table.ParentRelations["FK_CAB_LIGNE_FACTURE_CAB_FACTU"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CAB_LIGNE_FACTURE_CAB_FACTU"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_LISTE_EXAMENSRow CAB_LISTE_EXAMENSRow {
                get {
                    return ((CAB_LISTE_EXAMENSRow)(this.GetParentRow(this.Table.ParentRelations["FK_CAB_LIGNE_FACTURE_CAB_LISTE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CAB_LIGNE_FACTURE_CAB_LISTE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLIG_MONTANTNull() {
                return this.IsNull(this.tableCAB_LIGNE_FACTURE.LIG_MONTANTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLIG_MONTANTNull() {
                this[this.tableCAB_LIGNE_FACTURE.LIG_MONTANTColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CAB_LISTE_EXAMENSRow : global::System.Data.DataRow {
            
            private CAB_LISTE_EXAMENSDataTable tableCAB_LISTE_EXAMENS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal CAB_LISTE_EXAMENSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCAB_LISTE_EXAMENS = ((CAB_LISTE_EXAMENSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short LIS_NO {
                get {
                    return ((short)(this[this.tableCAB_LISTE_EXAMENS.LIS_NOColumn]));
                }
                set {
                    this[this.tableCAB_LISTE_EXAMENS.LIS_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LIS_NOM {
                get {
                    return ((string)(this[this.tableCAB_LISTE_EXAMENS.LIS_NOMColumn]));
                }
                set {
                    this[this.tableCAB_LISTE_EXAMENS.LIS_NOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double LIS_PRIX_HORAIRE {
                get {
                    return ((double)(this[this.tableCAB_LISTE_EXAMENS.LIS_PRIX_HORAIREColumn]));
                }
                set {
                    this[this.tableCAB_LISTE_EXAMENS.LIS_PRIX_HORAIREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_LIGNE_FACTURERow[] GetCAB_LIGNE_FACTURERows() {
                if ((this.Table.ChildRelations["FK_CAB_LIGNE_FACTURE_CAB_LISTE"] == null)) {
                    return new CAB_LIGNE_FACTURERow[0];
                }
                else {
                    return ((CAB_LIGNE_FACTURERow[])(base.GetChildRows(this.Table.ChildRelations["FK_CAB_LIGNE_FACTURE_CAB_LISTE"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CAB_PATIENTRow : global::System.Data.DataRow {
            
            private CAB_PATIENTDataTable tableCAB_PATIENT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal CAB_PATIENTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCAB_PATIENT = ((CAB_PATIENTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short PAT_NO {
                get {
                    return ((short)(this[this.tableCAB_PATIENT.PAT_NOColumn]));
                }
                set {
                    this[this.tableCAB_PATIENT.PAT_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PAT_NOM {
                get {
                    return ((string)(this[this.tableCAB_PATIENT.PAT_NOMColumn]));
                }
                set {
                    this[this.tableCAB_PATIENT.PAT_NOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PAT_PRENOM {
                get {
                    return ((string)(this[this.tableCAB_PATIENT.PAT_PRENOMColumn]));
                }
                set {
                    this[this.tableCAB_PATIENT.PAT_PRENOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime PAT_DATE_NAISSANCE {
                get {
                    return ((global::System.DateTime)(this[this.tableCAB_PATIENT.PAT_DATE_NAISSANCEColumn]));
                }
                set {
                    this[this.tableCAB_PATIENT.PAT_DATE_NAISSANCEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PAT_ADRESSE {
                get {
                    return ((string)(this[this.tableCAB_PATIENT.PAT_ADRESSEColumn]));
                }
                set {
                    this[this.tableCAB_PATIENT.PAT_ADRESSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PAT_EMAIL {
                get {
                    return ((string)(this[this.tableCAB_PATIENT.PAT_EMAILColumn]));
                }
                set {
                    this[this.tableCAB_PATIENT.PAT_EMAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PAT_TELEPHONE {
                get {
                    return ((string)(this[this.tableCAB_PATIENT.PAT_TELEPHONEColumn]));
                }
                set {
                    this[this.tableCAB_PATIENT.PAT_TELEPHONEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PAT_NO_AVS {
                get {
                    return ((string)(this[this.tableCAB_PATIENT.PAT_NO_AVSColumn]));
                }
                set {
                    this[this.tableCAB_PATIENT.PAT_NO_AVSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_RENDEZVOUSRow[] GetCAB_RENDEZVOUSRows() {
                if ((this.Table.ChildRelations["FK_CAB_RENDEZVOUS_CAB_PATIENT"] == null)) {
                    return new CAB_RENDEZVOUSRow[0];
                }
                else {
                    return ((CAB_RENDEZVOUSRow[])(base.GetChildRows(this.Table.ChildRelations["FK_CAB_RENDEZVOUS_CAB_PATIENT"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CAB_RENDEZVOUSRow : global::System.Data.DataRow {
            
            private CAB_RENDEZVOUSDataTable tableCAB_RENDEZVOUS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal CAB_RENDEZVOUSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCAB_RENDEZVOUS = ((CAB_RENDEZVOUSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short REN_NO {
                get {
                    return ((short)(this[this.tableCAB_RENDEZVOUS.REN_NOColumn]));
                }
                set {
                    this[this.tableCAB_RENDEZVOUS.REN_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short REN_UTI_NO {
                get {
                    return ((short)(this[this.tableCAB_RENDEZVOUS.REN_UTI_NOColumn]));
                }
                set {
                    this[this.tableCAB_RENDEZVOUS.REN_UTI_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short REN_PAT_NO {
                get {
                    return ((short)(this[this.tableCAB_RENDEZVOUS.REN_PAT_NOColumn]));
                }
                set {
                    this[this.tableCAB_RENDEZVOUS.REN_PAT_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime REN_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableCAB_RENDEZVOUS.REN_DATEColumn]));
                }
                set {
                    this[this.tableCAB_RENDEZVOUS.REN_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short REN_ANNULE {
                get {
                    return ((short)(this[this.tableCAB_RENDEZVOUS.REN_ANNULEColumn]));
                }
                set {
                    this[this.tableCAB_RENDEZVOUS.REN_ANNULEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string REN_COMMENTAIRE {
                get {
                    try {
                        return ((string)(this[this.tableCAB_RENDEZVOUS.REN_COMMENTAIREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'REN_COMMENTAIRE\' dans la table \'CAB_RENDEZVOUS\' est DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableCAB_RENDEZVOUS.REN_COMMENTAIREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_PATIENTRow CAB_PATIENTRow {
                get {
                    return ((CAB_PATIENTRow)(this.GetParentRow(this.Table.ParentRelations["FK_CAB_RENDEZVOUS_CAB_PATIENT"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CAB_RENDEZVOUS_CAB_PATIENT"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_UTILISATEURRow CAB_UTILISATEURRow {
                get {
                    return ((CAB_UTILISATEURRow)(this.GetParentRow(this.Table.ParentRelations["FK_CAB_RENDEZVOUS_CAB_UTILISAT"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CAB_RENDEZVOUS_CAB_UTILISAT"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsREN_COMMENTAIRENull() {
                return this.IsNull(this.tableCAB_RENDEZVOUS.REN_COMMENTAIREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetREN_COMMENTAIRENull() {
                this[this.tableCAB_RENDEZVOUS.REN_COMMENTAIREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_FACTURERow[] GetCAB_FACTURERows() {
                if ((this.Table.ChildRelations["FK_CAB_FACTURE_CAB_RENDEZVOUS"] == null)) {
                    return new CAB_FACTURERow[0];
                }
                else {
                    return ((CAB_FACTURERow[])(base.GetChildRows(this.Table.ChildRelations["FK_CAB_FACTURE_CAB_RENDEZVOUS"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CAB_SPE_UTILISATEURRow : global::System.Data.DataRow {
            
            private CAB_SPE_UTILISATEURDataTable tableCAB_SPE_UTILISATEUR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal CAB_SPE_UTILISATEURRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCAB_SPE_UTILISATEUR = ((CAB_SPE_UTILISATEURDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short SPE_NO {
                get {
                    return ((short)(this[this.tableCAB_SPE_UTILISATEUR.SPE_NOColumn]));
                }
                set {
                    this[this.tableCAB_SPE_UTILISATEUR.SPE_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short UTI_NO {
                get {
                    return ((short)(this[this.tableCAB_SPE_UTILISATEUR.UTI_NOColumn]));
                }
                set {
                    this[this.tableCAB_SPE_UTILISATEUR.UTI_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_SPECIALISATIONRow CAB_SPECIALISATIONRow {
                get {
                    return ((CAB_SPECIALISATIONRow)(this.GetParentRow(this.Table.ParentRelations["FK_CAB_SPE_UTILISATEUR_CAB_SPE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CAB_SPE_UTILISATEUR_CAB_SPE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_UTILISATEURRow CAB_UTILISATEURRow {
                get {
                    return ((CAB_UTILISATEURRow)(this.GetParentRow(this.Table.ParentRelations["FK_CAB_SPE_UTILISATEUR_CAB_UTI"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CAB_SPE_UTILISATEUR_CAB_UTI"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CAB_SPECIALISATIONRow : global::System.Data.DataRow {
            
            private CAB_SPECIALISATIONDataTable tableCAB_SPECIALISATION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal CAB_SPECIALISATIONRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCAB_SPECIALISATION = ((CAB_SPECIALISATIONDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short SPE_NO {
                get {
                    return ((short)(this[this.tableCAB_SPECIALISATION.SPE_NOColumn]));
                }
                set {
                    this[this.tableCAB_SPECIALISATION.SPE_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SPE_NOM {
                get {
                    return ((string)(this[this.tableCAB_SPECIALISATION.SPE_NOMColumn]));
                }
                set {
                    this[this.tableCAB_SPECIALISATION.SPE_NOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_SPE_UTILISATEURRow[] GetCAB_SPE_UTILISATEURRows() {
                if ((this.Table.ChildRelations["FK_CAB_SPE_UTILISATEUR_CAB_SPE"] == null)) {
                    return new CAB_SPE_UTILISATEURRow[0];
                }
                else {
                    return ((CAB_SPE_UTILISATEURRow[])(base.GetChildRows(this.Table.ChildRelations["FK_CAB_SPE_UTILISATEUR_CAB_SPE"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CAB_UTILISATEURRow : global::System.Data.DataRow {
            
            private CAB_UTILISATEURDataTable tableCAB_UTILISATEUR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal CAB_UTILISATEURRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCAB_UTILISATEUR = ((CAB_UTILISATEURDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short UTI_NO {
                get {
                    return ((short)(this[this.tableCAB_UTILISATEUR.UTI_NOColumn]));
                }
                set {
                    this[this.tableCAB_UTILISATEUR.UTI_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string UTI_EMAIL {
                get {
                    return ((string)(this[this.tableCAB_UTILISATEUR.UTI_EMAILColumn]));
                }
                set {
                    this[this.tableCAB_UTILISATEUR.UTI_EMAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string UTI_MDP {
                get {
                    return ((string)(this[this.tableCAB_UTILISATEUR.UTI_MDPColumn]));
                }
                set {
                    this[this.tableCAB_UTILISATEUR.UTI_MDPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string UTI_ROLE {
                get {
                    return ((string)(this[this.tableCAB_UTILISATEUR.UTI_ROLEColumn]));
                }
                set {
                    this[this.tableCAB_UTILISATEUR.UTI_ROLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string UTI_NOM {
                get {
                    return ((string)(this[this.tableCAB_UTILISATEUR.UTI_NOMColumn]));
                }
                set {
                    this[this.tableCAB_UTILISATEUR.UTI_NOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string UTI_PRENOM {
                get {
                    return ((string)(this[this.tableCAB_UTILISATEUR.UTI_PRENOMColumn]));
                }
                set {
                    this[this.tableCAB_UTILISATEUR.UTI_PRENOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string UTI_ADRESSE {
                get {
                    return ((string)(this[this.tableCAB_UTILISATEUR.UTI_ADRESSEColumn]));
                }
                set {
                    this[this.tableCAB_UTILISATEUR.UTI_ADRESSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string UTI_TELEPHONE {
                get {
                    return ((string)(this[this.tableCAB_UTILISATEUR.UTI_TELEPHONEColumn]));
                }
                set {
                    this[this.tableCAB_UTILISATEUR.UTI_TELEPHONEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_EXCEPTION_HORAIRERow[] GetCAB_EXCEPTION_HORAIRERows() {
                if ((this.Table.ChildRelations["FK_CAB_EXCEPTION_HORAIRE_CAB_U"] == null)) {
                    return new CAB_EXCEPTION_HORAIRERow[0];
                }
                else {
                    return ((CAB_EXCEPTION_HORAIRERow[])(base.GetChildRows(this.Table.ChildRelations["FK_CAB_EXCEPTION_HORAIRE_CAB_U"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_HORAIRERow[] GetCAB_HORAIRERows() {
                if ((this.Table.ChildRelations["FK_CAB_HORAIRE_CAB_UTILISATEUR"] == null)) {
                    return new CAB_HORAIRERow[0];
                }
                else {
                    return ((CAB_HORAIRERow[])(base.GetChildRows(this.Table.ChildRelations["FK_CAB_HORAIRE_CAB_UTILISATEUR"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_RENDEZVOUSRow[] GetCAB_RENDEZVOUSRows() {
                if ((this.Table.ChildRelations["FK_CAB_RENDEZVOUS_CAB_UTILISAT"] == null)) {
                    return new CAB_RENDEZVOUSRow[0];
                }
                else {
                    return ((CAB_RENDEZVOUSRow[])(base.GetChildRows(this.Table.ChildRelations["FK_CAB_RENDEZVOUS_CAB_UTILISAT"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_SPE_UTILISATEURRow[] GetCAB_SPE_UTILISATEURRows() {
                if ((this.Table.ChildRelations["FK_CAB_SPE_UTILISATEUR_CAB_UTI"] == null)) {
                    return new CAB_SPE_UTILISATEURRow[0];
                }
                else {
                    return ((CAB_SPE_UTILISATEURRow[])(base.GetChildRows(this.Table.ChildRelations["FK_CAB_SPE_UTILISATEUR_CAB_UTI"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class VW_DOCTEURRow : global::System.Data.DataRow {
            
            private VW_DOCTEURDataTable tableVW_DOCTEUR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal VW_DOCTEURRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVW_DOCTEUR = ((VW_DOCTEURDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short DOC_NO {
                get {
                    return ((short)(this[this.tableVW_DOCTEUR.DOC_NOColumn]));
                }
                set {
                    this[this.tableVW_DOCTEUR.DOC_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DOC_EMAIL {
                get {
                    return ((string)(this[this.tableVW_DOCTEUR.DOC_EMAILColumn]));
                }
                set {
                    this[this.tableVW_DOCTEUR.DOC_EMAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DOC_MDP {
                get {
                    return ((string)(this[this.tableVW_DOCTEUR.DOC_MDPColumn]));
                }
                set {
                    this[this.tableVW_DOCTEUR.DOC_MDPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DOC_NOM {
                get {
                    try {
                        return ((string)(this[this.tableVW_DOCTEUR.DOC_NOMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DOC_NOM\' dans la table \'VW_DOCTEUR\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVW_DOCTEUR.DOC_NOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DOC_PRENOM {
                get {
                    return ((string)(this[this.tableVW_DOCTEUR.DOC_PRENOMColumn]));
                }
                set {
                    this[this.tableVW_DOCTEUR.DOC_PRENOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DOC_NOM_COMPLET {
                get {
                    try {
                        return ((string)(this[this.tableVW_DOCTEUR.DOC_NOM_COMPLETColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DOC_NOM_COMPLET\' dans la table \'VW_DOCTEUR\' est DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableVW_DOCTEUR.DOC_NOM_COMPLETColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DOC_ADRESSE {
                get {
                    return ((string)(this[this.tableVW_DOCTEUR.DOC_ADRESSEColumn]));
                }
                set {
                    this[this.tableVW_DOCTEUR.DOC_ADRESSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DOC_TELEPHONE {
                get {
                    return ((string)(this[this.tableVW_DOCTEUR.DOC_TELEPHONEColumn]));
                }
                set {
                    this[this.tableVW_DOCTEUR.DOC_TELEPHONEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDOC_NOMNull() {
                return this.IsNull(this.tableVW_DOCTEUR.DOC_NOMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDOC_NOMNull() {
                this[this.tableVW_DOCTEUR.DOC_NOMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDOC_NOM_COMPLETNull() {
                return this.IsNull(this.tableVW_DOCTEUR.DOC_NOM_COMPLETColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDOC_NOM_COMPLETNull() {
                this[this.tableVW_DOCTEUR.DOC_NOM_COMPLETColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class VW_EXAMENRow : global::System.Data.DataRow {
            
            private VW_EXAMENDataTable tableVW_EXAMEN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal VW_EXAMENRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVW_EXAMEN = ((VW_EXAMENDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short LIS_NO {
                get {
                    return ((short)(this[this.tableVW_EXAMEN.LIS_NOColumn]));
                }
                set {
                    this[this.tableVW_EXAMEN.LIS_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LIS_NOM {
                get {
                    return ((string)(this[this.tableVW_EXAMEN.LIS_NOMColumn]));
                }
                set {
                    this[this.tableVW_EXAMEN.LIS_NOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double LIS_PRIX_HORAIRE {
                get {
                    return ((double)(this[this.tableVW_EXAMEN.LIS_PRIX_HORAIREColumn]));
                }
                set {
                    this[this.tableVW_EXAMEN.LIS_PRIX_HORAIREColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class VW_HORAIRE_DOCTEURRow : global::System.Data.DataRow {
            
            private VW_HORAIRE_DOCTEURDataTable tableVW_HORAIRE_DOCTEUR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal VW_HORAIRE_DOCTEURRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVW_HORAIRE_DOCTEUR = ((VW_HORAIRE_DOCTEURDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short HOR_JOUR {
                get {
                    return ((short)(this[this.tableVW_HORAIRE_DOCTEUR.HOR_JOURColumn]));
                }
                set {
                    this[this.tableVW_HORAIRE_DOCTEUR.HOR_JOURColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short HOR_DEBUT {
                get {
                    return ((short)(this[this.tableVW_HORAIRE_DOCTEUR.HOR_DEBUTColumn]));
                }
                set {
                    this[this.tableVW_HORAIRE_DOCTEUR.HOR_DEBUTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short HOR_FIN {
                get {
                    return ((short)(this[this.tableVW_HORAIRE_DOCTEUR.HOR_FINColumn]));
                }
                set {
                    this[this.tableVW_HORAIRE_DOCTEUR.HOR_FINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short HOR_UTI_NO {
                get {
                    return ((short)(this[this.tableVW_HORAIRE_DOCTEUR.HOR_UTI_NOColumn]));
                }
                set {
                    this[this.tableVW_HORAIRE_DOCTEUR.HOR_UTI_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short HOR_NO {
                get {
                    return ((short)(this[this.tableVW_HORAIRE_DOCTEUR.HOR_NOColumn]));
                }
                set {
                    this[this.tableVW_HORAIRE_DOCTEUR.HOR_NOColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class VW_PATIENTRow : global::System.Data.DataRow {
            
            private VW_PATIENTDataTable tableVW_PATIENT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal VW_PATIENTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVW_PATIENT = ((VW_PATIENTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short PAT_NO {
                get {
                    return ((short)(this[this.tableVW_PATIENT.PAT_NOColumn]));
                }
                set {
                    this[this.tableVW_PATIENT.PAT_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PAT_NOM {
                get {
                    try {
                        return ((string)(this[this.tableVW_PATIENT.PAT_NOMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'PAT_NOM\' dans la table \'VW_PATIENT\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVW_PATIENT.PAT_NOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PAT_PRENOM {
                get {
                    return ((string)(this[this.tableVW_PATIENT.PAT_PRENOMColumn]));
                }
                set {
                    this[this.tableVW_PATIENT.PAT_PRENOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PAT_NOM_COMPLET {
                get {
                    try {
                        return ((string)(this[this.tableVW_PATIENT.PAT_NOM_COMPLETColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'PAT_NOM_COMPLET\' dans la table \'VW_PATIENT\' est DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableVW_PATIENT.PAT_NOM_COMPLETColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime PAT_DATE_NAISSANCE {
                get {
                    return ((global::System.DateTime)(this[this.tableVW_PATIENT.PAT_DATE_NAISSANCEColumn]));
                }
                set {
                    this[this.tableVW_PATIENT.PAT_DATE_NAISSANCEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PAT_ADRESSE {
                get {
                    return ((string)(this[this.tableVW_PATIENT.PAT_ADRESSEColumn]));
                }
                set {
                    this[this.tableVW_PATIENT.PAT_ADRESSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PAT_EMAIL {
                get {
                    return ((string)(this[this.tableVW_PATIENT.PAT_EMAILColumn]));
                }
                set {
                    this[this.tableVW_PATIENT.PAT_EMAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PAT_TELEPHONE {
                get {
                    return ((string)(this[this.tableVW_PATIENT.PAT_TELEPHONEColumn]));
                }
                set {
                    this[this.tableVW_PATIENT.PAT_TELEPHONEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PAT_NO_AVS {
                get {
                    return ((string)(this[this.tableVW_PATIENT.PAT_NO_AVSColumn]));
                }
                set {
                    this[this.tableVW_PATIENT.PAT_NO_AVSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPAT_NOMNull() {
                return this.IsNull(this.tableVW_PATIENT.PAT_NOMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPAT_NOMNull() {
                this[this.tableVW_PATIENT.PAT_NOMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPAT_NOM_COMPLETNull() {
                return this.IsNull(this.tableVW_PATIENT.PAT_NOM_COMPLETColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPAT_NOM_COMPLETNull() {
                this[this.tableVW_PATIENT.PAT_NOM_COMPLETColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class VW_EXCEPTION_HORAIRE_DOCTEURRow : global::System.Data.DataRow {
            
            private VW_EXCEPTION_HORAIRE_DOCTEURDataTable tableVW_EXCEPTION_HORAIRE_DOCTEUR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal VW_EXCEPTION_HORAIRE_DOCTEURRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVW_EXCEPTION_HORAIRE_DOCTEUR = ((VW_EXCEPTION_HORAIRE_DOCTEURDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short EXC_UTI_NO {
                get {
                    return ((short)(this[this.tableVW_EXCEPTION_HORAIRE_DOCTEUR.EXC_UTI_NOColumn]));
                }
                set {
                    this[this.tableVW_EXCEPTION_HORAIRE_DOCTEUR.EXC_UTI_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime EXC_DEBUT {
                get {
                    return ((global::System.DateTime)(this[this.tableVW_EXCEPTION_HORAIRE_DOCTEUR.EXC_DEBUTColumn]));
                }
                set {
                    this[this.tableVW_EXCEPTION_HORAIRE_DOCTEUR.EXC_DEBUTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime EXC_FIN {
                get {
                    return ((global::System.DateTime)(this[this.tableVW_EXCEPTION_HORAIRE_DOCTEUR.EXC_FINColumn]));
                }
                set {
                    this[this.tableVW_EXCEPTION_HORAIRE_DOCTEUR.EXC_FINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EXC_COMMENTAIRE {
                get {
                    try {
                        return ((string)(this[this.tableVW_EXCEPTION_HORAIRE_DOCTEUR.EXC_COMMENTAIREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'EXC_COMMENTAIRE\' dans la table \'VW_EXCEPTION_HORAIRE_D" +
                                "OCTEUR\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVW_EXCEPTION_HORAIRE_DOCTEUR.EXC_COMMENTAIREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short EXC_NO {
                get {
                    return ((short)(this[this.tableVW_EXCEPTION_HORAIRE_DOCTEUR.EXC_NOColumn]));
                }
                set {
                    this[this.tableVW_EXCEPTION_HORAIRE_DOCTEUR.EXC_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEXC_COMMENTAIRENull() {
                return this.IsNull(this.tableVW_EXCEPTION_HORAIRE_DOCTEUR.EXC_COMMENTAIREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEXC_COMMENTAIRENull() {
                this[this.tableVW_EXCEPTION_HORAIRE_DOCTEUR.EXC_COMMENTAIREColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class VW_FACTURERow : global::System.Data.DataRow {
            
            private VW_FACTUREDataTable tableVW_FACTURE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal VW_FACTURERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVW_FACTURE = ((VW_FACTUREDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short FAC_NO {
                get {
                    return ((short)(this[this.tableVW_FACTURE.FAC_NOColumn]));
                }
                set {
                    this[this.tableVW_FACTURE.FAC_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PAT_NOM {
                get {
                    return ((string)(this[this.tableVW_FACTURE.PAT_NOMColumn]));
                }
                set {
                    this[this.tableVW_FACTURE.PAT_NOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PAT_PRENOM {
                get {
                    return ((string)(this[this.tableVW_FACTURE.PAT_PRENOMColumn]));
                }
                set {
                    this[this.tableVW_FACTURE.PAT_PRENOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PAT_NOM_COMPLET {
                get {
                    try {
                        return ((string)(this[this.tableVW_FACTURE.PAT_NOM_COMPLETColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'PAT_NOM_COMPLET\' dans la table \'VW_FACTURE\' est DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableVW_FACTURE.PAT_NOM_COMPLETColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime FAC_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableVW_FACTURE.FAC_DATEColumn]));
                }
                set {
                    this[this.tableVW_FACTURE.FAC_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short FAC_PAYE {
                get {
                    return ((short)(this[this.tableVW_FACTURE.FAC_PAYEColumn]));
                }
                set {
                    this[this.tableVW_FACTURE.FAC_PAYEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public double FAC_TOTAL {
                get {
                    return ((double)(this[this.tableVW_FACTURE.FAC_TOTALColumn]));
                }
                set {
                    this[this.tableVW_FACTURE.FAC_TOTALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short PAT_NO {
                get {
                    return ((short)(this[this.tableVW_FACTURE.PAT_NOColumn]));
                }
                set {
                    this[this.tableVW_FACTURE.PAT_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short FAC_REN_NO {
                get {
                    return ((short)(this[this.tableVW_FACTURE.FAC_REN_NOColumn]));
                }
                set {
                    this[this.tableVW_FACTURE.FAC_REN_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPAT_NOM_COMPLETNull() {
                return this.IsNull(this.tableVW_FACTURE.PAT_NOM_COMPLETColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPAT_NOM_COMPLETNull() {
                this[this.tableVW_FACTURE.PAT_NOM_COMPLETColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class VW_RENDEZVOUSRow : global::System.Data.DataRow {
            
            private VW_RENDEZVOUSDataTable tableVW_RENDEZVOUS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal VW_RENDEZVOUSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVW_RENDEZVOUS = ((VW_RENDEZVOUSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short REN_NO {
                get {
                    return ((short)(this[this.tableVW_RENDEZVOUS.REN_NOColumn]));
                }
                set {
                    this[this.tableVW_RENDEZVOUS.REN_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime REN_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableVW_RENDEZVOUS.REN_DATEColumn]));
                }
                set {
                    this[this.tableVW_RENDEZVOUS.REN_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PAT_NOM {
                get {
                    return ((string)(this[this.tableVW_RENDEZVOUS.PAT_NOMColumn]));
                }
                set {
                    this[this.tableVW_RENDEZVOUS.PAT_NOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PAT_PRENOM {
                get {
                    return ((string)(this[this.tableVW_RENDEZVOUS.PAT_PRENOMColumn]));
                }
                set {
                    this[this.tableVW_RENDEZVOUS.PAT_PRENOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PAT_NOM_COMPLET {
                get {
                    try {
                        return ((string)(this[this.tableVW_RENDEZVOUS.PAT_NOM_COMPLETColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'PAT_NOM_COMPLET\' dans la table \'VW_RENDEZVOUS\' est DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableVW_RENDEZVOUS.PAT_NOM_COMPLETColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DOC_NOM {
                get {
                    return ((string)(this[this.tableVW_RENDEZVOUS.DOC_NOMColumn]));
                }
                set {
                    this[this.tableVW_RENDEZVOUS.DOC_NOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DOC_PRENOM {
                get {
                    return ((string)(this[this.tableVW_RENDEZVOUS.DOC_PRENOMColumn]));
                }
                set {
                    this[this.tableVW_RENDEZVOUS.DOC_PRENOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DOC_NOM_COMPLET {
                get {
                    try {
                        return ((string)(this[this.tableVW_RENDEZVOUS.DOC_NOM_COMPLETColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DOC_NOM_COMPLET\' dans la table \'VW_RENDEZVOUS\' est DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableVW_RENDEZVOUS.DOC_NOM_COMPLETColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short REN_ANNULE {
                get {
                    return ((short)(this[this.tableVW_RENDEZVOUS.REN_ANNULEColumn]));
                }
                set {
                    this[this.tableVW_RENDEZVOUS.REN_ANNULEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string REN_COMMENTAIRE {
                get {
                    try {
                        return ((string)(this[this.tableVW_RENDEZVOUS.REN_COMMENTAIREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'REN_COMMENTAIRE\' dans la table \'VW_RENDEZVOUS\' est DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableVW_RENDEZVOUS.REN_COMMENTAIREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short PAT_NO {
                get {
                    return ((short)(this[this.tableVW_RENDEZVOUS.PAT_NOColumn]));
                }
                set {
                    this[this.tableVW_RENDEZVOUS.PAT_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short DOC_NO {
                get {
                    return ((short)(this[this.tableVW_RENDEZVOUS.DOC_NOColumn]));
                }
                set {
                    this[this.tableVW_RENDEZVOUS.DOC_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPAT_NOM_COMPLETNull() {
                return this.IsNull(this.tableVW_RENDEZVOUS.PAT_NOM_COMPLETColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPAT_NOM_COMPLETNull() {
                this[this.tableVW_RENDEZVOUS.PAT_NOM_COMPLETColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDOC_NOM_COMPLETNull() {
                return this.IsNull(this.tableVW_RENDEZVOUS.DOC_NOM_COMPLETColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDOC_NOM_COMPLETNull() {
                this[this.tableVW_RENDEZVOUS.DOC_NOM_COMPLETColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsREN_COMMENTAIRENull() {
                return this.IsNull(this.tableVW_RENDEZVOUS.REN_COMMENTAIREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetREN_COMMENTAIRENull() {
                this[this.tableVW_RENDEZVOUS.REN_COMMENTAIREColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class VW_EXAMENS_FACTURERow : global::System.Data.DataRow {
            
            private VW_EXAMENS_FACTUREDataTable tableVW_EXAMENS_FACTURE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal VW_EXAMENS_FACTURERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVW_EXAMENS_FACTURE = ((VW_EXAMENS_FACTUREDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short FAC_NO {
                get {
                    return ((short)(this[this.tableVW_EXAMENS_FACTURE.FAC_NOColumn]));
                }
                set {
                    this[this.tableVW_EXAMENS_FACTURE.FAC_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public short EXA_NO {
                get {
                    return ((short)(this[this.tableVW_EXAMENS_FACTURE.EXA_NOColumn]));
                }
                set {
                    this[this.tableVW_EXAMENS_FACTURE.EXA_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EXA_NOM {
                get {
                    return ((string)(this[this.tableVW_EXAMENS_FACTURE.EXA_NOMColumn]));
                }
                set {
                    this[this.tableVW_EXAMENS_FACTURE.EXA_NOMColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class CAB_EXCEPTION_HORAIRERowChangeEvent : global::System.EventArgs {
            
            private CAB_EXCEPTION_HORAIRERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_EXCEPTION_HORAIRERowChangeEvent(CAB_EXCEPTION_HORAIRERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_EXCEPTION_HORAIRERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class CAB_FACTURERowChangeEvent : global::System.EventArgs {
            
            private CAB_FACTURERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_FACTURERowChangeEvent(CAB_FACTURERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_FACTURERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class CAB_HORAIRERowChangeEvent : global::System.EventArgs {
            
            private CAB_HORAIRERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_HORAIRERowChangeEvent(CAB_HORAIRERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_HORAIRERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class CAB_LIGNE_FACTURERowChangeEvent : global::System.EventArgs {
            
            private CAB_LIGNE_FACTURERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_LIGNE_FACTURERowChangeEvent(CAB_LIGNE_FACTURERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_LIGNE_FACTURERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class CAB_LISTE_EXAMENSRowChangeEvent : global::System.EventArgs {
            
            private CAB_LISTE_EXAMENSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_LISTE_EXAMENSRowChangeEvent(CAB_LISTE_EXAMENSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_LISTE_EXAMENSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class CAB_PATIENTRowChangeEvent : global::System.EventArgs {
            
            private CAB_PATIENTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_PATIENTRowChangeEvent(CAB_PATIENTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_PATIENTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class CAB_RENDEZVOUSRowChangeEvent : global::System.EventArgs {
            
            private CAB_RENDEZVOUSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_RENDEZVOUSRowChangeEvent(CAB_RENDEZVOUSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_RENDEZVOUSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class CAB_SPE_UTILISATEURRowChangeEvent : global::System.EventArgs {
            
            private CAB_SPE_UTILISATEURRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_SPE_UTILISATEURRowChangeEvent(CAB_SPE_UTILISATEURRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_SPE_UTILISATEURRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class CAB_SPECIALISATIONRowChangeEvent : global::System.EventArgs {
            
            private CAB_SPECIALISATIONRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_SPECIALISATIONRowChangeEvent(CAB_SPECIALISATIONRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_SPECIALISATIONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class CAB_UTILISATEURRowChangeEvent : global::System.EventArgs {
            
            private CAB_UTILISATEURRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_UTILISATEURRowChangeEvent(CAB_UTILISATEURRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CAB_UTILISATEURRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class VW_DOCTEURRowChangeEvent : global::System.EventArgs {
            
            private VW_DOCTEURRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_DOCTEURRowChangeEvent(VW_DOCTEURRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_DOCTEURRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class VW_EXAMENRowChangeEvent : global::System.EventArgs {
            
            private VW_EXAMENRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_EXAMENRowChangeEvent(VW_EXAMENRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_EXAMENRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class VW_HORAIRE_DOCTEURRowChangeEvent : global::System.EventArgs {
            
            private VW_HORAIRE_DOCTEURRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_HORAIRE_DOCTEURRowChangeEvent(VW_HORAIRE_DOCTEURRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_HORAIRE_DOCTEURRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class VW_PATIENTRowChangeEvent : global::System.EventArgs {
            
            private VW_PATIENTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_PATIENTRowChangeEvent(VW_PATIENTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_PATIENTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class VW_EXCEPTION_HORAIRE_DOCTEURRowChangeEvent : global::System.EventArgs {
            
            private VW_EXCEPTION_HORAIRE_DOCTEURRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_EXCEPTION_HORAIRE_DOCTEURRowChangeEvent(VW_EXCEPTION_HORAIRE_DOCTEURRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_EXCEPTION_HORAIRE_DOCTEURRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class VW_FACTURERowChangeEvent : global::System.EventArgs {
            
            private VW_FACTURERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_FACTURERowChangeEvent(VW_FACTURERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_FACTURERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class VW_RENDEZVOUSRowChangeEvent : global::System.EventArgs {
            
            private VW_RENDEZVOUSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_RENDEZVOUSRowChangeEvent(VW_RENDEZVOUSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_RENDEZVOUSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class VW_EXAMENS_FACTURERowChangeEvent : global::System.EventArgs {
            
            private VW_EXAMENS_FACTURERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_EXAMENS_FACTURERowChangeEvent(VW_EXAMENS_FACTURERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VW_EXAMENS_FACTURERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace RedocApp.DataSetRedocTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CAB_EXCEPTION_HORAIRETableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.DataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.DataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.DataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.DataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public CAB_EXCEPTION_HORAIRETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::Oracle.DataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::Oracle.DataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.DataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CAB_EXCEPTION_HORAIRE";
            tableMapping.ColumnMappings.Add("EXC_NO", "EXC_NO");
            tableMapping.ColumnMappings.Add("EXC_UTI_NO", "EXC_UTI_NO");
            tableMapping.ColumnMappings.Add("EXC_DEBUT", "EXC_DEBUT");
            tableMapping.ColumnMappings.Add("EXC_FIN", "EXC_FIN");
            tableMapping.ColumnMappings.Add("EXC_COMMENTAIRE", "EXC_COMMENTAIRE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"C##_REDOC_DATA\".\"CAB_EXCEPTION_HORAIRE\" WHERE ((\"EXC_NO\" = :Original" +
                "_EXC_NO) AND (\"EXC_UTI_NO\" = :Original_EXC_UTI_NO) AND (\"EXC_DEBUT\" = :Original_" +
                "EXC_DEBUT) AND (\"EXC_FIN\" = :Original_EXC_FIN))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.DataAccess.Client.OracleParameter param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_EXC_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "EXC_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_EXC_UTI_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "EXC_UTI_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_EXC_DEBUT";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "EXC_DEBUT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_EXC_FIN";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "EXC_FIN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"C##_REDOC_DATA\".\"CAB_EXCEPTION_HORAIRE\" (\"EXC_NO\", \"EXC_UTI_NO\", \"EX" +
                "C_DEBUT\", \"EXC_FIN\", \"EXC_COMMENTAIRE\") VALUES (:EXC_NO, :EXC_UTI_NO, :EXC_DEBUT" +
                ", :EXC_FIN, :EXC_COMMENTAIRE)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "EXC_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "EXC_NO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "EXC_UTI_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "EXC_UTI_NO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "EXC_DEBUT";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "EXC_DEBUT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "EXC_FIN";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "EXC_FIN";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "EXC_COMMENTAIRE";
            param.DbType = global::System.Data.DbType.Object;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Clob;
            param.IsNullable = true;
            param.SourceColumn = "EXC_COMMENTAIRE";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""C##_REDOC_DATA"".""CAB_EXCEPTION_HORAIRE"" SET ""EXC_NO"" = :EXC_NO, ""EXC_UTI_NO"" = :EXC_UTI_NO, ""EXC_DEBUT"" = :EXC_DEBUT, ""EXC_FIN"" = :EXC_FIN, ""EXC_COMMENTAIRE"" = :EXC_COMMENTAIRE WHERE ((""EXC_NO"" = :Original_EXC_NO) AND (""EXC_UTI_NO"" = :Original_EXC_UTI_NO) AND (""EXC_DEBUT"" = :Original_EXC_DEBUT) AND (""EXC_FIN"" = :Original_EXC_FIN))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "EXC_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "EXC_NO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "EXC_UTI_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "EXC_UTI_NO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "EXC_DEBUT";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "EXC_DEBUT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "EXC_FIN";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "EXC_FIN";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "EXC_COMMENTAIRE";
            param.DbType = global::System.Data.DbType.Object;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Clob;
            param.IsNullable = true;
            param.SourceColumn = "EXC_COMMENTAIRE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_EXC_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "EXC_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_EXC_UTI_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "EXC_UTI_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_EXC_DEBUT";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "EXC_DEBUT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_EXC_FIN";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "EXC_FIN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.DataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::RedocApp.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.DataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT EXC_NO, EXC_UTI_NO, EXC_DEBUT, EXC_FIN, EXC_COMMENTAIRE FROM \"C##_REDOC_DA" +
                "TA\".CAB_EXCEPTION_HORAIRE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetRedoc.CAB_EXCEPTION_HORAIREDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetRedoc.CAB_EXCEPTION_HORAIREDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetRedoc.CAB_EXCEPTION_HORAIREDataTable dataTable = new DataSetRedoc.CAB_EXCEPTION_HORAIREDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetRedoc.CAB_EXCEPTION_HORAIREDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetRedoc dataSet) {
            return this.Adapter.Update(dataSet, "CAB_EXCEPTION_HORAIRE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(short Original_EXC_NO, short Original_EXC_UTI_NO, System.DateTime Original_EXC_DEBUT, System.DateTime Original_EXC_FIN) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((short)(Original_EXC_NO));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((short)(Original_EXC_UTI_NO));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_EXC_DEBUT));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_EXC_FIN));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(short EXC_NO, short EXC_UTI_NO, System.DateTime EXC_DEBUT, System.DateTime EXC_FIN, object EXC_COMMENTAIRE) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((short)(EXC_NO));
            this.Adapter.InsertCommand.Parameters[1].Value = ((short)(EXC_UTI_NO));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(EXC_DEBUT));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(EXC_FIN));
            if ((EXC_COMMENTAIRE == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((object)(EXC_COMMENTAIRE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(short EXC_NO, short EXC_UTI_NO, System.DateTime EXC_DEBUT, System.DateTime EXC_FIN, object EXC_COMMENTAIRE, short Original_EXC_NO, short Original_EXC_UTI_NO, System.DateTime Original_EXC_DEBUT, System.DateTime Original_EXC_FIN) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((short)(EXC_NO));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((short)(EXC_UTI_NO));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(EXC_DEBUT));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(EXC_FIN));
            if ((EXC_COMMENTAIRE == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(EXC_COMMENTAIRE));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((short)(Original_EXC_NO));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((short)(Original_EXC_UTI_NO));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Original_EXC_DEBUT));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(Original_EXC_FIN));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(short EXC_UTI_NO, System.DateTime EXC_DEBUT, System.DateTime EXC_FIN, object EXC_COMMENTAIRE, short Original_EXC_NO, short Original_EXC_UTI_NO, System.DateTime Original_EXC_DEBUT, System.DateTime Original_EXC_FIN) {
            return this.Update(Original_EXC_NO, EXC_UTI_NO, EXC_DEBUT, EXC_FIN, EXC_COMMENTAIRE, Original_EXC_NO, Original_EXC_UTI_NO, Original_EXC_DEBUT, Original_EXC_FIN);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CAB_FACTURETableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.DataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.DataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.DataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.DataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public CAB_FACTURETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::Oracle.DataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::Oracle.DataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.DataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CAB_FACTURE";
            tableMapping.ColumnMappings.Add("FAC_NO", "FAC_NO");
            tableMapping.ColumnMappings.Add("FAC_REN_NO", "FAC_REN_NO");
            tableMapping.ColumnMappings.Add("FAC_DATE", "FAC_DATE");
            tableMapping.ColumnMappings.Add("FAC_PAYE", "FAC_PAYE");
            tableMapping.ColumnMappings.Add("FAC_TOTAL", "FAC_TOTAL");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"C##_REDOC_DATA\".\"CAB_FACTURE\" WHERE ((\"FAC_NO\" = :Original_FAC_NO) A" +
                "ND (\"FAC_REN_NO\" = :Original_FAC_REN_NO) AND (\"FAC_DATE\" = :Original_FAC_DATE) A" +
                "ND (\"FAC_PAYE\" = :Original_FAC_PAYE) AND (\"FAC_TOTAL\" = :Original_FAC_TOTAL))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.DataAccess.Client.OracleParameter param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_FAC_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "FAC_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_FAC_REN_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "FAC_REN_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_FAC_DATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "FAC_DATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_FAC_PAYE";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "FAC_PAYE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_FAC_TOTAL";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "FAC_TOTAL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"C##_REDOC_DATA\".\"CAB_FACTURE\" (\"FAC_NO\", \"FAC_REN_NO\", \"FAC_DATE\", \"" +
                "FAC_PAYE\", \"FAC_TOTAL\") VALUES (:FAC_NO, :FAC_REN_NO, :FAC_DATE, :FAC_PAYE, :FAC" +
                "_TOTAL)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "FAC_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "FAC_NO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "FAC_REN_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "FAC_REN_NO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "FAC_DATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "FAC_DATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "FAC_PAYE";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "FAC_PAYE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "FAC_TOTAL";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "FAC_TOTAL";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""C##_REDOC_DATA"".""CAB_FACTURE"" SET ""FAC_NO"" = :FAC_NO, ""FAC_REN_NO"" = :FAC_REN_NO, ""FAC_DATE"" = :FAC_DATE, ""FAC_PAYE"" = :FAC_PAYE, ""FAC_TOTAL"" = :FAC_TOTAL WHERE ((""FAC_NO"" = :Original_FAC_NO) AND (""FAC_REN_NO"" = :Original_FAC_REN_NO) AND (""FAC_DATE"" = :Original_FAC_DATE) AND (""FAC_PAYE"" = :Original_FAC_PAYE) AND (""FAC_TOTAL"" = :Original_FAC_TOTAL))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "FAC_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "FAC_NO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "FAC_REN_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "FAC_REN_NO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "FAC_DATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "FAC_DATE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "FAC_PAYE";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "FAC_PAYE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "FAC_TOTAL";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "FAC_TOTAL";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_FAC_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "FAC_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_FAC_REN_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "FAC_REN_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_FAC_DATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "FAC_DATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_FAC_PAYE";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "FAC_PAYE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_FAC_TOTAL";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "FAC_TOTAL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.DataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::RedocApp.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.DataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT FAC_NO, FAC_REN_NO, FAC_DATE, FAC_PAYE, FAC_TOTAL FROM \"C##_REDOC_DATA\".CA" +
                "B_FACTURE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetRedoc.CAB_FACTUREDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetRedoc.CAB_FACTUREDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetRedoc.CAB_FACTUREDataTable dataTable = new DataSetRedoc.CAB_FACTUREDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetRedoc.CAB_FACTUREDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetRedoc dataSet) {
            return this.Adapter.Update(dataSet, "CAB_FACTURE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(short Original_FAC_NO, short Original_FAC_REN_NO, System.DateTime Original_FAC_DATE, short Original_FAC_PAYE, double Original_FAC_TOTAL) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((short)(Original_FAC_NO));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((short)(Original_FAC_REN_NO));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_FAC_DATE));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((short)(Original_FAC_PAYE));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((double)(Original_FAC_TOTAL));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(short FAC_NO, short FAC_REN_NO, System.DateTime FAC_DATE, short FAC_PAYE, double FAC_TOTAL) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((short)(FAC_NO));
            this.Adapter.InsertCommand.Parameters[1].Value = ((short)(FAC_REN_NO));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(FAC_DATE));
            this.Adapter.InsertCommand.Parameters[3].Value = ((short)(FAC_PAYE));
            this.Adapter.InsertCommand.Parameters[4].Value = ((double)(FAC_TOTAL));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(short FAC_NO, short FAC_REN_NO, System.DateTime FAC_DATE, short FAC_PAYE, double FAC_TOTAL, short Original_FAC_NO, short Original_FAC_REN_NO, System.DateTime Original_FAC_DATE, short Original_FAC_PAYE, double Original_FAC_TOTAL) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((short)(FAC_NO));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((short)(FAC_REN_NO));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(FAC_DATE));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((short)(FAC_PAYE));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(FAC_TOTAL));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((short)(Original_FAC_NO));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((short)(Original_FAC_REN_NO));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Original_FAC_DATE));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((short)(Original_FAC_PAYE));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(Original_FAC_TOTAL));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(short FAC_REN_NO, System.DateTime FAC_DATE, short FAC_PAYE, double FAC_TOTAL, short Original_FAC_NO, short Original_FAC_REN_NO, System.DateTime Original_FAC_DATE, short Original_FAC_PAYE, double Original_FAC_TOTAL) {
            return this.Update(Original_FAC_NO, FAC_REN_NO, FAC_DATE, FAC_PAYE, FAC_TOTAL, Original_FAC_NO, Original_FAC_REN_NO, Original_FAC_DATE, Original_FAC_PAYE, Original_FAC_TOTAL);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CAB_HORAIRETableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.DataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.DataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.DataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.DataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public CAB_HORAIRETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::Oracle.DataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::Oracle.DataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.DataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CAB_HORAIRE";
            tableMapping.ColumnMappings.Add("HOR_NO", "HOR_NO");
            tableMapping.ColumnMappings.Add("HOR_UTI_NO", "HOR_UTI_NO");
            tableMapping.ColumnMappings.Add("HOR_DEBUT", "HOR_DEBUT");
            tableMapping.ColumnMappings.Add("HOR_FIN", "HOR_FIN");
            tableMapping.ColumnMappings.Add("HOR_JOUR", "HOR_JOUR");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"C##_REDOC_DATA\".\"CAB_HORAIRE\" WHERE ((\"HOR_NO\" = :Original_HOR_NO) A" +
                "ND (\"HOR_UTI_NO\" = :Original_HOR_UTI_NO) AND (\"HOR_DEBUT\" = :Original_HOR_DEBUT)" +
                " AND (\"HOR_FIN\" = :Original_HOR_FIN) AND (\"HOR_JOUR\" = :Original_HOR_JOUR))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.DataAccess.Client.OracleParameter param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_HOR_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "HOR_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_HOR_UTI_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "HOR_UTI_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_HOR_DEBUT";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "HOR_DEBUT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_HOR_FIN";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "HOR_FIN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_HOR_JOUR";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "HOR_JOUR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"C##_REDOC_DATA\".\"CAB_HORAIRE\" (\"HOR_NO\", \"HOR_UTI_NO\", \"HOR_DEBUT\", " +
                "\"HOR_FIN\", \"HOR_JOUR\") VALUES (:HOR_NO, :HOR_UTI_NO, :HOR_DEBUT, :HOR_FIN, :HOR_" +
                "JOUR)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "HOR_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "HOR_NO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "HOR_UTI_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "HOR_UTI_NO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "HOR_DEBUT";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "HOR_DEBUT";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "HOR_FIN";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "HOR_FIN";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "HOR_JOUR";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "HOR_JOUR";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""C##_REDOC_DATA"".""CAB_HORAIRE"" SET ""HOR_NO"" = :HOR_NO, ""HOR_UTI_NO"" = :HOR_UTI_NO, ""HOR_DEBUT"" = :HOR_DEBUT, ""HOR_FIN"" = :HOR_FIN, ""HOR_JOUR"" = :HOR_JOUR WHERE ((""HOR_NO"" = :Original_HOR_NO) AND (""HOR_UTI_NO"" = :Original_HOR_UTI_NO) AND (""HOR_DEBUT"" = :Original_HOR_DEBUT) AND (""HOR_FIN"" = :Original_HOR_FIN) AND (""HOR_JOUR"" = :Original_HOR_JOUR))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "HOR_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "HOR_NO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "HOR_UTI_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "HOR_UTI_NO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "HOR_DEBUT";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "HOR_DEBUT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "HOR_FIN";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "HOR_FIN";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "HOR_JOUR";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "HOR_JOUR";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_HOR_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "HOR_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_HOR_UTI_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "HOR_UTI_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_HOR_DEBUT";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "HOR_DEBUT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_HOR_FIN";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "HOR_FIN";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_HOR_JOUR";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "HOR_JOUR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.DataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::RedocApp.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.DataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT HOR_NO, HOR_UTI_NO, HOR_DEBUT, HOR_FIN, HOR_JOUR FROM \"C##_REDOC_DATA\".CAB" +
                "_HORAIRE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetRedoc.CAB_HORAIREDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetRedoc.CAB_HORAIREDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetRedoc.CAB_HORAIREDataTable dataTable = new DataSetRedoc.CAB_HORAIREDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetRedoc.CAB_HORAIREDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetRedoc dataSet) {
            return this.Adapter.Update(dataSet, "CAB_HORAIRE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(short Original_HOR_NO, short Original_HOR_UTI_NO, short Original_HOR_DEBUT, short Original_HOR_FIN, short Original_HOR_JOUR) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((short)(Original_HOR_NO));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((short)(Original_HOR_UTI_NO));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((short)(Original_HOR_DEBUT));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((short)(Original_HOR_FIN));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((short)(Original_HOR_JOUR));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(short HOR_NO, short HOR_UTI_NO, short HOR_DEBUT, short HOR_FIN, short HOR_JOUR) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((short)(HOR_NO));
            this.Adapter.InsertCommand.Parameters[1].Value = ((short)(HOR_UTI_NO));
            this.Adapter.InsertCommand.Parameters[2].Value = ((short)(HOR_DEBUT));
            this.Adapter.InsertCommand.Parameters[3].Value = ((short)(HOR_FIN));
            this.Adapter.InsertCommand.Parameters[4].Value = ((short)(HOR_JOUR));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(short HOR_NO, short HOR_UTI_NO, short HOR_DEBUT, short HOR_FIN, short HOR_JOUR, short Original_HOR_NO, short Original_HOR_UTI_NO, short Original_HOR_DEBUT, short Original_HOR_FIN, short Original_HOR_JOUR) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((short)(HOR_NO));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((short)(HOR_UTI_NO));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((short)(HOR_DEBUT));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((short)(HOR_FIN));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((short)(HOR_JOUR));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((short)(Original_HOR_NO));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((short)(Original_HOR_UTI_NO));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((short)(Original_HOR_DEBUT));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((short)(Original_HOR_FIN));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((short)(Original_HOR_JOUR));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(short HOR_UTI_NO, short HOR_DEBUT, short HOR_FIN, short HOR_JOUR, short Original_HOR_NO, short Original_HOR_UTI_NO, short Original_HOR_DEBUT, short Original_HOR_FIN, short Original_HOR_JOUR) {
            return this.Update(Original_HOR_NO, HOR_UTI_NO, HOR_DEBUT, HOR_FIN, HOR_JOUR, Original_HOR_NO, Original_HOR_UTI_NO, Original_HOR_DEBUT, Original_HOR_FIN, Original_HOR_JOUR);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CAB_LIGNE_FACTURETableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.DataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.DataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.DataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.DataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public CAB_LIGNE_FACTURETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::Oracle.DataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::Oracle.DataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.DataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CAB_LIGNE_FACTURE";
            tableMapping.ColumnMappings.Add("LIG_FAC_NO", "LIG_FAC_NO");
            tableMapping.ColumnMappings.Add("LIG_LIS_NO", "LIG_LIS_NO");
            tableMapping.ColumnMappings.Add("LIG_MONTANT", "LIG_MONTANT");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"C##_REDOC_DATA\".\"CAB_LIGNE_FACTURE\" WHERE ((\"LIG_FAC_NO\" = :Original" +
                "_LIG_FAC_NO) AND (\"LIG_LIS_NO\" = :Original_LIG_LIS_NO) AND ((:IsNull_LIG_MONTANT" +
                " = 1 AND \"LIG_MONTANT\" IS NULL) OR (\"LIG_MONTANT\" = :Original_LIG_MONTANT)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.DataAccess.Client.OracleParameter param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_LIG_FAC_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "LIG_FAC_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_LIG_LIS_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "LIG_LIS_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_LIG_MONTANT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "LIG_MONTANT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_LIG_MONTANT";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "LIG_MONTANT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"C##_REDOC_DATA\".\"CAB_LIGNE_FACTURE\" (\"LIG_FAC_NO\", \"LIG_LIS_NO\", \"LI" +
                "G_MONTANT\") VALUES (:LIG_FAC_NO, :LIG_LIS_NO, :LIG_MONTANT)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "LIG_FAC_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "LIG_FAC_NO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "LIG_LIS_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "LIG_LIS_NO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "LIG_MONTANT";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "LIG_MONTANT";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""C##_REDOC_DATA"".""CAB_LIGNE_FACTURE"" SET ""LIG_FAC_NO"" = :LIG_FAC_NO, ""LIG_LIS_NO"" = :LIG_LIS_NO, ""LIG_MONTANT"" = :LIG_MONTANT WHERE ((""LIG_FAC_NO"" = :Original_LIG_FAC_NO) AND (""LIG_LIS_NO"" = :Original_LIG_LIS_NO) AND ((:IsNull_LIG_MONTANT = 1 AND ""LIG_MONTANT"" IS NULL) OR (""LIG_MONTANT"" = :Original_LIG_MONTANT)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "LIG_FAC_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "LIG_FAC_NO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "LIG_LIS_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "LIG_LIS_NO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "LIG_MONTANT";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "LIG_MONTANT";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_LIG_FAC_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "LIG_FAC_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_LIG_LIS_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "LIG_LIS_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_LIG_MONTANT";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "LIG_MONTANT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_LIG_MONTANT";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "LIG_MONTANT";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.DataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::RedocApp.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.DataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT LIG_FAC_NO, LIG_LIS_NO, LIG_MONTANT FROM \"C##_REDOC_DATA\".CAB_LIGNE_FACTUR" +
                "E";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetRedoc.CAB_LIGNE_FACTUREDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetRedoc.CAB_LIGNE_FACTUREDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetRedoc.CAB_LIGNE_FACTUREDataTable dataTable = new DataSetRedoc.CAB_LIGNE_FACTUREDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetRedoc.CAB_LIGNE_FACTUREDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetRedoc dataSet) {
            return this.Adapter.Update(dataSet, "CAB_LIGNE_FACTURE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(short Original_LIG_FAC_NO, short Original_LIG_LIS_NO, global::System.Nullable<short> Original_LIG_MONTANT) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((short)(Original_LIG_FAC_NO));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((short)(Original_LIG_LIS_NO));
            if ((Original_LIG_MONTANT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((short)(Original_LIG_MONTANT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(short LIG_FAC_NO, short LIG_LIS_NO, global::System.Nullable<short> LIG_MONTANT) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((short)(LIG_FAC_NO));
            this.Adapter.InsertCommand.Parameters[1].Value = ((short)(LIG_LIS_NO));
            if ((LIG_MONTANT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((short)(LIG_MONTANT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(short LIG_FAC_NO, short LIG_LIS_NO, global::System.Nullable<short> LIG_MONTANT, short Original_LIG_FAC_NO, short Original_LIG_LIS_NO, global::System.Nullable<short> Original_LIG_MONTANT) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((short)(LIG_FAC_NO));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((short)(LIG_LIS_NO));
            if ((LIG_MONTANT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((short)(LIG_MONTANT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((short)(Original_LIG_FAC_NO));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((short)(Original_LIG_LIS_NO));
            if ((Original_LIG_MONTANT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((short)(Original_LIG_MONTANT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<short> LIG_MONTANT, short Original_LIG_FAC_NO, short Original_LIG_LIS_NO, global::System.Nullable<short> Original_LIG_MONTANT) {
            return this.Update(Original_LIG_FAC_NO, Original_LIG_LIS_NO, LIG_MONTANT, Original_LIG_FAC_NO, Original_LIG_LIS_NO, Original_LIG_MONTANT);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CAB_LISTE_EXAMENSTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.DataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.DataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.DataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.DataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public CAB_LISTE_EXAMENSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::Oracle.DataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::Oracle.DataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.DataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CAB_LISTE_EXAMENS";
            tableMapping.ColumnMappings.Add("LIS_NO", "LIS_NO");
            tableMapping.ColumnMappings.Add("LIS_NOM", "LIS_NOM");
            tableMapping.ColumnMappings.Add("LIS_PRIX_HORAIRE", "LIS_PRIX_HORAIRE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"C##_REDOC_DATA\".\"CAB_LISTE_EXAMENS\" WHERE ((\"LIS_NO\" = :Original_LIS" +
                "_NO) AND (\"LIS_NOM\" = :Original_LIS_NOM) AND (\"LIS_PRIX_HORAIRE\" = :Original_LIS" +
                "_PRIX_HORAIRE))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.DataAccess.Client.OracleParameter param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_LIS_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "LIS_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_LIS_NOM";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "LIS_NOM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_LIS_PRIX_HORAIRE";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "LIS_PRIX_HORAIRE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"C##_REDOC_DATA\".\"CAB_LISTE_EXAMENS\" (\"LIS_NO\", \"LIS_NOM\", \"LIS_PRIX_" +
                "HORAIRE\") VALUES (:LIS_NO, :LIS_NOM, :LIS_PRIX_HORAIRE)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "LIS_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "LIS_NO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "LIS_NOM";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "LIS_NOM";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "LIS_PRIX_HORAIRE";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "LIS_PRIX_HORAIRE";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""C##_REDOC_DATA"".""CAB_LISTE_EXAMENS"" SET ""LIS_NO"" = :LIS_NO, ""LIS_NOM"" = :LIS_NOM, ""LIS_PRIX_HORAIRE"" = :LIS_PRIX_HORAIRE WHERE ((""LIS_NO"" = :Original_LIS_NO) AND (""LIS_NOM"" = :Original_LIS_NOM) AND (""LIS_PRIX_HORAIRE"" = :Original_LIS_PRIX_HORAIRE))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "LIS_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "LIS_NO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "LIS_NOM";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "LIS_NOM";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "LIS_PRIX_HORAIRE";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "LIS_PRIX_HORAIRE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_LIS_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "LIS_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_LIS_NOM";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "LIS_NOM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_LIS_PRIX_HORAIRE";
            param.DbType = global::System.Data.DbType.Double;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "LIS_PRIX_HORAIRE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.DataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::RedocApp.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.DataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT LIS_NO, LIS_NOM, LIS_PRIX_HORAIRE FROM \"C##_REDOC_DATA\".CAB_LISTE_EXAMENS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetRedoc.CAB_LISTE_EXAMENSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetRedoc.CAB_LISTE_EXAMENSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetRedoc.CAB_LISTE_EXAMENSDataTable dataTable = new DataSetRedoc.CAB_LISTE_EXAMENSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetRedoc.CAB_LISTE_EXAMENSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetRedoc dataSet) {
            return this.Adapter.Update(dataSet, "CAB_LISTE_EXAMENS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(short Original_LIS_NO, string Original_LIS_NOM, double Original_LIS_PRIX_HORAIRE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((short)(Original_LIS_NO));
            if ((Original_LIS_NOM == null)) {
                throw new global::System.ArgumentNullException("Original_LIS_NOM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_LIS_NOM));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((double)(Original_LIS_PRIX_HORAIRE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(short LIS_NO, string LIS_NOM, double LIS_PRIX_HORAIRE) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((short)(LIS_NO));
            if ((LIS_NOM == null)) {
                throw new global::System.ArgumentNullException("LIS_NOM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(LIS_NOM));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((double)(LIS_PRIX_HORAIRE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(short LIS_NO, string LIS_NOM, double LIS_PRIX_HORAIRE, short Original_LIS_NO, string Original_LIS_NOM, double Original_LIS_PRIX_HORAIRE) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((short)(LIS_NO));
            if ((LIS_NOM == null)) {
                throw new global::System.ArgumentNullException("LIS_NOM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(LIS_NOM));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(LIS_PRIX_HORAIRE));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((short)(Original_LIS_NO));
            if ((Original_LIS_NOM == null)) {
                throw new global::System.ArgumentNullException("Original_LIS_NOM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_LIS_NOM));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(Original_LIS_PRIX_HORAIRE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string LIS_NOM, double LIS_PRIX_HORAIRE, short Original_LIS_NO, string Original_LIS_NOM, double Original_LIS_PRIX_HORAIRE) {
            return this.Update(Original_LIS_NO, LIS_NOM, LIS_PRIX_HORAIRE, Original_LIS_NO, Original_LIS_NOM, Original_LIS_PRIX_HORAIRE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CAB_PATIENTTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.DataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.DataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.DataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.DataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public CAB_PATIENTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::Oracle.DataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::Oracle.DataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.DataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CAB_PATIENT";
            tableMapping.ColumnMappings.Add("PAT_NO", "PAT_NO");
            tableMapping.ColumnMappings.Add("PAT_NOM", "PAT_NOM");
            tableMapping.ColumnMappings.Add("PAT_PRENOM", "PAT_PRENOM");
            tableMapping.ColumnMappings.Add("PAT_DATE_NAISSANCE", "PAT_DATE_NAISSANCE");
            tableMapping.ColumnMappings.Add("PAT_ADRESSE", "PAT_ADRESSE");
            tableMapping.ColumnMappings.Add("PAT_EMAIL", "PAT_EMAIL");
            tableMapping.ColumnMappings.Add("PAT_TELEPHONE", "PAT_TELEPHONE");
            tableMapping.ColumnMappings.Add("PAT_NO_AVS", "PAT_NO_AVS");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""C##_REDOC_DATA"".""CAB_PATIENT"" WHERE ((""PAT_NO"" = :Original_PAT_NO) AND (""PAT_NOM"" = :Original_PAT_NOM) AND (""PAT_PRENOM"" = :Original_PAT_PRENOM) AND (""PAT_DATE_NAISSANCE"" = :Original_PAT_DATE_NAISSANCE) AND (""PAT_ADRESSE"" = :Original_PAT_ADRESSE) AND (""PAT_EMAIL"" = :Original_PAT_EMAIL) AND (""PAT_TELEPHONE"" = :Original_PAT_TELEPHONE) AND (""PAT_NO_AVS"" = :Original_PAT_NO_AVS))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.DataAccess.Client.OracleParameter param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PAT_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "PAT_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PAT_NOM";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "PAT_NOM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PAT_PRENOM";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "PAT_PRENOM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PAT_DATE_NAISSANCE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "PAT_DATE_NAISSANCE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PAT_ADRESSE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "PAT_ADRESSE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PAT_EMAIL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "PAT_EMAIL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PAT_TELEPHONE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "PAT_TELEPHONE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PAT_NO_AVS";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "PAT_NO_AVS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""C##_REDOC_DATA"".""CAB_PATIENT"" (""PAT_NO"", ""PAT_NOM"", ""PAT_PRENOM"", ""PAT_DATE_NAISSANCE"", ""PAT_ADRESSE"", ""PAT_EMAIL"", ""PAT_TELEPHONE"", ""PAT_NO_AVS"") VALUES (:PAT_NO, :PAT_NOM, :PAT_PRENOM, :PAT_DATE_NAISSANCE, :PAT_ADRESSE, :PAT_EMAIL, :PAT_TELEPHONE, :PAT_NO_AVS)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "PAT_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "PAT_NO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "PAT_NOM";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "PAT_NOM";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "PAT_PRENOM";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "PAT_PRENOM";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "PAT_DATE_NAISSANCE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "PAT_DATE_NAISSANCE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "PAT_ADRESSE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "PAT_ADRESSE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "PAT_EMAIL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "PAT_EMAIL";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "PAT_TELEPHONE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "PAT_TELEPHONE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "PAT_NO_AVS";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "PAT_NO_AVS";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""C##_REDOC_DATA"".""CAB_PATIENT"" SET ""PAT_NO"" = :PAT_NO, ""PAT_NOM"" = :PAT_NOM, ""PAT_PRENOM"" = :PAT_PRENOM, ""PAT_DATE_NAISSANCE"" = :PAT_DATE_NAISSANCE, ""PAT_ADRESSE"" = :PAT_ADRESSE, ""PAT_EMAIL"" = :PAT_EMAIL, ""PAT_TELEPHONE"" = :PAT_TELEPHONE, ""PAT_NO_AVS"" = :PAT_NO_AVS WHERE ((""PAT_NO"" = :Original_PAT_NO) AND (""PAT_NOM"" = :Original_PAT_NOM) AND (""PAT_PRENOM"" = :Original_PAT_PRENOM) AND (""PAT_DATE_NAISSANCE"" = :Original_PAT_DATE_NAISSANCE) AND (""PAT_ADRESSE"" = :Original_PAT_ADRESSE) AND (""PAT_EMAIL"" = :Original_PAT_EMAIL) AND (""PAT_TELEPHONE"" = :Original_PAT_TELEPHONE) AND (""PAT_NO_AVS"" = :Original_PAT_NO_AVS))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "PAT_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "PAT_NO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "PAT_NOM";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "PAT_NOM";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "PAT_PRENOM";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "PAT_PRENOM";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "PAT_DATE_NAISSANCE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "PAT_DATE_NAISSANCE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "PAT_ADRESSE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "PAT_ADRESSE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "PAT_EMAIL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "PAT_EMAIL";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "PAT_TELEPHONE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "PAT_TELEPHONE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "PAT_NO_AVS";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "PAT_NO_AVS";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PAT_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "PAT_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PAT_NOM";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "PAT_NOM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PAT_PRENOM";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "PAT_PRENOM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PAT_DATE_NAISSANCE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "PAT_DATE_NAISSANCE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PAT_ADRESSE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "PAT_ADRESSE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PAT_EMAIL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "PAT_EMAIL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PAT_TELEPHONE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "PAT_TELEPHONE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_PAT_NO_AVS";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "PAT_NO_AVS";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.DataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::RedocApp.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.DataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT PAT_NO, PAT_NOM, PAT_PRENOM, PAT_DATE_NAISSANCE, PAT_ADRESSE, PAT_EMAIL, P" +
                "AT_TELEPHONE, PAT_NO_AVS FROM \"C##_REDOC_DATA\".CAB_PATIENT";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetRedoc.CAB_PATIENTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetRedoc.CAB_PATIENTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetRedoc.CAB_PATIENTDataTable dataTable = new DataSetRedoc.CAB_PATIENTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetRedoc.CAB_PATIENTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetRedoc dataSet) {
            return this.Adapter.Update(dataSet, "CAB_PATIENT");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(short Original_PAT_NO, string Original_PAT_NOM, string Original_PAT_PRENOM, System.DateTime Original_PAT_DATE_NAISSANCE, string Original_PAT_ADRESSE, string Original_PAT_EMAIL, string Original_PAT_TELEPHONE, string Original_PAT_NO_AVS) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((short)(Original_PAT_NO));
            if ((Original_PAT_NOM == null)) {
                throw new global::System.ArgumentNullException("Original_PAT_NOM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_PAT_NOM));
            }
            if ((Original_PAT_PRENOM == null)) {
                throw new global::System.ArgumentNullException("Original_PAT_PRENOM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_PAT_PRENOM));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_PAT_DATE_NAISSANCE));
            if ((Original_PAT_ADRESSE == null)) {
                throw new global::System.ArgumentNullException("Original_PAT_ADRESSE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_PAT_ADRESSE));
            }
            if ((Original_PAT_EMAIL == null)) {
                throw new global::System.ArgumentNullException("Original_PAT_EMAIL");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_PAT_EMAIL));
            }
            if ((Original_PAT_TELEPHONE == null)) {
                throw new global::System.ArgumentNullException("Original_PAT_TELEPHONE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_PAT_TELEPHONE));
            }
            if ((Original_PAT_NO_AVS == null)) {
                throw new global::System.ArgumentNullException("Original_PAT_NO_AVS");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_PAT_NO_AVS));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(short PAT_NO, string PAT_NOM, string PAT_PRENOM, System.DateTime PAT_DATE_NAISSANCE, string PAT_ADRESSE, string PAT_EMAIL, string PAT_TELEPHONE, string PAT_NO_AVS) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((short)(PAT_NO));
            if ((PAT_NOM == null)) {
                throw new global::System.ArgumentNullException("PAT_NOM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(PAT_NOM));
            }
            if ((PAT_PRENOM == null)) {
                throw new global::System.ArgumentNullException("PAT_PRENOM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(PAT_PRENOM));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(PAT_DATE_NAISSANCE));
            if ((PAT_ADRESSE == null)) {
                throw new global::System.ArgumentNullException("PAT_ADRESSE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(PAT_ADRESSE));
            }
            if ((PAT_EMAIL == null)) {
                throw new global::System.ArgumentNullException("PAT_EMAIL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(PAT_EMAIL));
            }
            if ((PAT_TELEPHONE == null)) {
                throw new global::System.ArgumentNullException("PAT_TELEPHONE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(PAT_TELEPHONE));
            }
            if ((PAT_NO_AVS == null)) {
                throw new global::System.ArgumentNullException("PAT_NO_AVS");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(PAT_NO_AVS));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    short PAT_NO, 
                    string PAT_NOM, 
                    string PAT_PRENOM, 
                    System.DateTime PAT_DATE_NAISSANCE, 
                    string PAT_ADRESSE, 
                    string PAT_EMAIL, 
                    string PAT_TELEPHONE, 
                    string PAT_NO_AVS, 
                    short Original_PAT_NO, 
                    string Original_PAT_NOM, 
                    string Original_PAT_PRENOM, 
                    System.DateTime Original_PAT_DATE_NAISSANCE, 
                    string Original_PAT_ADRESSE, 
                    string Original_PAT_EMAIL, 
                    string Original_PAT_TELEPHONE, 
                    string Original_PAT_NO_AVS) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((short)(PAT_NO));
            if ((PAT_NOM == null)) {
                throw new global::System.ArgumentNullException("PAT_NOM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(PAT_NOM));
            }
            if ((PAT_PRENOM == null)) {
                throw new global::System.ArgumentNullException("PAT_PRENOM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(PAT_PRENOM));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(PAT_DATE_NAISSANCE));
            if ((PAT_ADRESSE == null)) {
                throw new global::System.ArgumentNullException("PAT_ADRESSE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(PAT_ADRESSE));
            }
            if ((PAT_EMAIL == null)) {
                throw new global::System.ArgumentNullException("PAT_EMAIL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(PAT_EMAIL));
            }
            if ((PAT_TELEPHONE == null)) {
                throw new global::System.ArgumentNullException("PAT_TELEPHONE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(PAT_TELEPHONE));
            }
            if ((PAT_NO_AVS == null)) {
                throw new global::System.ArgumentNullException("PAT_NO_AVS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(PAT_NO_AVS));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((short)(Original_PAT_NO));
            if ((Original_PAT_NOM == null)) {
                throw new global::System.ArgumentNullException("Original_PAT_NOM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_PAT_NOM));
            }
            if ((Original_PAT_PRENOM == null)) {
                throw new global::System.ArgumentNullException("Original_PAT_PRENOM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_PAT_PRENOM));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Original_PAT_DATE_NAISSANCE));
            if ((Original_PAT_ADRESSE == null)) {
                throw new global::System.ArgumentNullException("Original_PAT_ADRESSE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_PAT_ADRESSE));
            }
            if ((Original_PAT_EMAIL == null)) {
                throw new global::System.ArgumentNullException("Original_PAT_EMAIL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_PAT_EMAIL));
            }
            if ((Original_PAT_TELEPHONE == null)) {
                throw new global::System.ArgumentNullException("Original_PAT_TELEPHONE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_PAT_TELEPHONE));
            }
            if ((Original_PAT_NO_AVS == null)) {
                throw new global::System.ArgumentNullException("Original_PAT_NO_AVS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_PAT_NO_AVS));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string PAT_NOM, string PAT_PRENOM, System.DateTime PAT_DATE_NAISSANCE, string PAT_ADRESSE, string PAT_EMAIL, string PAT_TELEPHONE, string PAT_NO_AVS, short Original_PAT_NO, string Original_PAT_NOM, string Original_PAT_PRENOM, System.DateTime Original_PAT_DATE_NAISSANCE, string Original_PAT_ADRESSE, string Original_PAT_EMAIL, string Original_PAT_TELEPHONE, string Original_PAT_NO_AVS) {
            return this.Update(Original_PAT_NO, PAT_NOM, PAT_PRENOM, PAT_DATE_NAISSANCE, PAT_ADRESSE, PAT_EMAIL, PAT_TELEPHONE, PAT_NO_AVS, Original_PAT_NO, Original_PAT_NOM, Original_PAT_PRENOM, Original_PAT_DATE_NAISSANCE, Original_PAT_ADRESSE, Original_PAT_EMAIL, Original_PAT_TELEPHONE, Original_PAT_NO_AVS);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CAB_RENDEZVOUSTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.DataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.DataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.DataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.DataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public CAB_RENDEZVOUSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::Oracle.DataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::Oracle.DataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.DataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CAB_RENDEZVOUS";
            tableMapping.ColumnMappings.Add("REN_NO", "REN_NO");
            tableMapping.ColumnMappings.Add("REN_UTI_NO", "REN_UTI_NO");
            tableMapping.ColumnMappings.Add("REN_PAT_NO", "REN_PAT_NO");
            tableMapping.ColumnMappings.Add("REN_DATE", "REN_DATE");
            tableMapping.ColumnMappings.Add("REN_ANNULE", "REN_ANNULE");
            tableMapping.ColumnMappings.Add("REN_COMMENTAIRE", "REN_COMMENTAIRE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"C##_REDOC_DATA\".\"CAB_RENDEZVOUS\" WHERE ((\"REN_NO\" = :Original_REN_NO" +
                ") AND (\"REN_UTI_NO\" = :Original_REN_UTI_NO) AND (\"REN_PAT_NO\" = :Original_REN_PA" +
                "T_NO) AND (\"REN_DATE\" = :Original_REN_DATE) AND (\"REN_ANNULE\" = :Original_REN_AN" +
                "NULE))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.DataAccess.Client.OracleParameter param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REN_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "REN_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REN_UTI_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "REN_UTI_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REN_PAT_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "REN_PAT_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REN_DATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "REN_DATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REN_ANNULE";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "REN_ANNULE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"C##_REDOC_DATA\".\"CAB_RENDEZVOUS\" (\"REN_NO\", \"REN_UTI_NO\", \"REN_PAT_N" +
                "O\", \"REN_DATE\", \"REN_ANNULE\", \"REN_COMMENTAIRE\") VALUES (:REN_NO, :REN_UTI_NO, :" +
                "REN_PAT_NO, :REN_DATE, :REN_ANNULE, :REN_COMMENTAIRE)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "REN_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "REN_NO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "REN_UTI_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "REN_UTI_NO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "REN_PAT_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "REN_PAT_NO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "REN_DATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "REN_DATE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "REN_ANNULE";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "REN_ANNULE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "REN_COMMENTAIRE";
            param.DbType = global::System.Data.DbType.Object;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Clob;
            param.IsNullable = true;
            param.SourceColumn = "REN_COMMENTAIRE";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""C##_REDOC_DATA"".""CAB_RENDEZVOUS"" SET ""REN_NO"" = :REN_NO, ""REN_UTI_NO"" = :REN_UTI_NO, ""REN_PAT_NO"" = :REN_PAT_NO, ""REN_DATE"" = :REN_DATE, ""REN_ANNULE"" = :REN_ANNULE, ""REN_COMMENTAIRE"" = :REN_COMMENTAIRE WHERE ((""REN_NO"" = :Original_REN_NO) AND (""REN_UTI_NO"" = :Original_REN_UTI_NO) AND (""REN_PAT_NO"" = :Original_REN_PAT_NO) AND (""REN_DATE"" = :Original_REN_DATE) AND (""REN_ANNULE"" = :Original_REN_ANNULE))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "REN_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "REN_NO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "REN_UTI_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "REN_UTI_NO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "REN_PAT_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "REN_PAT_NO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "REN_DATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "REN_DATE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "REN_ANNULE";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "REN_ANNULE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "REN_COMMENTAIRE";
            param.DbType = global::System.Data.DbType.Object;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Clob;
            param.IsNullable = true;
            param.SourceColumn = "REN_COMMENTAIRE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REN_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "REN_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REN_UTI_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "REN_UTI_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REN_PAT_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "REN_PAT_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REN_DATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "REN_DATE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_REN_ANNULE";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "REN_ANNULE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.DataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::RedocApp.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.DataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT REN_NO, REN_UTI_NO, REN_PAT_NO, REN_DATE, REN_ANNULE, REN_COMMENTAIRE FROM" +
                " \"C##_REDOC_DATA\".CAB_RENDEZVOUS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetRedoc.CAB_RENDEZVOUSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetRedoc.CAB_RENDEZVOUSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetRedoc.CAB_RENDEZVOUSDataTable dataTable = new DataSetRedoc.CAB_RENDEZVOUSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetRedoc.CAB_RENDEZVOUSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetRedoc dataSet) {
            return this.Adapter.Update(dataSet, "CAB_RENDEZVOUS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(short Original_REN_NO, short Original_REN_UTI_NO, short Original_REN_PAT_NO, System.DateTime Original_REN_DATE, short Original_REN_ANNULE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((short)(Original_REN_NO));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((short)(Original_REN_UTI_NO));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((short)(Original_REN_PAT_NO));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_REN_DATE));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((short)(Original_REN_ANNULE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(short REN_NO, short REN_UTI_NO, short REN_PAT_NO, System.DateTime REN_DATE, short REN_ANNULE, object REN_COMMENTAIRE) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((short)(REN_NO));
            this.Adapter.InsertCommand.Parameters[1].Value = ((short)(REN_UTI_NO));
            this.Adapter.InsertCommand.Parameters[2].Value = ((short)(REN_PAT_NO));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(REN_DATE));
            this.Adapter.InsertCommand.Parameters[4].Value = ((short)(REN_ANNULE));
            if ((REN_COMMENTAIRE == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((object)(REN_COMMENTAIRE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(short REN_NO, short REN_UTI_NO, short REN_PAT_NO, System.DateTime REN_DATE, short REN_ANNULE, object REN_COMMENTAIRE, short Original_REN_NO, short Original_REN_UTI_NO, short Original_REN_PAT_NO, System.DateTime Original_REN_DATE, short Original_REN_ANNULE) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((short)(REN_NO));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((short)(REN_UTI_NO));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((short)(REN_PAT_NO));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(REN_DATE));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((short)(REN_ANNULE));
            if ((REN_COMMENTAIRE == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(REN_COMMENTAIRE));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((short)(Original_REN_NO));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((short)(Original_REN_UTI_NO));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((short)(Original_REN_PAT_NO));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Original_REN_DATE));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((short)(Original_REN_ANNULE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(short REN_UTI_NO, short REN_PAT_NO, System.DateTime REN_DATE, short REN_ANNULE, object REN_COMMENTAIRE, short Original_REN_NO, short Original_REN_UTI_NO, short Original_REN_PAT_NO, System.DateTime Original_REN_DATE, short Original_REN_ANNULE) {
            return this.Update(Original_REN_NO, REN_UTI_NO, REN_PAT_NO, REN_DATE, REN_ANNULE, REN_COMMENTAIRE, Original_REN_NO, Original_REN_UTI_NO, Original_REN_PAT_NO, Original_REN_DATE, Original_REN_ANNULE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CAB_SPE_UTILISATEURTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.DataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.DataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.DataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.DataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public CAB_SPE_UTILISATEURTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::Oracle.DataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::Oracle.DataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.DataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CAB_SPE_UTILISATEUR";
            tableMapping.ColumnMappings.Add("SPE_NO", "SPE_NO");
            tableMapping.ColumnMappings.Add("UTI_NO", "UTI_NO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"C##_REDOC_DATA\".\"CAB_SPE_UTILISATEUR\" WHERE ((\"SPE_NO\" = :Original_S" +
                "PE_NO) AND (\"UTI_NO\" = :Original_UTI_NO))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.DataAccess.Client.OracleParameter param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SPE_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "SPE_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_UTI_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "UTI_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"C##_REDOC_DATA\".\"CAB_SPE_UTILISATEUR\" (\"SPE_NO\", \"UTI_NO\") VALUES (:" +
                "SPE_NO, :UTI_NO)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "SPE_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "SPE_NO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "UTI_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "UTI_NO";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"C##_REDOC_DATA\".\"CAB_SPE_UTILISATEUR\" SET \"SPE_NO\" = :SPE_NO, \"UTI_NO\" = " +
                ":UTI_NO WHERE ((\"SPE_NO\" = :Original_SPE_NO) AND (\"UTI_NO\" = :Original_UTI_NO))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "SPE_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "SPE_NO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "UTI_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "UTI_NO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SPE_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "SPE_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_UTI_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "UTI_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.DataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::RedocApp.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.DataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT SPE_NO, UTI_NO FROM \"C##_REDOC_DATA\".CAB_SPE_UTILISATEUR";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetRedoc.CAB_SPE_UTILISATEURDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetRedoc.CAB_SPE_UTILISATEURDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetRedoc.CAB_SPE_UTILISATEURDataTable dataTable = new DataSetRedoc.CAB_SPE_UTILISATEURDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetRedoc.CAB_SPE_UTILISATEURDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetRedoc dataSet) {
            return this.Adapter.Update(dataSet, "CAB_SPE_UTILISATEUR");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(short Original_SPE_NO, short Original_UTI_NO) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((short)(Original_SPE_NO));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((short)(Original_UTI_NO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(short SPE_NO, short UTI_NO) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((short)(SPE_NO));
            this.Adapter.InsertCommand.Parameters[1].Value = ((short)(UTI_NO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(short SPE_NO, short UTI_NO, short Original_SPE_NO, short Original_UTI_NO) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((short)(SPE_NO));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((short)(UTI_NO));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((short)(Original_SPE_NO));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((short)(Original_UTI_NO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(short Original_SPE_NO, short Original_UTI_NO) {
            return this.Update(Original_SPE_NO, Original_UTI_NO, Original_SPE_NO, Original_UTI_NO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CAB_SPECIALISATIONTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.DataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.DataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.DataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.DataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public CAB_SPECIALISATIONTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::Oracle.DataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::Oracle.DataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.DataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CAB_SPECIALISATION";
            tableMapping.ColumnMappings.Add("SPE_NO", "SPE_NO");
            tableMapping.ColumnMappings.Add("SPE_NOM", "SPE_NOM");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"C##_REDOC_DATA\".\"CAB_SPECIALISATION\" WHERE ((\"SPE_NO\" = :Original_SP" +
                "E_NO) AND (\"SPE_NOM\" = :Original_SPE_NOM))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.DataAccess.Client.OracleParameter param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SPE_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "SPE_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SPE_NOM";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "SPE_NOM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"C##_REDOC_DATA\".\"CAB_SPECIALISATION\" (\"SPE_NO\", \"SPE_NOM\") VALUES (:" +
                "SPE_NO, :SPE_NOM)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "SPE_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "SPE_NO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "SPE_NOM";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "SPE_NOM";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"C##_REDOC_DATA\".\"CAB_SPECIALISATION\" SET \"SPE_NO\" = :SPE_NO, \"SPE_NOM\" = " +
                ":SPE_NOM WHERE ((\"SPE_NO\" = :Original_SPE_NO) AND (\"SPE_NOM\" = :Original_SPE_NOM" +
                "))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "SPE_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "SPE_NO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "SPE_NOM";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "SPE_NOM";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SPE_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "SPE_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_SPE_NOM";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "SPE_NOM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.DataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::RedocApp.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.DataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT SPE_NO, SPE_NOM FROM \"C##_REDOC_DATA\".CAB_SPECIALISATION";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetRedoc.CAB_SPECIALISATIONDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetRedoc.CAB_SPECIALISATIONDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetRedoc.CAB_SPECIALISATIONDataTable dataTable = new DataSetRedoc.CAB_SPECIALISATIONDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetRedoc.CAB_SPECIALISATIONDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetRedoc dataSet) {
            return this.Adapter.Update(dataSet, "CAB_SPECIALISATION");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(short Original_SPE_NO, string Original_SPE_NOM) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((short)(Original_SPE_NO));
            if ((Original_SPE_NOM == null)) {
                throw new global::System.ArgumentNullException("Original_SPE_NOM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_SPE_NOM));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(short SPE_NO, string SPE_NOM) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((short)(SPE_NO));
            if ((SPE_NOM == null)) {
                throw new global::System.ArgumentNullException("SPE_NOM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(SPE_NOM));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(short SPE_NO, string SPE_NOM, short Original_SPE_NO, string Original_SPE_NOM) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((short)(SPE_NO));
            if ((SPE_NOM == null)) {
                throw new global::System.ArgumentNullException("SPE_NOM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(SPE_NOM));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((short)(Original_SPE_NO));
            if ((Original_SPE_NOM == null)) {
                throw new global::System.ArgumentNullException("Original_SPE_NOM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_SPE_NOM));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string SPE_NOM, short Original_SPE_NO, string Original_SPE_NOM) {
            return this.Update(Original_SPE_NO, SPE_NOM, Original_SPE_NO, Original_SPE_NOM);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CAB_UTILISATEURTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.DataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.DataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.DataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.DataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public CAB_UTILISATEURTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::Oracle.DataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::Oracle.DataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.DataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CAB_UTILISATEUR";
            tableMapping.ColumnMappings.Add("UTI_NO", "UTI_NO");
            tableMapping.ColumnMappings.Add("UTI_EMAIL", "UTI_EMAIL");
            tableMapping.ColumnMappings.Add("UTI_MDP", "UTI_MDP");
            tableMapping.ColumnMappings.Add("UTI_ROLE", "UTI_ROLE");
            tableMapping.ColumnMappings.Add("UTI_NOM", "UTI_NOM");
            tableMapping.ColumnMappings.Add("UTI_PRENOM", "UTI_PRENOM");
            tableMapping.ColumnMappings.Add("UTI_ADRESSE", "UTI_ADRESSE");
            tableMapping.ColumnMappings.Add("UTI_TELEPHONE", "UTI_TELEPHONE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""C##_REDOC_DATA"".""CAB_UTILISATEUR"" WHERE ((""UTI_NO"" = :Original_UTI_NO) AND (""UTI_EMAIL"" = :Original_UTI_EMAIL) AND (""UTI_MDP"" = :Original_UTI_MDP) AND (""UTI_ROLE"" = :Original_UTI_ROLE) AND (""UTI_NOM"" = :Original_UTI_NOM) AND (""UTI_PRENOM"" = :Original_UTI_PRENOM) AND (""UTI_ADRESSE"" = :Original_UTI_ADRESSE) AND (""UTI_TELEPHONE"" = :Original_UTI_TELEPHONE))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.DataAccess.Client.OracleParameter param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_UTI_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "UTI_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_UTI_EMAIL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "UTI_EMAIL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_UTI_MDP";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "UTI_MDP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_UTI_ROLE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "UTI_ROLE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_UTI_NOM";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "UTI_NOM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_UTI_PRENOM";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "UTI_PRENOM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_UTI_ADRESSE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "UTI_ADRESSE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_UTI_TELEPHONE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "UTI_TELEPHONE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"C##_REDOC_DATA\".\"CAB_UTILISATEUR\" (\"UTI_NO\", \"UTI_EMAIL\", \"UTI_MDP\"," +
                " \"UTI_ROLE\", \"UTI_NOM\", \"UTI_PRENOM\", \"UTI_ADRESSE\", \"UTI_TELEPHONE\") VALUES (:U" +
                "TI_NO, :UTI_EMAIL, :UTI_MDP, :UTI_ROLE, :UTI_NOM, :UTI_PRENOM, :UTI_ADRESSE, :UT" +
                "I_TELEPHONE)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "UTI_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "UTI_NO";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "UTI_EMAIL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "UTI_EMAIL";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "UTI_MDP";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "UTI_MDP";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "UTI_ROLE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "UTI_ROLE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "UTI_NOM";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "UTI_NOM";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "UTI_PRENOM";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "UTI_PRENOM";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "UTI_ADRESSE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "UTI_ADRESSE";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "UTI_TELEPHONE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "UTI_TELEPHONE";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.DataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""C##_REDOC_DATA"".""CAB_UTILISATEUR"" SET ""UTI_NO"" = :UTI_NO, ""UTI_EMAIL"" = :UTI_EMAIL, ""UTI_MDP"" = :UTI_MDP, ""UTI_ROLE"" = :UTI_ROLE, ""UTI_NOM"" = :UTI_NOM, ""UTI_PRENOM"" = :UTI_PRENOM, ""UTI_ADRESSE"" = :UTI_ADRESSE, ""UTI_TELEPHONE"" = :UTI_TELEPHONE WHERE ((""UTI_NO"" = :Original_UTI_NO) AND (""UTI_EMAIL"" = :Original_UTI_EMAIL) AND (""UTI_MDP"" = :Original_UTI_MDP) AND (""UTI_ROLE"" = :Original_UTI_ROLE) AND (""UTI_NOM"" = :Original_UTI_NOM) AND (""UTI_PRENOM"" = :Original_UTI_PRENOM) AND (""UTI_ADRESSE"" = :Original_UTI_ADRESSE) AND (""UTI_TELEPHONE"" = :Original_UTI_TELEPHONE))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "UTI_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "UTI_NO";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "UTI_EMAIL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "UTI_EMAIL";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "UTI_MDP";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "UTI_MDP";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "UTI_ROLE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "UTI_ROLE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "UTI_NOM";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "UTI_NOM";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "UTI_PRENOM";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "UTI_PRENOM";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "UTI_ADRESSE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "UTI_ADRESSE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "UTI_TELEPHONE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "UTI_TELEPHONE";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_UTI_NO";
            param.DbType = global::System.Data.DbType.Int16;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Int16;
            param.IsNullable = true;
            param.SourceColumn = "UTI_NO";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_UTI_EMAIL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "UTI_EMAIL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_UTI_MDP";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "UTI_MDP";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_UTI_ROLE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "UTI_ROLE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_UTI_NOM";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "UTI_NOM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_UTI_PRENOM";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "UTI_PRENOM";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_UTI_ADRESSE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "UTI_ADRESSE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "Original_UTI_TELEPHONE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.IsNullable = true;
            param.SourceColumn = "UTI_TELEPHONE";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.DataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::RedocApp.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.DataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT UTI_NO, UTI_EMAIL, UTI_MDP, UTI_ROLE, UTI_NOM, UTI_PRENOM, UTI_ADRESSE, UT" +
                "I_TELEPHONE FROM \"C##_REDOC_DATA\".CAB_UTILISATEUR";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetRedoc.CAB_UTILISATEURDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetRedoc.CAB_UTILISATEURDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetRedoc.CAB_UTILISATEURDataTable dataTable = new DataSetRedoc.CAB_UTILISATEURDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetRedoc.CAB_UTILISATEURDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetRedoc dataSet) {
            return this.Adapter.Update(dataSet, "CAB_UTILISATEUR");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(short Original_UTI_NO, string Original_UTI_EMAIL, string Original_UTI_MDP, string Original_UTI_ROLE, string Original_UTI_NOM, string Original_UTI_PRENOM, string Original_UTI_ADRESSE, string Original_UTI_TELEPHONE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((short)(Original_UTI_NO));
            if ((Original_UTI_EMAIL == null)) {
                throw new global::System.ArgumentNullException("Original_UTI_EMAIL");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_UTI_EMAIL));
            }
            if ((Original_UTI_MDP == null)) {
                throw new global::System.ArgumentNullException("Original_UTI_MDP");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_UTI_MDP));
            }
            if ((Original_UTI_ROLE == null)) {
                throw new global::System.ArgumentNullException("Original_UTI_ROLE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_UTI_ROLE));
            }
            if ((Original_UTI_NOM == null)) {
                throw new global::System.ArgumentNullException("Original_UTI_NOM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_UTI_NOM));
            }
            if ((Original_UTI_PRENOM == null)) {
                throw new global::System.ArgumentNullException("Original_UTI_PRENOM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_UTI_PRENOM));
            }
            if ((Original_UTI_ADRESSE == null)) {
                throw new global::System.ArgumentNullException("Original_UTI_ADRESSE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_UTI_ADRESSE));
            }
            if ((Original_UTI_TELEPHONE == null)) {
                throw new global::System.ArgumentNullException("Original_UTI_TELEPHONE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_UTI_TELEPHONE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(short UTI_NO, string UTI_EMAIL, string UTI_MDP, string UTI_ROLE, string UTI_NOM, string UTI_PRENOM, string UTI_ADRESSE, string UTI_TELEPHONE) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((short)(UTI_NO));
            if ((UTI_EMAIL == null)) {
                throw new global::System.ArgumentNullException("UTI_EMAIL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(UTI_EMAIL));
            }
            if ((UTI_MDP == null)) {
                throw new global::System.ArgumentNullException("UTI_MDP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(UTI_MDP));
            }
            if ((UTI_ROLE == null)) {
                throw new global::System.ArgumentNullException("UTI_ROLE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(UTI_ROLE));
            }
            if ((UTI_NOM == null)) {
                throw new global::System.ArgumentNullException("UTI_NOM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(UTI_NOM));
            }
            if ((UTI_PRENOM == null)) {
                throw new global::System.ArgumentNullException("UTI_PRENOM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(UTI_PRENOM));
            }
            if ((UTI_ADRESSE == null)) {
                throw new global::System.ArgumentNullException("UTI_ADRESSE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(UTI_ADRESSE));
            }
            if ((UTI_TELEPHONE == null)) {
                throw new global::System.ArgumentNullException("UTI_TELEPHONE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(UTI_TELEPHONE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    short UTI_NO, 
                    string UTI_EMAIL, 
                    string UTI_MDP, 
                    string UTI_ROLE, 
                    string UTI_NOM, 
                    string UTI_PRENOM, 
                    string UTI_ADRESSE, 
                    string UTI_TELEPHONE, 
                    short Original_UTI_NO, 
                    string Original_UTI_EMAIL, 
                    string Original_UTI_MDP, 
                    string Original_UTI_ROLE, 
                    string Original_UTI_NOM, 
                    string Original_UTI_PRENOM, 
                    string Original_UTI_ADRESSE, 
                    string Original_UTI_TELEPHONE) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((short)(UTI_NO));
            if ((UTI_EMAIL == null)) {
                throw new global::System.ArgumentNullException("UTI_EMAIL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(UTI_EMAIL));
            }
            if ((UTI_MDP == null)) {
                throw new global::System.ArgumentNullException("UTI_MDP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(UTI_MDP));
            }
            if ((UTI_ROLE == null)) {
                throw new global::System.ArgumentNullException("UTI_ROLE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(UTI_ROLE));
            }
            if ((UTI_NOM == null)) {
                throw new global::System.ArgumentNullException("UTI_NOM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(UTI_NOM));
            }
            if ((UTI_PRENOM == null)) {
                throw new global::System.ArgumentNullException("UTI_PRENOM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(UTI_PRENOM));
            }
            if ((UTI_ADRESSE == null)) {
                throw new global::System.ArgumentNullException("UTI_ADRESSE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(UTI_ADRESSE));
            }
            if ((UTI_TELEPHONE == null)) {
                throw new global::System.ArgumentNullException("UTI_TELEPHONE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(UTI_TELEPHONE));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((short)(Original_UTI_NO));
            if ((Original_UTI_EMAIL == null)) {
                throw new global::System.ArgumentNullException("Original_UTI_EMAIL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_UTI_EMAIL));
            }
            if ((Original_UTI_MDP == null)) {
                throw new global::System.ArgumentNullException("Original_UTI_MDP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_UTI_MDP));
            }
            if ((Original_UTI_ROLE == null)) {
                throw new global::System.ArgumentNullException("Original_UTI_ROLE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_UTI_ROLE));
            }
            if ((Original_UTI_NOM == null)) {
                throw new global::System.ArgumentNullException("Original_UTI_NOM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_UTI_NOM));
            }
            if ((Original_UTI_PRENOM == null)) {
                throw new global::System.ArgumentNullException("Original_UTI_PRENOM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_UTI_PRENOM));
            }
            if ((Original_UTI_ADRESSE == null)) {
                throw new global::System.ArgumentNullException("Original_UTI_ADRESSE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_UTI_ADRESSE));
            }
            if ((Original_UTI_TELEPHONE == null)) {
                throw new global::System.ArgumentNullException("Original_UTI_TELEPHONE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_UTI_TELEPHONE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string UTI_EMAIL, string UTI_MDP, string UTI_ROLE, string UTI_NOM, string UTI_PRENOM, string UTI_ADRESSE, string UTI_TELEPHONE, short Original_UTI_NO, string Original_UTI_EMAIL, string Original_UTI_MDP, string Original_UTI_ROLE, string Original_UTI_NOM, string Original_UTI_PRENOM, string Original_UTI_ADRESSE, string Original_UTI_TELEPHONE) {
            return this.Update(Original_UTI_NO, UTI_EMAIL, UTI_MDP, UTI_ROLE, UTI_NOM, UTI_PRENOM, UTI_ADRESSE, UTI_TELEPHONE, Original_UTI_NO, Original_UTI_EMAIL, Original_UTI_MDP, Original_UTI_ROLE, Original_UTI_NOM, Original_UTI_PRENOM, Original_UTI_ADRESSE, Original_UTI_TELEPHONE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class VW_DOCTEURTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.DataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.DataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.DataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.DataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public VW_DOCTEURTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::Oracle.DataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::Oracle.DataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.DataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "VW_DOCTEUR";
            tableMapping.ColumnMappings.Add("DOC_NO", "DOC_NO");
            tableMapping.ColumnMappings.Add("DOC_EMAIL", "DOC_EMAIL");
            tableMapping.ColumnMappings.Add("DOC_MDP", "DOC_MDP");
            tableMapping.ColumnMappings.Add("DOC_NOM", "DOC_NOM");
            tableMapping.ColumnMappings.Add("DOC_PRENOM", "DOC_PRENOM");
            tableMapping.ColumnMappings.Add("DOC_NOM_COMPLET", "DOC_NOM_COMPLET");
            tableMapping.ColumnMappings.Add("DOC_ADRESSE", "DOC_ADRESSE");
            tableMapping.ColumnMappings.Add("DOC_TELEPHONE", "DOC_TELEPHONE");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.DataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::RedocApp.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.DataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT DOC_NO, DOC_EMAIL, DOC_MDP, DOC_NOM, DOC_PRENOM, DOC_NOM_COMPLET, DOC_ADRE" +
                "SSE, DOC_TELEPHONE FROM \"C##_REDOC_DATA\".VW_DOCTEUR";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetRedoc.VW_DOCTEURDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetRedoc.VW_DOCTEURDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetRedoc.VW_DOCTEURDataTable dataTable = new DataSetRedoc.VW_DOCTEURDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class VW_EXAMENTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.DataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.DataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.DataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.DataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public VW_EXAMENTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::Oracle.DataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::Oracle.DataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.DataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "VW_EXAMEN";
            tableMapping.ColumnMappings.Add("LIS_NO", "LIS_NO");
            tableMapping.ColumnMappings.Add("LIS_NOM", "LIS_NOM");
            tableMapping.ColumnMappings.Add("LIS_PRIX_HORAIRE", "LIS_PRIX_HORAIRE");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.DataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::RedocApp.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.DataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT LIS_NO, LIS_NOM, LIS_PRIX_HORAIRE FROM \"C##_REDOC_DATA\".VW_EXAMEN";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetRedoc.VW_EXAMENDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetRedoc.VW_EXAMENDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetRedoc.VW_EXAMENDataTable dataTable = new DataSetRedoc.VW_EXAMENDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class VW_HORAIRE_DOCTEURTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.DataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.DataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.DataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.DataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public VW_HORAIRE_DOCTEURTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::Oracle.DataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::Oracle.DataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.DataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "VW_HORAIRE_DOCTEUR";
            tableMapping.ColumnMappings.Add("HOR_JOUR", "HOR_JOUR");
            tableMapping.ColumnMappings.Add("HOR_DEBUT", "HOR_DEBUT");
            tableMapping.ColumnMappings.Add("HOR_FIN", "HOR_FIN");
            tableMapping.ColumnMappings.Add("HOR_UTI_NO", "HOR_UTI_NO");
            tableMapping.ColumnMappings.Add("HOR_NO", "HOR_NO");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.DataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::RedocApp.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.DataAccess.Client.OracleCommand[2];
            this._commandCollection[0] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT HOR_JOUR, HOR_DEBUT, HOR_FIN, HOR_UTI_NO, HOR_NO FROM \"C##_REDOC_DATA\".VW_" +
                "HORAIRE_DOCTEUR";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT HOR_JOUR, HOR_DEBUT, HOR_FIN, HOR_UTI_NO, HOR_NO FROM \"C##_REDOC_DATA\".VW_" +
                "HORAIRE_DOCTEUR WHERE (HOR_UTI_NO = :userNo)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            global::Oracle.DataAccess.Client.OracleParameter param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = ":userNo";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "HOR_UTI_NO";
            this._commandCollection[1].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetRedoc.VW_HORAIRE_DOCTEURDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetRedoc.VW_HORAIRE_DOCTEURDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetRedoc.VW_HORAIRE_DOCTEURDataTable dataTable = new DataSetRedoc.VW_HORAIRE_DOCTEURDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByUtiNo(DataSetRedoc.VW_HORAIRE_DOCTEURDataTable dataTable, decimal userNo) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(userNo));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class VW_PATIENTTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.DataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.DataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.DataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.DataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public VW_PATIENTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::Oracle.DataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::Oracle.DataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.DataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "VW_PATIENT";
            tableMapping.ColumnMappings.Add("PAT_NO", "PAT_NO");
            tableMapping.ColumnMappings.Add("PAT_NOM", "PAT_NOM");
            tableMapping.ColumnMappings.Add("PAT_PRENOM", "PAT_PRENOM");
            tableMapping.ColumnMappings.Add("PAT_NOM_COMPLET", "PAT_NOM_COMPLET");
            tableMapping.ColumnMappings.Add("PAT_DATE_NAISSANCE", "PAT_DATE_NAISSANCE");
            tableMapping.ColumnMappings.Add("PAT_ADRESSE", "PAT_ADRESSE");
            tableMapping.ColumnMappings.Add("PAT_EMAIL", "PAT_EMAIL");
            tableMapping.ColumnMappings.Add("PAT_TELEPHONE", "PAT_TELEPHONE");
            tableMapping.ColumnMappings.Add("PAT_NO_AVS", "PAT_NO_AVS");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.DataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::RedocApp.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.DataAccess.Client.OracleCommand[2];
            this._commandCollection[0] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT PAT_NO, PAT_NOM, PAT_PRENOM, PAT_NOM_COMPLET, PAT_DATE_NAISSANCE, PAT_ADRE" +
                "SSE, PAT_EMAIL, PAT_TELEPHONE, PAT_NO_AVS FROM \"C##_REDOC_DATA\".VW_PATIENT";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT PAT_NO, PAT_NOM, PAT_PRENOM, PAT_NOM_COMPLET, PAT_DATE_NAISSANCE, PAT_ADRE" +
                "SSE, PAT_EMAIL, PAT_TELEPHONE, PAT_NO_AVS\r\nFROM     \"C##_REDOC_DATA\".VW_PATIENT\r" +
                "\nWHERE  (PAT_NO = :patientNo)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            global::Oracle.DataAccess.Client.OracleParameter param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = ":patientNo";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PAT_NO";
            this._commandCollection[1].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetRedoc.VW_PATIENTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetRedoc.VW_PATIENTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetRedoc.VW_PATIENTDataTable dataTable = new DataSetRedoc.VW_PATIENTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByPatientNo(DataSetRedoc.VW_PATIENTDataTable dataTable, decimal patientNo) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(patientNo));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class VW_EXCEPTION_HORAIRE_DOCTEURTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.DataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.DataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.DataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.DataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public VW_EXCEPTION_HORAIRE_DOCTEURTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::Oracle.DataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::Oracle.DataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.DataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "VW_EXCEPTION_HORAIRE_DOCTEUR";
            tableMapping.ColumnMappings.Add("EXC_UTI_NO", "EXC_UTI_NO");
            tableMapping.ColumnMappings.Add("EXC_DEBUT", "EXC_DEBUT");
            tableMapping.ColumnMappings.Add("EXC_FIN", "EXC_FIN");
            tableMapping.ColumnMappings.Add("EXC_COMMENTAIRE", "EXC_COMMENTAIRE");
            tableMapping.ColumnMappings.Add("EXC_NO", "EXC_NO");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.DataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::RedocApp.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.DataAccess.Client.OracleCommand[2];
            this._commandCollection[0] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT EXC_UTI_NO, EXC_DEBUT, EXC_FIN, EXC_COMMENTAIRE, EXC_NO FROM \"C##_REDOC_DA" +
                "TA\".VW_EXCEPTION_HORAIRE_DOCTEUR";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT EXC_UTI_NO, EXC_DEBUT, EXC_FIN, EXC_COMMENTAIRE, EXC_NO FROM \"C##_REDOC_DA" +
                "TA\".VW_EXCEPTION_HORAIRE_DOCTEUR WHERE (EXC_UTI_NO = :userNo)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            global::Oracle.DataAccess.Client.OracleParameter param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = ":userNo";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "EXC_UTI_NO";
            this._commandCollection[1].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetRedoc.VW_EXCEPTION_HORAIRE_DOCTEURDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetRedoc.VW_EXCEPTION_HORAIRE_DOCTEURDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetRedoc.VW_EXCEPTION_HORAIRE_DOCTEURDataTable dataTable = new DataSetRedoc.VW_EXCEPTION_HORAIRE_DOCTEURDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByUtiNo(DataSetRedoc.VW_EXCEPTION_HORAIRE_DOCTEURDataTable dataTable, decimal userNo) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(userNo));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class VW_FACTURETableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.DataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.DataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.DataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.DataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public VW_FACTURETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::Oracle.DataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::Oracle.DataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.DataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "VW_FACTURE";
            tableMapping.ColumnMappings.Add("FAC_NO", "FAC_NO");
            tableMapping.ColumnMappings.Add("PAT_NOM", "PAT_NOM");
            tableMapping.ColumnMappings.Add("PAT_PRENOM", "PAT_PRENOM");
            tableMapping.ColumnMappings.Add("PAT_NOM_COMPLET", "PAT_NOM_COMPLET");
            tableMapping.ColumnMappings.Add("FAC_DATE", "FAC_DATE");
            tableMapping.ColumnMappings.Add("FAC_PAYE", "FAC_PAYE");
            tableMapping.ColumnMappings.Add("FAC_TOTAL", "FAC_TOTAL");
            tableMapping.ColumnMappings.Add("PAT_NO", "PAT_NO");
            tableMapping.ColumnMappings.Add("FAC_REN_NO", "FAC_REN_NO");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.DataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::RedocApp.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.DataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT FAC_NO, PAT_NOM, PAT_PRENOM, PAT_NOM_COMPLET, FAC_DATE, FAC_PAYE, FAC_TOTA" +
                "L, PAT_NO, FAC_REN_NO FROM \"C##_REDOC_DATA\".VW_FACTURE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetRedoc.VW_FACTUREDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetRedoc.VW_FACTUREDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetRedoc.VW_FACTUREDataTable dataTable = new DataSetRedoc.VW_FACTUREDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class VW_RENDEZVOUSTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.DataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.DataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.DataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.DataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public VW_RENDEZVOUSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::Oracle.DataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::Oracle.DataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.DataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "VW_RENDEZVOUS";
            tableMapping.ColumnMappings.Add("REN_NO", "REN_NO");
            tableMapping.ColumnMappings.Add("REN_DATE", "REN_DATE");
            tableMapping.ColumnMappings.Add("PAT_NOM", "PAT_NOM");
            tableMapping.ColumnMappings.Add("PAT_PRENOM", "PAT_PRENOM");
            tableMapping.ColumnMappings.Add("PAT_NOM_COMPLET", "PAT_NOM_COMPLET");
            tableMapping.ColumnMappings.Add("DOC_NOM", "DOC_NOM");
            tableMapping.ColumnMappings.Add("DOC_PRENOM", "DOC_PRENOM");
            tableMapping.ColumnMappings.Add("DOC_NOM_COMPLET", "DOC_NOM_COMPLET");
            tableMapping.ColumnMappings.Add("REN_ANNULE", "REN_ANNULE");
            tableMapping.ColumnMappings.Add("REN_COMMENTAIRE", "REN_COMMENTAIRE");
            tableMapping.ColumnMappings.Add("PAT_NO", "PAT_NO");
            tableMapping.ColumnMappings.Add("DOC_NO", "DOC_NO");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.DataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::RedocApp.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.DataAccess.Client.OracleCommand[4];
            this._commandCollection[0] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT REN_NO, REN_DATE, PAT_NOM, PAT_PRENOM, PAT_NOM_COMPLET, DOC_NOM, DOC_PRENO" +
                "M, DOC_NOM_COMPLET, REN_ANNULE, REN_COMMENTAIRE, DOC_NO, PAT_NO FROM \"C##_REDOC_" +
                "DATA\".VW_RENDEZVOUS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT REN_NO, REN_DATE, PAT_NOM, PAT_PRENOM, PAT_NOM_COMPLET, DOC_NOM, DOC_PRENO" +
                "M, DOC_NOM_COMPLET, REN_ANNULE, REN_COMMENTAIRE, DOC_NO, PAT_NO\r\nFROM     \"C##_R" +
                "EDOC_DATA\".VW_RENDEZVOUS\r\nWHERE  (REN_NO = :apptNo)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            global::Oracle.DataAccess.Client.OracleParameter param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = ":apptNo";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "REN_NO";
            this._commandCollection[1].Parameters.Add(param);
            this._commandCollection[2] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT REN_NO, REN_DATE, PAT_NOM, PAT_PRENOM, PAT_NOM_COMPLET, DOC_NOM, DOC_PRENO" +
                "M, DOC_NOM_COMPLET, REN_ANNULE, REN_COMMENTAIRE, DOC_NO, PAT_NO\r\nFROM     \"C##_R" +
                "EDOC_DATA\".VW_RENDEZVOUS\r\nWHERE  (DOC_NO = :docNo)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = ":docNo";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "DOC_NO";
            this._commandCollection[2].Parameters.Add(param);
            this._commandCollection[3] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT REN_NO, REN_DATE, PAT_NOM, PAT_PRENOM, PAT_NOM_COMPLET, DOC_NOM, DOC_PRENO" +
                "M, DOC_NOM_COMPLET, REN_ANNULE, REN_COMMENTAIRE, DOC_NO, PAT_NO\r\nFROM     \"C##_R" +
                "EDOC_DATA\".VW_RENDEZVOUS\r\nWHERE  (PAT_NO = :patNo)";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = ":patNo";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "PAT_NO";
            this._commandCollection[3].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetRedoc.VW_RENDEZVOUSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetRedoc.VW_RENDEZVOUSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetRedoc.VW_RENDEZVOUSDataTable dataTable = new DataSetRedoc.VW_RENDEZVOUSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByApptNo(DataSetRedoc.VW_RENDEZVOUSDataTable dataTable, decimal apptNo) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(apptNo));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByDocNo(DataSetRedoc.VW_RENDEZVOUSDataTable dataTable, decimal docNo) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(docNo));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByPatNo(DataSetRedoc.VW_RENDEZVOUSDataTable dataTable, decimal patNo) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(patNo));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class VW_EXAMENS_FACTURETableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.DataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.DataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.DataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.DataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public VW_EXAMENS_FACTURETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::Oracle.DataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::Oracle.DataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.DataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "VW_EXAMENS_FACTURE";
            tableMapping.ColumnMappings.Add("FAC_NO", "FAC_NO");
            tableMapping.ColumnMappings.Add("EXA_NO", "EXA_NO");
            tableMapping.ColumnMappings.Add("EXA_NOM", "EXA_NOM");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.DataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::RedocApp.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.DataAccess.Client.OracleCommand[2];
            this._commandCollection[0] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT FAC_NO, EXA_NO, EXA_NOM FROM \"C##_REDOC_DATA\".VW_EXAMENS_FACTURE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT FAC_NO, EXA_NO, EXA_NOM\r\nFROM     \"C##_REDOC_DATA\".VW_EXAMENS_FACTURE\r\nWHE" +
                "RE  (FAC_NO = :facNo)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            global::Oracle.DataAccess.Client.OracleParameter param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = ":facNo";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "FAC_NO";
            this._commandCollection[1].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetRedoc.VW_EXAMENS_FACTUREDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetRedoc.VW_EXAMENS_FACTUREDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetRedoc.VW_EXAMENS_FACTUREDataTable dataTable = new DataSetRedoc.VW_EXAMENS_FACTUREDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByFacNo(DataSetRedoc.VW_EXAMENS_FACTUREDataTable dataTable, decimal facNo) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(facNo));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class QueriesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.IDbCommand[] _commandCollection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.IDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.IDbCommand[14];
            this._commandCollection[0] = new global::Oracle.DataAccess.Client.OracleCommand();
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[0])).Connection = new global::Oracle.DataAccess.Client.OracleConnection(global::RedocApp.Properties.Settings.Default.ConnectionString);
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[0])).CommandText = "\"C##_REDOC_DATA\".PKG_REDOC.ADDAPPOINTMENT";
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[0])).CommandType = global::System.Data.CommandType.StoredProcedure;
            global::Oracle.DataAccess.Client.OracleParameter param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_REN_DATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[0])).Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_DOC_NO";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[0])).Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_PAT_NO";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[0])).Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_REN_COMMENTAIRE";
            param.DbType = global::System.Data.DbType.Object;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Clob;
            param.Size = 65536;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[0])).Parameters.Add(param);
            this._commandCollection[1] = new global::Oracle.DataAccess.Client.OracleCommand();
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[1])).Connection = new global::Oracle.DataAccess.Client.OracleConnection(global::RedocApp.Properties.Settings.Default.ConnectionString);
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[1])).CommandText = "\"C##_REDOC_DATA\".PKG_REDOC.ADDDOCSCHEDULE";
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[1])).CommandType = global::System.Data.CommandType.StoredProcedure;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_HOR_UTI_NO";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[1])).Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_HOR_DEBUT";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[1])).Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_HOR_FIN";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[1])).Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_HOR_JOUR";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[1])).Parameters.Add(param);
            this._commandCollection[2] = new global::Oracle.DataAccess.Client.OracleCommand();
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[2])).Connection = new global::Oracle.DataAccess.Client.OracleConnection(global::RedocApp.Properties.Settings.Default.ConnectionString);
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[2])).CommandText = "\"C##_REDOC_DATA\".PKG_REDOC.ADDDOCSCHEDULEEXCEPTION";
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[2])).CommandType = global::System.Data.CommandType.StoredProcedure;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_EXC_UTI_NO";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[2])).Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_EXC_DEBUT";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[2])).Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_EXC_FIN";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[2])).Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_EXC_COMMENTAIRE";
            param.DbType = global::System.Data.DbType.Object;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Clob;
            param.Size = 65536;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[2])).Parameters.Add(param);
            this._commandCollection[3] = new global::Oracle.DataAccess.Client.OracleCommand();
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[3])).Connection = new global::Oracle.DataAccess.Client.OracleConnection(global::RedocApp.Properties.Settings.Default.ConnectionString);
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[3])).CommandText = "\"C##_REDOC_DATA\".PKG_REDOC.ADDINVOICEEXAM";
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[3])).CommandType = global::System.Data.CommandType.StoredProcedure;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_LIG_FAC_NO";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[3])).Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_LIG_LIS_NO";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[3])).Parameters.Add(param);
            this._commandCollection[4] = new global::Oracle.DataAccess.Client.OracleCommand();
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[4])).Connection = new global::Oracle.DataAccess.Client.OracleConnection(global::RedocApp.Properties.Settings.Default.ConnectionString);
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[4])).CommandText = "\"C##_REDOC_DATA\".PKG_REDOC.ADDPATIENT";
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[4])).CommandType = global::System.Data.CommandType.StoredProcedure;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_PAT_NOM";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[4])).Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_PAT_PRENOM";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[4])).Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_PAT_DATE_NAISSANCE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[4])).Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_PAT_ADRESSE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.Size = 255;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[4])).Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_PAT_EMAIL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.Size = 255;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[4])).Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_PAT_TELEPHONE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.Size = 32;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[4])).Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_PAT_NO_AVS";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.Size = 32;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[4])).Parameters.Add(param);
            this._commandCollection[5] = new global::Oracle.DataAccess.Client.OracleCommand();
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[5])).Connection = new global::Oracle.DataAccess.Client.OracleConnection(global::RedocApp.Properties.Settings.Default.ConnectionString);
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[5])).CommandText = "\"C##_REDOC_DATA\".PKG_REDOC.DELETEDOCSCHEDULE";
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[5])).CommandType = global::System.Data.CommandType.StoredProcedure;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_HOR_NO";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[5])).Parameters.Add(param);
            this._commandCollection[6] = new global::Oracle.DataAccess.Client.OracleCommand();
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[6])).Connection = new global::Oracle.DataAccess.Client.OracleConnection(global::RedocApp.Properties.Settings.Default.ConnectionString);
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[6])).CommandText = "\"C##_REDOC_DATA\".PKG_REDOC.DELETEDOCSCHEDULEEXCEPTION";
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[6])).CommandType = global::System.Data.CommandType.StoredProcedure;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_EXC_NO";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[6])).Parameters.Add(param);
            this._commandCollection[7] = new global::Oracle.DataAccess.Client.OracleCommand();
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[7])).Connection = new global::Oracle.DataAccess.Client.OracleConnection(global::RedocApp.Properties.Settings.Default.ConnectionString);
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[7])).CommandText = "\"C##_REDOC_DATA\".PKG_REDOC.DELETEPATIENT";
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[7])).CommandType = global::System.Data.CommandType.StoredProcedure;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_PAT_NO";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[7])).Parameters.Add(param);
            this._commandCollection[8] = new global::Oracle.DataAccess.Client.OracleCommand();
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[8])).Connection = new global::Oracle.DataAccess.Client.OracleConnection(global::RedocApp.Properties.Settings.Default.ConnectionString);
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[8])).CommandText = "\"C##_REDOC_DATA\".PKG_REDOC.EDITAPPOINTMENT";
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[8])).CommandType = global::System.Data.CommandType.StoredProcedure;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_REN_NO";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[8])).Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_REN_DATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[8])).Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_DOC_NO";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[8])).Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_PAT_NO";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[8])).Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_REN_ANNULE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[8])).Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_REN_COMMENTAIRE";
            param.DbType = global::System.Data.DbType.Object;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Clob;
            param.Size = 65536;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[8])).Parameters.Add(param);
            this._commandCollection[9] = new global::Oracle.DataAccess.Client.OracleCommand();
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[9])).Connection = new global::Oracle.DataAccess.Client.OracleConnection(global::RedocApp.Properties.Settings.Default.ConnectionString);
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[9])).CommandText = "\"C##_REDOC_DATA\".PKG_REDOC.EDITPATIENT";
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[9])).CommandType = global::System.Data.CommandType.StoredProcedure;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_PAT_NO";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[9])).Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_PAT_NOM";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[9])).Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_PAT_PRENOM";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.Size = 50;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[9])).Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_PAT_DATE_NAISSANCE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[9])).Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_PAT_ADRESSE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.Size = 255;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[9])).Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_PAT_EMAIL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.Size = 255;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[9])).Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_PAT_TELEPHONE";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.Size = 32;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[9])).Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_PAT_NO_AVS";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.Size = 32;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[9])).Parameters.Add(param);
            this._commandCollection[10] = new global::Oracle.DataAccess.Client.OracleCommand();
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[10])).Connection = new global::Oracle.DataAccess.Client.OracleConnection(global::RedocApp.Properties.Settings.Default.ConnectionString);
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[10])).CommandText = "\"C##_REDOC_DATA\".PKG_REDOC.ADDINVOICE";
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[10])).CommandType = global::System.Data.CommandType.StoredProcedure;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "\"ReturnValue\"";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.Direction = global::System.Data.ParameterDirection.ReturnValue;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[10])).Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_FAC_REN_NO";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[10])).Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_FAC_DATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[10])).Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_FAC_TOTAL";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[10])).Parameters.Add(param);
            this._commandCollection[11] = new global::Oracle.DataAccess.Client.OracleCommand();
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[11])).Connection = new global::Oracle.DataAccess.Client.OracleConnection(global::RedocApp.Properties.Settings.Default.ConnectionString);
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[11])).CommandText = "\"C##_REDOC_DATA\".PKG_REDOC.CHECKLOGINCREDENTIALS";
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[11])).CommandType = global::System.Data.CommandType.StoredProcedure;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "\"ReturnValue\"";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.Size = 32767;
            param.Direction = global::System.Data.ParameterDirection.ReturnValue;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[11])).Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_UTI_EMAIL";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.Size = 255;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[11])).Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_UTI_MDP";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.Size = 255;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[11])).Parameters.Add(param);
            this._commandCollection[12] = new global::Oracle.DataAccess.Client.OracleCommand();
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[12])).Connection = new global::Oracle.DataAccess.Client.OracleConnection(global::RedocApp.Properties.Settings.Default.ConnectionString);
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[12])).CommandText = "\"C##_REDOC_DATA\".PKG_REDOC.GETEXAMPRICE";
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[12])).CommandType = global::System.Data.CommandType.StoredProcedure;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "\"ReturnValue\"";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.Direction = global::System.Data.ParameterDirection.ReturnValue;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[12])).Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_EXA_NO";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[12])).Parameters.Add(param);
            this._commandCollection[13] = new global::Oracle.DataAccess.Client.OracleCommand();
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[13])).Connection = new global::Oracle.DataAccess.Client.OracleConnection(global::RedocApp.Properties.Settings.Default.ConnectionString);
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[13])).CommandText = "\"C##_REDOC_DATA\".PKG_REDOC.EDITINVOICE";
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[13])).CommandType = global::System.Data.CommandType.StoredProcedure;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_FAC_NO";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[13])).Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_FAC_DATE";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[13])).Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "I_FAC_PAYE";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = null;
            ((global::Oracle.DataAccess.Client.OracleCommand)(this._commandCollection[13])).Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int PKG_REDOC_ADDAPPOINTMENT(global::System.Nullable<global::System.DateTime> I_REN_DATE, global::System.Nullable<decimal> I_DOC_NO, global::System.Nullable<decimal> I_PAT_NO, object I_REN_COMMENTAIRE) {
            global::Oracle.DataAccess.Client.OracleCommand command = ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[0]));
            if ((I_REN_DATE.HasValue == true)) {
                command.Parameters[0].Value = ((System.DateTime)(I_REN_DATE.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((I_DOC_NO.HasValue == true)) {
                command.Parameters[1].Value = ((decimal)(I_DOC_NO.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((I_PAT_NO.HasValue == true)) {
                command.Parameters[2].Value = ((decimal)(I_PAT_NO.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((I_REN_COMMENTAIRE == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((object)(I_REN_COMMENTAIRE));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int PKG_REDOC_ADDDOCSCHEDULE(global::System.Nullable<decimal> I_HOR_UTI_NO, global::System.Nullable<decimal> I_HOR_DEBUT, global::System.Nullable<decimal> I_HOR_FIN, global::System.Nullable<decimal> I_HOR_JOUR) {
            global::Oracle.DataAccess.Client.OracleCommand command = ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[1]));
            if ((I_HOR_UTI_NO.HasValue == true)) {
                command.Parameters[0].Value = ((decimal)(I_HOR_UTI_NO.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((I_HOR_DEBUT.HasValue == true)) {
                command.Parameters[1].Value = ((decimal)(I_HOR_DEBUT.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((I_HOR_FIN.HasValue == true)) {
                command.Parameters[2].Value = ((decimal)(I_HOR_FIN.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((I_HOR_JOUR.HasValue == true)) {
                command.Parameters[3].Value = ((decimal)(I_HOR_JOUR.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int PKG_REDOC_ADDDOCSCHEDULEEXCEPTION(global::System.Nullable<decimal> I_EXC_UTI_NO, global::System.Nullable<global::System.DateTime> I_EXC_DEBUT, global::System.Nullable<global::System.DateTime> I_EXC_FIN, object I_EXC_COMMENTAIRE) {
            global::Oracle.DataAccess.Client.OracleCommand command = ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[2]));
            if ((I_EXC_UTI_NO.HasValue == true)) {
                command.Parameters[0].Value = ((decimal)(I_EXC_UTI_NO.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((I_EXC_DEBUT.HasValue == true)) {
                command.Parameters[1].Value = ((System.DateTime)(I_EXC_DEBUT.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((I_EXC_FIN.HasValue == true)) {
                command.Parameters[2].Value = ((System.DateTime)(I_EXC_FIN.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((I_EXC_COMMENTAIRE == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((object)(I_EXC_COMMENTAIRE));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int PKG_REDOC_ADDINVOICEEXAM(global::System.Nullable<decimal> I_LIG_FAC_NO, global::System.Nullable<decimal> I_LIG_LIS_NO) {
            global::Oracle.DataAccess.Client.OracleCommand command = ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[3]));
            if ((I_LIG_FAC_NO.HasValue == true)) {
                command.Parameters[0].Value = ((decimal)(I_LIG_FAC_NO.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((I_LIG_LIS_NO.HasValue == true)) {
                command.Parameters[1].Value = ((decimal)(I_LIG_LIS_NO.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int PKG_REDOC_ADDPATIENT(string I_PAT_NOM, string I_PAT_PRENOM, global::System.Nullable<global::System.DateTime> I_PAT_DATE_NAISSANCE, string I_PAT_ADRESSE, string I_PAT_EMAIL, string I_PAT_TELEPHONE, string I_PAT_NO_AVS) {
            global::Oracle.DataAccess.Client.OracleCommand command = ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[4]));
            if ((I_PAT_NOM == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(I_PAT_NOM));
            }
            if ((I_PAT_PRENOM == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(I_PAT_PRENOM));
            }
            if ((I_PAT_DATE_NAISSANCE.HasValue == true)) {
                command.Parameters[2].Value = ((System.DateTime)(I_PAT_DATE_NAISSANCE.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((I_PAT_ADRESSE == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(I_PAT_ADRESSE));
            }
            if ((I_PAT_EMAIL == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(I_PAT_EMAIL));
            }
            if ((I_PAT_TELEPHONE == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(I_PAT_TELEPHONE));
            }
            if ((I_PAT_NO_AVS == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(I_PAT_NO_AVS));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int PKG_REDOC_DELETEDOCSCHEDULE(global::System.Nullable<decimal> I_HOR_NO) {
            global::Oracle.DataAccess.Client.OracleCommand command = ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[5]));
            if ((I_HOR_NO.HasValue == true)) {
                command.Parameters[0].Value = ((decimal)(I_HOR_NO.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int PKG_REDOC_DELETEDOCSCHEDULEEXCEPTION(global::System.Nullable<decimal> I_EXC_NO) {
            global::Oracle.DataAccess.Client.OracleCommand command = ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[6]));
            if ((I_EXC_NO.HasValue == true)) {
                command.Parameters[0].Value = ((decimal)(I_EXC_NO.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int PKG_REDOC_DELETEPATIENT(global::System.Nullable<decimal> I_PAT_NO) {
            global::Oracle.DataAccess.Client.OracleCommand command = ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[7]));
            if ((I_PAT_NO.HasValue == true)) {
                command.Parameters[0].Value = ((decimal)(I_PAT_NO.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int PKG_REDOC_EDITAPPOINTMENT(global::System.Nullable<decimal> I_REN_NO, global::System.Nullable<global::System.DateTime> I_REN_DATE, global::System.Nullable<decimal> I_DOC_NO, global::System.Nullable<decimal> I_PAT_NO, global::System.Nullable<decimal> I_REN_ANNULE, object I_REN_COMMENTAIRE) {
            global::Oracle.DataAccess.Client.OracleCommand command = ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[8]));
            if ((I_REN_NO.HasValue == true)) {
                command.Parameters[0].Value = ((decimal)(I_REN_NO.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((I_REN_DATE.HasValue == true)) {
                command.Parameters[1].Value = ((System.DateTime)(I_REN_DATE.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((I_DOC_NO.HasValue == true)) {
                command.Parameters[2].Value = ((decimal)(I_DOC_NO.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((I_PAT_NO.HasValue == true)) {
                command.Parameters[3].Value = ((decimal)(I_PAT_NO.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((I_REN_ANNULE.HasValue == true)) {
                command.Parameters[4].Value = ((decimal)(I_REN_ANNULE.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((I_REN_COMMENTAIRE == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((object)(I_REN_COMMENTAIRE));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int PKG_REDOC_EDITPATIENT(global::System.Nullable<decimal> I_PAT_NO, string I_PAT_NOM, string I_PAT_PRENOM, global::System.Nullable<global::System.DateTime> I_PAT_DATE_NAISSANCE, string I_PAT_ADRESSE, string I_PAT_EMAIL, string I_PAT_TELEPHONE, string I_PAT_NO_AVS) {
            global::Oracle.DataAccess.Client.OracleCommand command = ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[9]));
            if ((I_PAT_NO.HasValue == true)) {
                command.Parameters[0].Value = ((decimal)(I_PAT_NO.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((I_PAT_NOM == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(I_PAT_NOM));
            }
            if ((I_PAT_PRENOM == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(I_PAT_PRENOM));
            }
            if ((I_PAT_DATE_NAISSANCE.HasValue == true)) {
                command.Parameters[3].Value = ((System.DateTime)(I_PAT_DATE_NAISSANCE.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((I_PAT_ADRESSE == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(I_PAT_ADRESSE));
            }
            if ((I_PAT_EMAIL == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(I_PAT_EMAIL));
            }
            if ((I_PAT_TELEPHONE == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(I_PAT_TELEPHONE));
            }
            if ((I_PAT_NO_AVS == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(I_PAT_NO_AVS));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<decimal> PKG_REDOC_ADDINVOICE(global::System.Nullable<decimal> I_FAC_REN_NO, global::System.Nullable<global::System.DateTime> I_FAC_DATE, global::System.Nullable<decimal> I_FAC_TOTAL) {
            global::Oracle.DataAccess.Client.OracleCommand command = ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[10]));
            if ((I_FAC_REN_NO.HasValue == true)) {
                command.Parameters[1].Value = ((decimal)(I_FAC_REN_NO.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((I_FAC_DATE.HasValue == true)) {
                command.Parameters[2].Value = ((System.DateTime)(I_FAC_DATE.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((I_FAC_TOTAL.HasValue == true)) {
                command.Parameters[3].Value = ((decimal)(I_FAC_TOTAL.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            try {
                command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((command.Parameters[0].Value == null) 
                        || (command.Parameters[0].Value.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<decimal>();
            }
            else {
                return new global::System.Nullable<decimal>(((decimal)(command.Parameters[0].Value)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual string PKG_REDOC_CHECKLOGINCREDENTIALS(string I_UTI_EMAIL, string I_UTI_MDP) {
            global::Oracle.DataAccess.Client.OracleCommand command = ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[11]));
            if ((I_UTI_EMAIL == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(I_UTI_EMAIL));
            }
            if ((I_UTI_MDP == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(I_UTI_MDP));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            try {
                command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((command.Parameters[0].Value == null) 
                        || (command.Parameters[0].Value.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((string)(command.Parameters[0].Value));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<decimal> PKG_REDOC_GETEXAMPRICE(global::System.Nullable<decimal> I_EXA_NO) {
            global::Oracle.DataAccess.Client.OracleCommand command = ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[12]));
            if ((I_EXA_NO.HasValue == true)) {
                command.Parameters[1].Value = ((decimal)(I_EXA_NO.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            try {
                command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((command.Parameters[0].Value == null) 
                        || (command.Parameters[0].Value.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<decimal>();
            }
            else {
                return new global::System.Nullable<decimal>(((decimal)(command.Parameters[0].Value)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int PKG_REDOC_EDITINVOICE(global::System.Nullable<decimal> I_FAC_NO, global::System.Nullable<global::System.DateTime> I_FAC_DATE, global::System.Nullable<decimal> I_FAC_PAYE) {
            global::Oracle.DataAccess.Client.OracleCommand command = ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[13]));
            if ((I_FAC_NO.HasValue == true)) {
                command.Parameters[0].Value = ((decimal)(I_FAC_NO.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((I_FAC_DATE.HasValue == true)) {
                command.Parameters[1].Value = ((System.DateTime)(I_FAC_DATE.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((I_FAC_PAYE.HasValue == true)) {
                command.Parameters[2].Value = ((decimal)(I_FAC_PAYE.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private CAB_EXCEPTION_HORAIRETableAdapter _cAB_EXCEPTION_HORAIRETableAdapter;
        
        private CAB_FACTURETableAdapter _cAB_FACTURETableAdapter;
        
        private CAB_HORAIRETableAdapter _cAB_HORAIRETableAdapter;
        
        private CAB_LIGNE_FACTURETableAdapter _cAB_LIGNE_FACTURETableAdapter;
        
        private CAB_LISTE_EXAMENSTableAdapter _cAB_LISTE_EXAMENSTableAdapter;
        
        private CAB_PATIENTTableAdapter _cAB_PATIENTTableAdapter;
        
        private CAB_RENDEZVOUSTableAdapter _cAB_RENDEZVOUSTableAdapter;
        
        private CAB_SPE_UTILISATEURTableAdapter _cAB_SPE_UTILISATEURTableAdapter;
        
        private CAB_SPECIALISATIONTableAdapter _cAB_SPECIALISATIONTableAdapter;
        
        private CAB_UTILISATEURTableAdapter _cAB_UTILISATEURTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public CAB_EXCEPTION_HORAIRETableAdapter CAB_EXCEPTION_HORAIRETableAdapter {
            get {
                return this._cAB_EXCEPTION_HORAIRETableAdapter;
            }
            set {
                this._cAB_EXCEPTION_HORAIRETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public CAB_FACTURETableAdapter CAB_FACTURETableAdapter {
            get {
                return this._cAB_FACTURETableAdapter;
            }
            set {
                this._cAB_FACTURETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public CAB_HORAIRETableAdapter CAB_HORAIRETableAdapter {
            get {
                return this._cAB_HORAIRETableAdapter;
            }
            set {
                this._cAB_HORAIRETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public CAB_LIGNE_FACTURETableAdapter CAB_LIGNE_FACTURETableAdapter {
            get {
                return this._cAB_LIGNE_FACTURETableAdapter;
            }
            set {
                this._cAB_LIGNE_FACTURETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public CAB_LISTE_EXAMENSTableAdapter CAB_LISTE_EXAMENSTableAdapter {
            get {
                return this._cAB_LISTE_EXAMENSTableAdapter;
            }
            set {
                this._cAB_LISTE_EXAMENSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public CAB_PATIENTTableAdapter CAB_PATIENTTableAdapter {
            get {
                return this._cAB_PATIENTTableAdapter;
            }
            set {
                this._cAB_PATIENTTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public CAB_RENDEZVOUSTableAdapter CAB_RENDEZVOUSTableAdapter {
            get {
                return this._cAB_RENDEZVOUSTableAdapter;
            }
            set {
                this._cAB_RENDEZVOUSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public CAB_SPE_UTILISATEURTableAdapter CAB_SPE_UTILISATEURTableAdapter {
            get {
                return this._cAB_SPE_UTILISATEURTableAdapter;
            }
            set {
                this._cAB_SPE_UTILISATEURTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public CAB_SPECIALISATIONTableAdapter CAB_SPECIALISATIONTableAdapter {
            get {
                return this._cAB_SPECIALISATIONTableAdapter;
            }
            set {
                this._cAB_SPECIALISATIONTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public CAB_UTILISATEURTableAdapter CAB_UTILISATEURTableAdapter {
            get {
                return this._cAB_UTILISATEURTableAdapter;
            }
            set {
                this._cAB_UTILISATEURTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._cAB_EXCEPTION_HORAIRETableAdapter != null) 
                            && (this._cAB_EXCEPTION_HORAIRETableAdapter.Connection != null))) {
                    return this._cAB_EXCEPTION_HORAIRETableAdapter.Connection;
                }
                if (((this._cAB_FACTURETableAdapter != null) 
                            && (this._cAB_FACTURETableAdapter.Connection != null))) {
                    return this._cAB_FACTURETableAdapter.Connection;
                }
                if (((this._cAB_HORAIRETableAdapter != null) 
                            && (this._cAB_HORAIRETableAdapter.Connection != null))) {
                    return this._cAB_HORAIRETableAdapter.Connection;
                }
                if (((this._cAB_LIGNE_FACTURETableAdapter != null) 
                            && (this._cAB_LIGNE_FACTURETableAdapter.Connection != null))) {
                    return this._cAB_LIGNE_FACTURETableAdapter.Connection;
                }
                if (((this._cAB_LISTE_EXAMENSTableAdapter != null) 
                            && (this._cAB_LISTE_EXAMENSTableAdapter.Connection != null))) {
                    return this._cAB_LISTE_EXAMENSTableAdapter.Connection;
                }
                if (((this._cAB_PATIENTTableAdapter != null) 
                            && (this._cAB_PATIENTTableAdapter.Connection != null))) {
                    return this._cAB_PATIENTTableAdapter.Connection;
                }
                if (((this._cAB_RENDEZVOUSTableAdapter != null) 
                            && (this._cAB_RENDEZVOUSTableAdapter.Connection != null))) {
                    return this._cAB_RENDEZVOUSTableAdapter.Connection;
                }
                if (((this._cAB_SPE_UTILISATEURTableAdapter != null) 
                            && (this._cAB_SPE_UTILISATEURTableAdapter.Connection != null))) {
                    return this._cAB_SPE_UTILISATEURTableAdapter.Connection;
                }
                if (((this._cAB_SPECIALISATIONTableAdapter != null) 
                            && (this._cAB_SPECIALISATIONTableAdapter.Connection != null))) {
                    return this._cAB_SPECIALISATIONTableAdapter.Connection;
                }
                if (((this._cAB_UTILISATEURTableAdapter != null) 
                            && (this._cAB_UTILISATEURTableAdapter.Connection != null))) {
                    return this._cAB_UTILISATEURTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._cAB_EXCEPTION_HORAIRETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cAB_FACTURETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cAB_HORAIRETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cAB_LIGNE_FACTURETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cAB_LISTE_EXAMENSTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cAB_PATIENTTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cAB_RENDEZVOUSTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cAB_SPE_UTILISATEURTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cAB_SPECIALISATIONTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cAB_UTILISATEURTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(DataSetRedoc dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._cAB_PATIENTTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CAB_PATIENT.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cAB_PATIENTTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cAB_UTILISATEURTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CAB_UTILISATEUR.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cAB_UTILISATEURTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cAB_RENDEZVOUSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CAB_RENDEZVOUS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cAB_RENDEZVOUSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cAB_SPECIALISATIONTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CAB_SPECIALISATION.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cAB_SPECIALISATIONTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cAB_FACTURETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CAB_FACTURE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cAB_FACTURETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cAB_LISTE_EXAMENSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CAB_LISTE_EXAMENS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cAB_LISTE_EXAMENSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cAB_EXCEPTION_HORAIRETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CAB_EXCEPTION_HORAIRE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cAB_EXCEPTION_HORAIRETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cAB_SPE_UTILISATEURTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CAB_SPE_UTILISATEUR.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cAB_SPE_UTILISATEURTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cAB_LIGNE_FACTURETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CAB_LIGNE_FACTURE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cAB_LIGNE_FACTURETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cAB_HORAIRETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CAB_HORAIRE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cAB_HORAIRETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(DataSetRedoc dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._cAB_PATIENTTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CAB_PATIENT.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cAB_PATIENTTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cAB_UTILISATEURTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CAB_UTILISATEUR.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cAB_UTILISATEURTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cAB_RENDEZVOUSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CAB_RENDEZVOUS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cAB_RENDEZVOUSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cAB_SPECIALISATIONTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CAB_SPECIALISATION.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cAB_SPECIALISATIONTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cAB_FACTURETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CAB_FACTURE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cAB_FACTURETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cAB_LISTE_EXAMENSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CAB_LISTE_EXAMENS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cAB_LISTE_EXAMENSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cAB_EXCEPTION_HORAIRETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CAB_EXCEPTION_HORAIRE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cAB_EXCEPTION_HORAIRETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cAB_SPE_UTILISATEURTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CAB_SPE_UTILISATEUR.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cAB_SPE_UTILISATEURTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cAB_LIGNE_FACTURETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CAB_LIGNE_FACTURE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cAB_LIGNE_FACTURETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cAB_HORAIRETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CAB_HORAIRE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cAB_HORAIRETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(DataSetRedoc dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._cAB_HORAIRETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CAB_HORAIRE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cAB_HORAIRETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cAB_LIGNE_FACTURETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CAB_LIGNE_FACTURE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cAB_LIGNE_FACTURETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cAB_SPE_UTILISATEURTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CAB_SPE_UTILISATEUR.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cAB_SPE_UTILISATEURTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cAB_EXCEPTION_HORAIRETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CAB_EXCEPTION_HORAIRE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cAB_EXCEPTION_HORAIRETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cAB_LISTE_EXAMENSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CAB_LISTE_EXAMENS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cAB_LISTE_EXAMENSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cAB_FACTURETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CAB_FACTURE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cAB_FACTURETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cAB_SPECIALISATIONTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CAB_SPECIALISATION.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cAB_SPECIALISATIONTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cAB_RENDEZVOUSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CAB_RENDEZVOUS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cAB_RENDEZVOUSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cAB_UTILISATEURTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CAB_UTILISATEUR.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cAB_UTILISATEURTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cAB_PATIENTTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CAB_PATIENT.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cAB_PATIENTTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(DataSetRedoc dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._cAB_EXCEPTION_HORAIRETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cAB_EXCEPTION_HORAIRETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._cAB_FACTURETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cAB_FACTURETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._cAB_HORAIRETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cAB_HORAIRETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._cAB_LIGNE_FACTURETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cAB_LIGNE_FACTURETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._cAB_LISTE_EXAMENSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cAB_LISTE_EXAMENSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._cAB_PATIENTTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cAB_PATIENTTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._cAB_RENDEZVOUSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cAB_RENDEZVOUSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._cAB_SPE_UTILISATEURTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cAB_SPE_UTILISATEURTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._cAB_SPECIALISATIONTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cAB_SPECIALISATIONTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._cAB_UTILISATEURTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cAB_UTILISATEURTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager ne contient pas d\'informations de connexion. Définissez chaqu" +
                        "e propriété TableAdapterManager TableAdapter à une instance valide de TableAdapt" +
                        "er.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("La transaction ne peut pas commencer. La connexion de données actuelle ne prend p" +
                        "as en charge les transactions ou l\'état actuel n\'autorise pas le début de la tra" +
                        "nsaction.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._cAB_EXCEPTION_HORAIRETableAdapter != null)) {
                    revertConnections.Add(this._cAB_EXCEPTION_HORAIRETableAdapter, this._cAB_EXCEPTION_HORAIRETableAdapter.Connection);
                    this._cAB_EXCEPTION_HORAIRETableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(workConnection));
                    this._cAB_EXCEPTION_HORAIRETableAdapter.Transaction = ((global::Oracle.DataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._cAB_EXCEPTION_HORAIRETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cAB_EXCEPTION_HORAIRETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cAB_EXCEPTION_HORAIRETableAdapter.Adapter);
                    }
                }
                if ((this._cAB_FACTURETableAdapter != null)) {
                    revertConnections.Add(this._cAB_FACTURETableAdapter, this._cAB_FACTURETableAdapter.Connection);
                    this._cAB_FACTURETableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(workConnection));
                    this._cAB_FACTURETableAdapter.Transaction = ((global::Oracle.DataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._cAB_FACTURETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cAB_FACTURETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cAB_FACTURETableAdapter.Adapter);
                    }
                }
                if ((this._cAB_HORAIRETableAdapter != null)) {
                    revertConnections.Add(this._cAB_HORAIRETableAdapter, this._cAB_HORAIRETableAdapter.Connection);
                    this._cAB_HORAIRETableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(workConnection));
                    this._cAB_HORAIRETableAdapter.Transaction = ((global::Oracle.DataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._cAB_HORAIRETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cAB_HORAIRETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cAB_HORAIRETableAdapter.Adapter);
                    }
                }
                if ((this._cAB_LIGNE_FACTURETableAdapter != null)) {
                    revertConnections.Add(this._cAB_LIGNE_FACTURETableAdapter, this._cAB_LIGNE_FACTURETableAdapter.Connection);
                    this._cAB_LIGNE_FACTURETableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(workConnection));
                    this._cAB_LIGNE_FACTURETableAdapter.Transaction = ((global::Oracle.DataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._cAB_LIGNE_FACTURETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cAB_LIGNE_FACTURETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cAB_LIGNE_FACTURETableAdapter.Adapter);
                    }
                }
                if ((this._cAB_LISTE_EXAMENSTableAdapter != null)) {
                    revertConnections.Add(this._cAB_LISTE_EXAMENSTableAdapter, this._cAB_LISTE_EXAMENSTableAdapter.Connection);
                    this._cAB_LISTE_EXAMENSTableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(workConnection));
                    this._cAB_LISTE_EXAMENSTableAdapter.Transaction = ((global::Oracle.DataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._cAB_LISTE_EXAMENSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cAB_LISTE_EXAMENSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cAB_LISTE_EXAMENSTableAdapter.Adapter);
                    }
                }
                if ((this._cAB_PATIENTTableAdapter != null)) {
                    revertConnections.Add(this._cAB_PATIENTTableAdapter, this._cAB_PATIENTTableAdapter.Connection);
                    this._cAB_PATIENTTableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(workConnection));
                    this._cAB_PATIENTTableAdapter.Transaction = ((global::Oracle.DataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._cAB_PATIENTTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cAB_PATIENTTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cAB_PATIENTTableAdapter.Adapter);
                    }
                }
                if ((this._cAB_RENDEZVOUSTableAdapter != null)) {
                    revertConnections.Add(this._cAB_RENDEZVOUSTableAdapter, this._cAB_RENDEZVOUSTableAdapter.Connection);
                    this._cAB_RENDEZVOUSTableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(workConnection));
                    this._cAB_RENDEZVOUSTableAdapter.Transaction = ((global::Oracle.DataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._cAB_RENDEZVOUSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cAB_RENDEZVOUSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cAB_RENDEZVOUSTableAdapter.Adapter);
                    }
                }
                if ((this._cAB_SPE_UTILISATEURTableAdapter != null)) {
                    revertConnections.Add(this._cAB_SPE_UTILISATEURTableAdapter, this._cAB_SPE_UTILISATEURTableAdapter.Connection);
                    this._cAB_SPE_UTILISATEURTableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(workConnection));
                    this._cAB_SPE_UTILISATEURTableAdapter.Transaction = ((global::Oracle.DataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._cAB_SPE_UTILISATEURTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cAB_SPE_UTILISATEURTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cAB_SPE_UTILISATEURTableAdapter.Adapter);
                    }
                }
                if ((this._cAB_SPECIALISATIONTableAdapter != null)) {
                    revertConnections.Add(this._cAB_SPECIALISATIONTableAdapter, this._cAB_SPECIALISATIONTableAdapter.Connection);
                    this._cAB_SPECIALISATIONTableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(workConnection));
                    this._cAB_SPECIALISATIONTableAdapter.Transaction = ((global::Oracle.DataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._cAB_SPECIALISATIONTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cAB_SPECIALISATIONTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cAB_SPECIALISATIONTableAdapter.Adapter);
                    }
                }
                if ((this._cAB_UTILISATEURTableAdapter != null)) {
                    revertConnections.Add(this._cAB_UTILISATEURTableAdapter, this._cAB_UTILISATEURTableAdapter.Connection);
                    this._cAB_UTILISATEURTableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(workConnection));
                    this._cAB_UTILISATEURTableAdapter.Transaction = ((global::Oracle.DataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._cAB_UTILISATEURTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cAB_UTILISATEURTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cAB_UTILISATEURTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._cAB_EXCEPTION_HORAIRETableAdapter != null)) {
                    this._cAB_EXCEPTION_HORAIRETableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(revertConnections[this._cAB_EXCEPTION_HORAIRETableAdapter]));
                    this._cAB_EXCEPTION_HORAIRETableAdapter.Transaction = null;
                }
                if ((this._cAB_FACTURETableAdapter != null)) {
                    this._cAB_FACTURETableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(revertConnections[this._cAB_FACTURETableAdapter]));
                    this._cAB_FACTURETableAdapter.Transaction = null;
                }
                if ((this._cAB_HORAIRETableAdapter != null)) {
                    this._cAB_HORAIRETableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(revertConnections[this._cAB_HORAIRETableAdapter]));
                    this._cAB_HORAIRETableAdapter.Transaction = null;
                }
                if ((this._cAB_LIGNE_FACTURETableAdapter != null)) {
                    this._cAB_LIGNE_FACTURETableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(revertConnections[this._cAB_LIGNE_FACTURETableAdapter]));
                    this._cAB_LIGNE_FACTURETableAdapter.Transaction = null;
                }
                if ((this._cAB_LISTE_EXAMENSTableAdapter != null)) {
                    this._cAB_LISTE_EXAMENSTableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(revertConnections[this._cAB_LISTE_EXAMENSTableAdapter]));
                    this._cAB_LISTE_EXAMENSTableAdapter.Transaction = null;
                }
                if ((this._cAB_PATIENTTableAdapter != null)) {
                    this._cAB_PATIENTTableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(revertConnections[this._cAB_PATIENTTableAdapter]));
                    this._cAB_PATIENTTableAdapter.Transaction = null;
                }
                if ((this._cAB_RENDEZVOUSTableAdapter != null)) {
                    this._cAB_RENDEZVOUSTableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(revertConnections[this._cAB_RENDEZVOUSTableAdapter]));
                    this._cAB_RENDEZVOUSTableAdapter.Transaction = null;
                }
                if ((this._cAB_SPE_UTILISATEURTableAdapter != null)) {
                    this._cAB_SPE_UTILISATEURTableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(revertConnections[this._cAB_SPE_UTILISATEURTableAdapter]));
                    this._cAB_SPE_UTILISATEURTableAdapter.Transaction = null;
                }
                if ((this._cAB_SPECIALISATIONTableAdapter != null)) {
                    this._cAB_SPECIALISATIONTableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(revertConnections[this._cAB_SPECIALISATIONTableAdapter]));
                    this._cAB_SPECIALISATIONTableAdapter.Transaction = null;
                }
                if ((this._cAB_UTILISATEURTableAdapter != null)) {
                    this._cAB_UTILISATEURTableAdapter.Connection = ((global::Oracle.DataAccess.Client.OracleConnection)(revertConnections[this._cAB_UTILISATEURTableAdapter]));
                    this._cAB_UTILISATEURTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591